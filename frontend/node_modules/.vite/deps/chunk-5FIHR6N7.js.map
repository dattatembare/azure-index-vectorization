{
  "version": 3,
  "sources": ["../../@fluentui/react/lib/version.ts", "../../@fluentui/react/lib/components/Dropdown/components/Dropdown/Dropdown.base.tsx", "../../@fluentui/react/lib/components/Callout/components/Callout/Callout.tsx", "../../@fluentui/react/lib/components/Callout/components/Callout/CalloutContent.base.tsx", "../../@fluentui/react/lib/common/common/DirectionalHint.ts", "../../@fluentui/react/lib/utilities/positioning/utilities/positioning/positioning.types.ts", "../../@fluentui/react/lib/utilities/positioning/utilities/positioning/positioning.ts", "../../@fluentui/react/lib/components/Popup/components/Popup/Popup.tsx", "../../@fluentui/style-utilities/lib/utilities/utilities/buildClassMap.ts", "../../@fluentui/style-utilities/lib/utilities/utilities/icons.ts", "../../@fluentui/style-utilities/lib/utilities/utilities/getIconClassName.ts", "../../@fluentui/theme/lib/utilities/utilities/makeSemanticColors.ts", "../../@fluentui/theme/lib/mergeThemes.ts", "../../@fluentui/theme/lib/colors/colors/FluentColors.ts", "../../@fluentui/theme/lib/colors/colors/DefaultPalette.ts", "../../@fluentui/theme/lib/effects/effects/FluentDepths.ts", "../../@fluentui/theme/lib/effects/effects/DefaultEffects.ts", "../../@fluentui/theme/lib/spacing/spacing/DefaultSpacing.ts", "../../@fluentui/theme/lib/motion/motion/FluentMotion.ts", "../../@fluentui/theme/lib/motion/motion/AnimationStyles.ts", "../../@fluentui/theme/lib/fonts/fonts/FluentFonts.ts", "../../@fluentui/theme/lib/fonts/fonts/createFontStyles.ts", "../../@fluentui/theme/lib/fonts/fonts/DefaultFontStyles.ts", "../../@fluentui/theme/lib/createTheme.ts", "../../@fluentui/theme/lib/FluentTheme.ts", "../../@fluentui/theme/lib/version.ts", "../../@fluentui/style-utilities/lib/styles/styles/CommonStyles.ts", "../../@fluentui/style-utilities/lib/styles/styles/zIndexes.ts", "../../@fluentui/style-utilities/lib/styles/styles/getFocusStyle.ts", "../../@fluentui/style-utilities/lib/styles/styles/hiddenContentStyle.ts", "../../@fluentui/style-utilities/lib/styles/styles/PulsingBeaconAnimationStyles.ts", "../../@fluentui/style-utilities/lib/styles/styles/getGlobalClassNames.ts", "../../@fluentui/style-utilities/lib/styles/styles/scheme.ts", "../../@microsoft/load-themed-styles/src/index.ts", "../../@fluentui/style-utilities/lib/styles/styles/theme.ts", "../../@fluentui/style-utilities/lib/styles/styles/GeneralStyles.ts", "../../@fluentui/style-utilities/lib/styles/styles/getFadedOverflowStyle.ts", "../../@fluentui/style-utilities/lib/styles/styles/getPlaceholderStyles.ts", "../../@fluentui/style-utilities/lib/classNames/classNames/AnimationClassNames.ts", "../../@fluentui/style-utilities/lib/classNames/classNames/FontClassNames.ts", "../../@fluentui/style-utilities/lib/classNames/classNames/ColorClassNames.ts", "../../@fluentui/style-utilities/lib/cdn.ts", "../../@fluentui/style-utilities/lib/version.ts", "../../@fluentui/style-utilities/lib/index.ts", "../../@fluentui/react/lib/components/Callout/components/Callout/CalloutContent.styles.ts", "../../@fluentui/react/lib/components/Callout/components/Callout/CalloutContent.tsx", "../../@fluentui/react-portal-compat-context/src/PortalCompatContext.ts", "../../@fluentui/react/lib/components/Layer/components/Layer/Layer.base.tsx", "../../@fluentui/react/lib/components/Fabric/components/Fabric/Fabric.base.tsx", "../../@fluentui/react/lib/components/Fabric/components/Fabric/Fabric.styles.ts", "../../@fluentui/react/lib/components/Fabric/components/Fabric/Fabric.tsx", "../../@fluentui/react/lib/components/Layer/components/Layer/Layer.notification.ts", "../../@fluentui/react/lib/components/Layer/components/Layer/Layer.styles.ts", "../../@fluentui/react/lib/components/Layer/components/Layer/Layer.tsx", "../../@fluentui/react/lib/components/Layer/components/Layer/LayerHost.tsx", "../../@fluentui/react/lib/components/Callout/components/Callout/FocusTrapCallout.tsx", "../../@fluentui/react/lib/components/FocusTrapZone/components/FocusTrapZone/FocusTrapZone.tsx", "../../@fluentui/react/lib/components/Button/components/Button/BaseButton.tsx", "../../@fluentui/react/lib/components/Icon/components/Icon/Icon.base.tsx", "../../@fluentui/react/lib/components/Icon/components/Icon/Icon.types.ts", "../../@fluentui/react/lib/components/Image/components/Image/Image.base.tsx", "../../@fluentui/react/lib/components/Image/components/Image/Image.types.ts", "../../@fluentui/react/lib/components/Image/components/Image/Image.styles.ts", "../../@fluentui/react/lib/components/Image/components/Image/Image.tsx", "../../@fluentui/react/lib/components/Icon/components/Icon/FontIcon.tsx", "../../@fluentui/react/lib/components/Icon/components/Icon/Icon.styles.ts", "../../@fluentui/react/lib/components/Icon/components/Icon/Icon.tsx", "../../@fluentui/react/lib/components/Icon/components/Icon/ImageIcon.tsx", "../../@fluentui/react/lib/components/ContextualMenu/components/ContextualMenu/ContextualMenu.tsx", "../../@fluentui/react/lib/components/ContextualMenu/components/ContextualMenu/ContextualMenu.base.tsx", "../../@fluentui/react/lib/components/ContextualMenu/components/ContextualMenu/ContextualMenu.types.ts", "../../@fluentui/react-focus/lib/version.ts", "../../@fluentui/react-focus/lib/components/FocusZone/components/FocusZone/FocusZone.tsx", "../../@fluentui/react-focus/lib/components/FocusZone/components/FocusZone/FocusZone.types.ts", "../../@fluentui/react/lib/utilities/contextualMenu/utilities/contextualMenu/contextualMenuUtility.ts", "../../@fluentui/react/lib/components/ContextualMenu/components/ContextualMenu/ContextualMenuItem.base.tsx", "../../@fluentui/react/lib/components/Divider/components/Divider/VerticalDivider.classNames.ts", "../../@fluentui/react/lib/components/ContextualMenu/components/ContextualMenu/ContextualMenu.cnstyles.ts", "../../@fluentui/react/lib/components/ContextualMenu/components/ContextualMenu/ContextualMenu.classNames.ts", "../../@fluentui/react/lib/components/ContextualMenu/components/ContextualMenu/ContextualMenuItem.ts", "../../@fluentui/react/lib/components/ContextualMenu/ContextualMenuItemWrapper/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuAnchor.tsx", "../../@fluentui/react/lib/components/ContextualMenu/ContextualMenuItemWrapper/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuItemWrapper.tsx", "../../@fluentui/react/lib/utilities/keytips/utilities/keytips/IKeytipTransitionKey.ts", "../../@fluentui/react/lib/utilities/keytips/utilities/keytips/KeytipConfig.ts", "../../@fluentui/react/lib/utilities/keytips/utilities/keytips/KeytipConstants.ts", "../../@fluentui/react/lib/utilities/keytips/utilities/keytips/KeytipManager.ts", "../../@fluentui/react/lib/utilities/keytips/utilities/keytips/KeytipUtils.ts", "../../@fluentui/react/lib/components/KeytipData/components/KeytipData/useKeytipData.ts", "../../@fluentui/react/lib/components/KeytipData/components/KeytipData/KeytipData.tsx", "../../@fluentui/react/lib/components/KeytipData/components/KeytipData/useKeytipRef.ts", "../../@fluentui/react/lib/components/ContextualMenu/ContextualMenuItemWrapper/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuButton.tsx", "../../@fluentui/react/lib/components/ContextualMenu/ContextualMenuItemWrapper/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuSplitButton.tsx", "../../@fluentui/react/lib/components/Divider/components/Divider/VerticalDivider.styles.ts", "../../@fluentui/react/lib/components/Divider/components/Divider/VerticalDivider.base.tsx", "../../@fluentui/react/lib/components/Divider/components/Divider/VerticalDivider.tsx", "../../@fluentui/react/lib/utilities/hooks/utilities/hooks/useResponsiveMode.tsx", "../../@fluentui/react/lib/utilities/decorators/utilities/decorators/withResponsiveMode.tsx", "../../@fluentui/react/lib/utilities/decorators/utilities/decorators/BaseDecorator.ts", "../../@fluentui/react/lib/utilities/MenuContext/utilities/MenuContext/MenuContext.ts", "../../@fluentui/react/lib/components/ContextualMenu/components/ContextualMenu/ContextualMenu.styles.ts", "../../@fluentui/react/lib/components/Button/components/Button/BaseButton.classNames.ts", "../../@fluentui/react/lib/components/Button/SplitButton/components/Button/SplitButton/SplitButton.classNames.ts", "../../@fluentui/react/lib/components/Button/components/Button/Button.types.ts", "../../@fluentui/react/lib/components/Button/components/Button/Button.tsx", "../../@fluentui/react/lib/components/Button/DefaultButton/components/Button/DefaultButton/DefaultButton.tsx", "../../@fluentui/react/lib/components/Button/components/Button/BaseButton.styles.ts", "../../@fluentui/react/lib/components/Button/SplitButton/components/Button/SplitButton/SplitButton.styles.ts", "../../@fluentui/react/lib/components/Button/components/Button/ButtonThemes.ts", "../../@fluentui/react/lib/components/Button/DefaultButton/components/Button/DefaultButton/DefaultButton.styles.ts", "../../@fluentui/react/lib/components/Button/ActionButton/components/Button/ActionButton/ActionButton.tsx", "../../@fluentui/react/lib/components/Button/ActionButton/components/Button/ActionButton/ActionButton.styles.ts", "../../@fluentui/react/lib/components/Button/CompoundButton/components/Button/CompoundButton/CompoundButton.tsx", "../../@fluentui/react/lib/components/Button/CompoundButton/components/Button/CompoundButton/CompoundButton.styles.ts", "../../@fluentui/react/lib/components/Button/IconButton/components/Button/IconButton/IconButton.tsx", "../../@fluentui/react/lib/components/Button/IconButton/components/Button/IconButton/IconButton.styles.ts", "../../@fluentui/react/lib/components/Button/PrimaryButton/components/Button/PrimaryButton/PrimaryButton.tsx", "../../@fluentui/react/lib/components/Button/CommandBarButton/components/Button/CommandBarButton/CommandBarButton.tsx", "../../@fluentui/react/lib/components/Button/CommandBarButton/components/Button/CommandBarButton/CommandBarButton.styles.ts", "../../@fluentui/react/lib/components/Button/CommandButton/components/Button/CommandButton/CommandButton.tsx", "../../@fluentui/react/lib/components/Button/MessageBarButton/components/Button/MessageBarButton/MessageBarButton.tsx", "../../@fluentui/react/lib/components/Button/MessageBarButton/components/Button/MessageBarButton/MessageBarButton.styles.ts", "../../@fluentui/react/lib/utilities/selectableOption/utilities/selectableOption/SelectableOption.ts", "../../@fluentui/react/lib/utilities/selectableOption/utilities/selectableOption/SelectableOption.types.ts", "../../@fluentui/react/lib/components/Dropdown/utilities/components/Dropdown/utilities/DropdownSizePosCache.ts", "../../@fluentui/react/lib/components/Label/components/Label/Label.base.tsx", "../../@fluentui/react/lib/components/Label/components/Label/Label.styles.ts", "../../@fluentui/react/lib/components/Label/components/Label/Label.tsx", "../../@fluentui/react/lib/components/Panel/components/Panel/Panel.base.tsx", "../../@fluentui/react/lib/components/Overlay/components/Overlay/Overlay.base.tsx", "../../@fluentui/react/lib/components/Overlay/components/Overlay/Overlay.styles.ts", "../../@fluentui/react/lib/components/Overlay/components/Overlay/Overlay.tsx", "../../@fluentui/react/lib/components/Panel/components/Panel/Panel.types.ts", "../../@fluentui/react/lib/components/Panel/components/Panel/Panel.styles.ts", "../../@fluentui/react/lib/components/Panel/components/Panel/Panel.ts", "../../@fluentui/react/lib/components/Checkbox/components/Checkbox/Checkbox.base.tsx", "../../@fluentui/react/lib/components/Checkbox/components/Checkbox/Checkbox.styles.ts", "../../@fluentui/react/lib/components/Checkbox/components/Checkbox/Checkbox.tsx", "../../@fluentui/react/lib/components/Dropdown/components/Dropdown/Dropdown.styles.ts", "../../@fluentui/react/lib/components/Dropdown/components/Dropdown/Dropdown.tsx"],
  "sourcesContent": ["// Do not modify this file; it is generated as part of publish.\n// The checked in version is a placeholder only and will not be updated.\nimport { setVersion } from '@fluentui/set-version';\nsetVersion('@fluentui/react', '8.110.2');", "import * as React from 'react';\nimport {\n  css,\n  KeyCodes,\n  classNamesFunction,\n  divProperties,\n  findIndex,\n  getDocument,\n  getFirstFocusable,\n  getId,\n  getLastFocusable,\n  getNativeProps,\n  initializeComponentRef,\n  isIOS,\n  isMac,\n  mergeAriaAttributeValues,\n  safeRequestAnimationFrame,\n  warn,\n  warnDeprecations,\n  warnMutuallyExclusive,\n} from '../../Utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { CommandButton } from '../../Button';\nimport { DropdownMenuItemType } from './Dropdown.types';\nimport { DropdownSizePosCache } from './utilities/DropdownSizePosCache';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { RectangleEdge } from '../../Positioning';\nimport { Icon } from '../../Icon';\nimport { Label } from '../../Label';\nimport { Panel } from '../../Panel';\nimport { ResponsiveMode, useResponsiveMode } from '../../ResponsiveMode';\nimport { SelectableOptionMenuItemType, getAllSelectedOptions } from '../../SelectableOption';\n// import and use V7 Checkbox to ensure no breaking changes.\nimport { Checkbox } from '../../Checkbox';\nimport { getNextElement, getPreviousElement, getPropsWithDefaults } from '@fluentui/utilities';\nimport { useMergedRefs, usePrevious } from '@fluentui/react-hooks';\nimport type { IStyleFunctionOrObject } from '../../Utilities';\nimport type {\n  IDropdownOption,\n  IDropdownProps,\n  IDropdownStyleProps,\n  IDropdownStyles,\n  IDropdown,\n} from './Dropdown.types';\nimport type { ICalloutPositionedInfo } from '../../Positioning';\nimport type { ILabelStyleProps, ILabelStyles } from '../../Label';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IPanelStyleProps, IPanelStyles } from '../../Panel';\nimport type { IWithResponsiveModeState } from '../../ResponsiveMode';\nimport type { ISelectableDroppableTextProps } from '../../SelectableOption';\nimport type { ICheckboxStyleProps, ICheckboxStyles } from '../../Checkbox';\nimport { IFocusTrapZoneProps } from '../FocusTrapZone/FocusTrapZone.types';\n\nconst COMPONENT_NAME = 'Dropdown';\nconst getClassNames = classNamesFunction<IDropdownStyleProps, IDropdownStyles>();\n\n/** Internal only props interface to support mixing in responsive mode */\n// eslint-disable-next-line deprecation/deprecation\ninterface IDropdownInternalProps extends Omit<IDropdownProps, 'ref'>, IWithResponsiveModeState {\n  hoisted: {\n    rootRef: React.RefObject<HTMLDivElement>;\n    selectedIndices: number[];\n    setSelectedIndices: React.Dispatch<React.SetStateAction<number[]>>;\n  };\n}\n\ninterface IDropdownState {\n  isOpen: boolean;\n  /** Used to track whether focus is already within the Dropdown, for openOnFocus handling. */\n  hasFocus: boolean;\n  calloutRenderEdge?: RectangleEdge;\n}\n\nconst DEFAULT_PROPS: Partial<IDropdownProps> = {\n  options: [],\n};\n\nfunction useSelectedItemsState({\n  defaultSelectedKeys,\n  selectedKeys,\n  defaultSelectedKey,\n  selectedKey,\n  options,\n  multiSelect,\n}: IDropdownProps) {\n  const oldOptions = usePrevious(options);\n  const [selectedIndices, setSelectedIndices] = React.useState<number[]>([]);\n\n  // In controlled component usage where selectedKey is provided, update the selectedIndex\n  // state if the key or options change.\n  let selectedKeyPropToUse: string | number | string[] | number[] | null | undefined;\n\n  // this does a shallow compare (assumes options are pure), for the purposes of determining whether\n  // defaultSelectedKey/defaultSelectedKeys are respected.\n  const didOptionsChange = options !== oldOptions;\n\n  if (multiSelect) {\n    if (didOptionsChange && defaultSelectedKeys !== undefined) {\n      selectedKeyPropToUse = defaultSelectedKeys;\n    } else {\n      selectedKeyPropToUse = selectedKeys;\n    }\n  } else {\n    if (didOptionsChange && defaultSelectedKey !== undefined) {\n      selectedKeyPropToUse = defaultSelectedKey;\n    } else {\n      selectedKeyPropToUse = selectedKey;\n    }\n  }\n\n  const oldSelectedKeyProp = usePrevious(selectedKeyPropToUse);\n\n  React.useEffect(() => {\n    /** Get all selected indexes for multi-select mode */\n    const getSelectedIndexes = (): number[] => {\n      if (selectedKeyPropToUse === undefined) {\n        if (multiSelect) {\n          return getAllSelectedIndices();\n        }\n        const selectedIndex = getSelectedIndex(null);\n        return selectedIndex !== -1 ? [selectedIndex] : [];\n      } else if (!Array.isArray(selectedKeyPropToUse)) {\n        const selectedIndex = getSelectedIndex(selectedKeyPropToUse);\n        return selectedIndex !== -1 ? [selectedIndex] : [];\n      }\n\n      const returnValue: number[] = [];\n      for (const key of selectedKeyPropToUse) {\n        const selectedIndex = getSelectedIndex(key);\n        selectedIndex !== -1 && returnValue.push(selectedIndex);\n      }\n      return returnValue;\n    };\n\n    const getAllSelectedIndices = (): number[] => {\n      return options\n        .map((option: IDropdownOption, index: number) => (option.selected ? index : -1))\n        .filter(index => index !== -1);\n    };\n\n    const getSelectedIndex = (searchKey: string | number | null | undefined): number => {\n      return findIndex(options, option => {\n        // eslint-disable-next-line eqeqeq\n        if (searchKey != null) {\n          return option.key === searchKey;\n        } else {\n          // eslint-disable-next-line deprecation/deprecation\n          return !!option.selected || !!option.isSelected;\n        }\n      });\n    };\n\n    if (\n      (selectedKeyPropToUse !== undefined || !oldOptions) &&\n      (selectedKeyPropToUse !== oldSelectedKeyProp || didOptionsChange)\n    ) {\n      setSelectedIndices(getSelectedIndexes());\n    }\n  }, [didOptionsChange, multiSelect, oldOptions, oldSelectedKeyProp, options, selectedKeyPropToUse]);\n\n  return [selectedIndices, setSelectedIndices] as const;\n}\n\nexport const DropdownBase: React.FunctionComponent<IDropdownProps> = React.forwardRef<HTMLDivElement, IDropdownProps>(\n  (propsWithoutDefaults, forwardedRef) => {\n    const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n    const rootRef = React.useRef<HTMLDivElement>(null);\n    const mergedRootRef = useMergedRefs(forwardedRef, rootRef);\n\n    const responsiveMode = useResponsiveMode(rootRef, props.responsiveMode);\n    const [selectedIndices, setSelectedIndices] = useSelectedItemsState(props);\n\n    return (\n      <DropdownInternal\n        {...(props as Omit<IDropdownProps, 'ref'>)}\n        responsiveMode={responsiveMode}\n        hoisted={{ rootRef: mergedRootRef, selectedIndices, setSelectedIndices }}\n      />\n    );\n  },\n);\nDropdownBase.displayName = 'DropdownBase';\n\nclass DropdownInternal extends React.Component<IDropdownInternalProps, IDropdownState> implements IDropdown {\n  public static defaultProps = {\n    options: [] as IDropdownOption[],\n  };\n\n  private _host = React.createRef<HTMLDivElement>();\n  private _focusZone = React.createRef<FocusZone>();\n  private _dropDown = React.createRef<HTMLDivElement>();\n  private _id: string;\n  private _labelId: string;\n  private _listId: string;\n  private _optionId: string;\n  private _isScrollIdle: boolean;\n  /** Flag for tracking if the Callout has previously been positioned.\n   *  This is necessary to properly control focus state when the width\n   *  of the Dropdown is dynamic (e.g, \"fit-content\").\n   */\n  private _hasBeenPositioned: boolean;\n  private readonly _scrollIdleDelay: number = 250 /* ms */;\n  private _scrollIdleTimeoutId: number | undefined;\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n  private _lastKeyDownWasAltOrMeta: boolean | undefined;\n  private _sizePosCache: DropdownSizePosCache = new DropdownSizePosCache();\n  private _classNames: IProcessedStyleSet<IDropdownStyles>;\n  private _requestAnimationFrame = safeRequestAnimationFrame(this);\n  /** Flag for when we get the first mouseMove */\n  private _gotMouseMove: boolean;\n  /** Flag for tracking whether focus is triggered by click (alternatively triggered by keyboard nav) */\n  private _isFocusedByClick: boolean;\n\n  constructor(props: IDropdownInternalProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    const { multiSelect, selectedKey, selectedKeys, defaultSelectedKey, defaultSelectedKeys, options } = props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations(COMPONENT_NAME, props, {\n        isDisabled: 'disabled',\n        onChanged: 'onChange',\n        placeHolder: 'placeholder',\n        onRenderPlaceHolder: 'onRenderPlaceholder',\n      });\n\n      warnMutuallyExclusive(COMPONENT_NAME, props, {\n        defaultSelectedKey: 'selectedKey',\n        defaultSelectedKeys: 'selectedKeys',\n        selectedKeys: 'selectedKey',\n      });\n\n      if (multiSelect) {\n        const warnMultiSelect = (prop: keyof IDropdownProps) =>\n          warn(`Dropdown property '${prop}' cannot be used when 'multiSelect' is true. Use '${prop}s' instead.`);\n        if (selectedKey !== undefined) {\n          warnMultiSelect('selectedKey');\n        }\n        if (defaultSelectedKey !== undefined) {\n          warnMultiSelect('defaultSelectedKey');\n        }\n      } else {\n        const warnNotMultiSelect = (prop: keyof IDropdownProps) =>\n          warn(`Dropdown property '${prop}s' cannot be used when 'multiSelect' is false/unset. Use '${prop}' instead.`);\n        if (selectedKeys !== undefined) {\n          warnNotMultiSelect('selectedKey');\n        }\n        if (defaultSelectedKeys !== undefined) {\n          warnNotMultiSelect('defaultSelectedKey');\n        }\n      }\n    }\n\n    this._id = props.id || getId('Dropdown');\n    this._labelId = this._id + '-label';\n    this._listId = this._id + '-list';\n    this._optionId = this._id + '-option';\n    this._isScrollIdle = true;\n    this._hasBeenPositioned = false;\n\n    this._sizePosCache.updateOptions(options);\n\n    this.state = {\n      isOpen: false,\n      hasFocus: false,\n      calloutRenderEdge: undefined,\n    };\n  }\n\n  /**\n   * All selected options\n   */\n  public get selectedOptions(): IDropdownOption[] {\n    const {\n      options,\n      hoisted: { selectedIndices },\n    } = this.props;\n\n    return getAllSelectedOptions(options, selectedIndices);\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this._scrollIdleTimeoutId);\n  }\n\n  public componentDidUpdate(prevProps: IDropdownProps, prevState: IDropdownState) {\n    if (prevState.isOpen === true && this.state.isOpen === false) {\n      this._gotMouseMove = false;\n      this._hasBeenPositioned = false;\n\n      if (this.props.onDismiss) {\n        this.props.onDismiss();\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const id = this._id;\n\n    const props = this.props;\n    const {\n      className,\n      label,\n      options,\n      ariaLabel,\n      required,\n      errorMessage,\n      styles: propStyles,\n      theme,\n      panelProps,\n      calloutProps,\n      onRenderTitle = this._getTitle,\n      onRenderContainer = this._onRenderContainer,\n      onRenderCaretDown = this._onRenderCaretDown,\n      onRenderLabel = this._onRenderLabel,\n      onRenderItem = this._onRenderItem,\n      hoisted: { selectedIndices },\n    } = props;\n    const { isOpen, calloutRenderEdge, hasFocus } = this.state;\n    // eslint-disable-next-line deprecation/deprecation\n    const onRenderPlaceholder = props.onRenderPlaceholder || props.onRenderPlaceHolder || this._getPlaceholder;\n\n    // If our cached options are out of date update our cache\n    if (options !== this._sizePosCache.cachedOptions) {\n      this._sizePosCache.updateOptions(options);\n    }\n\n    const selectedOptions = getAllSelectedOptions(options, selectedIndices);\n    const divProps = getNativeProps(props, divProperties);\n\n    const disabled = this._isDisabled();\n\n    const errorMessageId = id + '-errorMessage';\n\n    this._classNames = getClassNames(propStyles, {\n      theme,\n      className,\n      hasError: !!(errorMessage && errorMessage.length > 0),\n      hasLabel: !!label,\n      isOpen,\n      required,\n      disabled,\n      isRenderingPlaceholder: !selectedOptions.length,\n      panelClassName: panelProps ? panelProps.className : undefined,\n      calloutClassName: calloutProps ? calloutProps.className : undefined,\n      calloutRenderEdge,\n    });\n\n    const hasErrorMessage: boolean = !!errorMessage && errorMessage.length > 0;\n\n    return (\n      <div\n        className={this._classNames.root}\n        ref={this.props.hoisted.rootRef}\n        aria-owns={isOpen ? this._listId : undefined}\n      >\n        {onRenderLabel(this.props, this._onRenderLabel)}\n        <div\n          data-is-focusable={!disabled}\n          data-ktp-target={true}\n          ref={this._dropDown}\n          id={id}\n          tabIndex={disabled ? -1 : 0}\n          role=\"combobox\"\n          aria-haspopup=\"listbox\"\n          aria-expanded={isOpen ? 'true' : 'false'}\n          aria-label={ariaLabel}\n          aria-labelledby={label && !ariaLabel ? mergeAriaAttributeValues(this._labelId, this._optionId) : undefined}\n          aria-describedby={hasErrorMessage ? this._id + '-errorMessage' : undefined}\n          aria-required={required}\n          aria-disabled={disabled}\n          aria-controls={isOpen ? this._listId : undefined}\n          {...divProps}\n          className={this._classNames.dropdown}\n          onBlur={this._onDropdownBlur}\n          onKeyDown={this._onDropdownKeyDown}\n          onKeyUp={this._onDropdownKeyUp}\n          onClick={this._onDropdownClick}\n          onMouseDown={this._onDropdownMouseDown}\n          onFocus={this._onFocus}\n        >\n          <span\n            id={this._optionId}\n            className={this._classNames.title}\n            aria-live={hasFocus ? 'polite' : undefined}\n            aria-atomic={hasFocus ? true : undefined}\n            aria-invalid={hasErrorMessage}\n          >\n            {\n              // If option is selected render title, otherwise render the placeholder text\n              selectedOptions.length\n                ? onRenderTitle(selectedOptions, this._onRenderTitle)\n                : onRenderPlaceholder(props, this._onRenderPlaceholder)\n            }\n          </span>\n          <span className={this._classNames.caretDownWrapper}>{onRenderCaretDown(props, this._onRenderCaretDown)}</span>\n        </div>\n        {isOpen &&\n          onRenderContainer(\n            {\n              ...props,\n              onDismiss: this._onDismiss,\n              onRenderItem,\n            },\n            this._onRenderContainer,\n          )}\n        {hasErrorMessage && (\n          <div role=\"alert\" id={errorMessageId} className={this._classNames.errorMessage}>\n            {errorMessage}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Close menu callout if it is open\n   */\n  public dismissMenu = (): void => {\n    const { isOpen } = this.state;\n    isOpen && this.setState({ isOpen: false });\n  };\n\n  public focus(shouldOpenOnFocus?: boolean): void {\n    if (this._dropDown.current) {\n      this._dropDown.current.focus();\n\n      if (shouldOpenOnFocus) {\n        this.setState({\n          isOpen: true,\n        });\n      }\n    }\n  }\n\n  public setSelectedIndex(event: React.FormEvent<HTMLDivElement>, index: number): void {\n    const {\n      options,\n      selectedKey,\n      selectedKeys,\n      multiSelect,\n      notifyOnReselect,\n      hoisted: { selectedIndices = [] },\n    } = this.props;\n    const checked: boolean = selectedIndices ? selectedIndices.indexOf(index) > -1 : false;\n    let newIndexes: number[] = [];\n\n    index = Math.max(0, Math.min(options.length - 1, index));\n\n    // If this is a controlled component then no state change should take place.\n    if (selectedKey !== undefined || selectedKeys !== undefined) {\n      this._onChange(event, options, index, checked, multiSelect);\n      return;\n    }\n\n    if (!multiSelect && !notifyOnReselect && index === selectedIndices[0]) {\n      return;\n    } else if (multiSelect) {\n      newIndexes = selectedIndices ? this._copyArray(selectedIndices) : [];\n      if (checked) {\n        const position = newIndexes.indexOf(index);\n        if (position > -1) {\n          // unchecked the current one\n          newIndexes.splice(position, 1);\n        }\n      } else {\n        // add the new selected index into the existing one\n        newIndexes.push(index);\n      }\n    } else {\n      // Set the selected option if this is an uncontrolled component\n      newIndexes = [index];\n    }\n\n    event.persist();\n    // Call onChange after state is updated\n    this.props.hoisted.setSelectedIndices(newIndexes);\n    this._onChange(event, options, index, checked, multiSelect);\n  }\n\n  private _onChange = (\n    event: React.FormEvent<HTMLDivElement>,\n    options: IDropdownOption[],\n    index: number,\n    checked?: boolean,\n    multiSelect?: boolean,\n  ) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { onChange, onChanged } = this.props;\n    if (onChange || onChanged) {\n      // for single-select, option passed in will always be selected.\n      // for multi-select, flip the checked value\n      const changedOpt = multiSelect ? { ...options[index], selected: !checked } : options[index];\n\n      onChange && onChange({ ...event, target: this._dropDown.current as EventTarget }, changedOpt, index);\n      onChanged && onChanged(changedOpt, index);\n    }\n  };\n\n  /** Get either props.placeholder (new name) or props.placeHolder (old name) */\n  private _getPlaceholder = (): string | undefined => {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.props.placeholder || this.props.placeHolder;\n  };\n\n  private _copyArray(array: any[]): any[] {\n    const newArray = [];\n    for (const element of array) {\n      newArray.push(element);\n    }\n    return newArray;\n  }\n\n  /**\n   * Finds the next valid Dropdown option and sets the selected index to it.\n   * @param stepValue - Value of how many items the function should traverse.  Should be -1 or 1.\n   * @param index - Index of where the search should start\n   * @param selectedIndex - The selectedIndex Dropdown's state\n   * @returns The next valid dropdown option's index\n   */\n  private _moveIndex(\n    event: React.FormEvent<HTMLDivElement>,\n    stepValue: number,\n    index: number,\n    selectedIndex: number,\n  ): number {\n    const { options } = this.props;\n    // Return selectedIndex if nothing has changed or options is empty\n    if (selectedIndex === index || options.length === 0) {\n      return selectedIndex;\n    }\n\n    // If the user is pressing the up or down key we want to make\n    // sure that the dropdown cycles through the options without\n    // causing the screen to scroll. In _onDropdownKeyDown\n    // at the very end is a check to see if newIndex !== selectedIndex.\n    // If the index is less than 0 and we set it back to 0, then\n    // newIndex will equal selectedIndex and not stop the action\n    // of the key press happening and vice versa for indexes greater\n    // than or equal to the options length.\n    if (index >= options.length) {\n      index = 0;\n    } else if (index < 0) {\n      index = options.length - 1;\n    }\n\n    let stepCounter = 0;\n    // If current index is a header or divider, or disabled, increment by step\n    while (\n      options[index].itemType === DropdownMenuItemType.Header ||\n      options[index].itemType === DropdownMenuItemType.Divider ||\n      options[index].disabled\n    ) {\n      // If stepCounter exceeds length of options, then return selectedIndex (-1)\n      if (stepCounter >= options.length) {\n        return selectedIndex;\n      }\n      // If index + stepValue is out of bounds, wrap around\n      if (index + stepValue < 0) {\n        index = options.length;\n      } else if (index + stepValue >= options.length) {\n        index = -1;\n      }\n\n      index = index + stepValue;\n      stepCounter++;\n    }\n\n    this.setSelectedIndex(event, index);\n    return index;\n  }\n\n  /** Get text in dropdown input as a string */\n  private _getTitle = (items: IDropdownOption[], _unused?: unknown): string => {\n    const { multiSelectDelimiter = ', ' } = this.props;\n    return items.map(i => i.text).join(multiSelectDelimiter);\n  };\n\n  /** Render text in dropdown input */\n  private _onRenderTitle = (items: IDropdownOption[]): JSX.Element => {\n    return <>{this._getTitle(items)}</>;\n  };\n\n  /** Render placeholder text in dropdown input */\n  private _onRenderPlaceholder = (props: IDropdownProps): JSX.Element | null => {\n    if (!this._getPlaceholder()) {\n      return null;\n    }\n    return <>{this._getPlaceholder()}</>;\n  };\n\n  /** Render Callout or Panel container and pass in list */\n  private _onRenderContainer = (props: ISelectableDroppableTextProps<IDropdown, HTMLDivElement>): JSX.Element => {\n    const { calloutProps, panelProps } = props;\n    const { responsiveMode, dropdownWidth } = this.props;\n\n    const isSmall = responsiveMode! <= ResponsiveMode.medium;\n\n    const focusTrapZoneProps: IFocusTrapZoneProps = { firstFocusableTarget: `#${this._listId}1` };\n    const panelStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.panel as IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles>)\n      : undefined;\n\n    let calloutWidth = undefined;\n    let calloutMinWidth = undefined;\n    if (dropdownWidth === 'auto') {\n      calloutMinWidth = this._dropDown.current ? this._dropDown.current.clientWidth : 0;\n    } else {\n      calloutWidth = dropdownWidth || (this._dropDown.current ? this._dropDown.current.clientWidth : 0);\n    }\n\n    return isSmall ? (\n      <Panel\n        closeButtonAriaLabel=\"Close\"\n        focusTrapZoneProps={focusTrapZoneProps}\n        hasCloseButton\n        isOpen={true}\n        isLightDismiss={true}\n        onDismiss={this._onDismiss}\n        styles={panelStyles}\n        {...panelProps}\n      >\n        {this._renderFocusableList(props)}\n      </Panel>\n    ) : (\n      <Callout\n        isBeakVisible={false}\n        gapSpace={0}\n        doNotLayer={false}\n        directionalHintFixed={false}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        calloutWidth={calloutWidth}\n        calloutMinWidth={calloutMinWidth}\n        {...calloutProps}\n        className={this._classNames.callout}\n        target={this._dropDown.current}\n        onDismiss={this._onDismiss}\n        onScroll={this._onScroll}\n        onPositioned={this._onPositioned}\n      >\n        {this._renderFocusableList(props)}\n      </Callout>\n    );\n  };\n\n  /** Render Caret Down Icon */\n  private _onRenderCaretDown = (props: IDropdownProps): JSX.Element => {\n    return <Icon className={this._classNames.caretDown} iconName=\"ChevronDown\" aria-hidden={true} />;\n  };\n\n  /** Wrap item list in a FocusZone */\n  private _renderFocusableList(props: ISelectableDroppableTextProps<IDropdown, HTMLDivElement>): JSX.Element {\n    const { onRenderList = this._onRenderList, label, ariaLabel, multiSelect } = props;\n\n    return (\n      <div\n        className={this._classNames.dropdownItemsWrapper}\n        onKeyDown={this._onZoneKeyDown}\n        onKeyUp={this._onZoneKeyUp}\n        ref={this._host}\n        tabIndex={0}\n      >\n        <FocusZone\n          ref={this._focusZone}\n          direction={FocusZoneDirection.vertical}\n          id={this._listId}\n          className={this._classNames.dropdownItems}\n          role=\"listbox\"\n          aria-label={ariaLabel}\n          aria-labelledby={label && !ariaLabel ? this._labelId : undefined}\n          aria-multiselectable={multiSelect}\n        >\n          {onRenderList(props, this._onRenderList)}\n        </FocusZone>\n      </div>\n    );\n  }\n\n  /** Render List of items */\n  private _onRenderList = (props: ISelectableDroppableTextProps<IDropdown, HTMLDivElement>): JSX.Element => {\n    const { onRenderItem = this._onRenderItem } = props;\n\n    let queue: { id?: string; items: JSX.Element[] } = { items: [] };\n    let renderedList: JSX.Element[] = [];\n\n    const emptyQueue = (): void => {\n      const newGroup = queue.id\n        ? [\n            <div role=\"group\" key={queue.id} aria-labelledby={queue.id}>\n              {queue.items}\n            </div>,\n          ]\n        : queue.items;\n\n      renderedList = [...renderedList, ...newGroup];\n      // Flush items and id\n      queue = { items: [] };\n    };\n\n    const placeRenderedOptionIntoQueue = (item: IDropdownOption, index: number) => {\n      /*\n        Case Header\n          empty queue if it's not already empty\n          ensure unique ID for header and set queue ID\n          push header into queue\n        Case Divider\n          push divider into queue if not first item\n          empty queue if not already empty\n        Default\n          push item into queue\n      */\n      switch (item.itemType) {\n        case SelectableOptionMenuItemType.Header:\n          queue.items.length > 0 && emptyQueue();\n\n          const id = this._id + item.key;\n          queue.items.push(onRenderItem({ id, ...item, index }, this._onRenderItem)!);\n          queue.id = id;\n          break;\n        case SelectableOptionMenuItemType.Divider:\n          index > 0 && queue.items.push(onRenderItem({ ...item, index }, this._onRenderItem)!);\n\n          queue.items.length > 0 && emptyQueue();\n          break;\n        default:\n          queue.items.push(onRenderItem({ ...item, index }, this._onRenderItem)!);\n      }\n    };\n\n    // Place options into the queue. Queue will be emptied anytime a Header or Divider is encountered\n    props.options.forEach((item: IDropdownOption, index: number) => {\n      placeRenderedOptionIntoQueue(item, index);\n    });\n\n    // Push remaining items into all renderedList\n    queue.items.length > 0 && emptyQueue();\n\n    return <>{renderedList}</>;\n  };\n\n  private _onRenderItem = (item: IDropdownOption): JSX.Element | null => {\n    switch (item.itemType) {\n      case SelectableOptionMenuItemType.Divider:\n        return this._renderSeparator(item);\n      case SelectableOptionMenuItemType.Header:\n        return this._renderHeader(item);\n      default:\n        return this._renderOption(item);\n    }\n  };\n\n  private _renderSeparator(item: IDropdownOption): JSX.Element | null {\n    const { index, key } = item;\n    const separatorClassName = item.hidden ? this._classNames.dropdownDividerHidden : this._classNames.dropdownDivider;\n    if (index! > 0) {\n      return <div role=\"separator\" key={key} className={separatorClassName} />;\n    }\n    return null;\n  }\n\n  private _renderHeader(item: IDropdownOption): JSX.Element {\n    const { onRenderOption = this._onRenderOption } = this.props;\n    const { key, id } = item;\n    const headerClassName = item.hidden\n      ? this._classNames.dropdownItemHeaderHidden\n      : this._classNames.dropdownItemHeader;\n\n    return (\n      <div id={id} key={key} className={headerClassName}>\n        {onRenderOption(item, this._onRenderOption)}\n      </div>\n    );\n  }\n\n  private _renderOption = (item: IDropdownOption): JSX.Element => {\n    const {\n      onRenderOption = this._onRenderOption,\n      hoisted: { selectedIndices = [] },\n    } = this.props;\n    const isItemSelected =\n      item.index !== undefined && selectedIndices ? selectedIndices.indexOf(item.index) > -1 : false;\n\n    // select the right className based on the combination of selected/disabled\n    const itemClassName = item.hidden // predicate: item hidden\n      ? this._classNames.dropdownItemHidden\n      : isItemSelected && item.disabled === true // predicate: both selected and disabled\n      ? this._classNames.dropdownItemSelectedAndDisabled\n      : isItemSelected // predicate: selected only\n      ? this._classNames.dropdownItemSelected\n      : item.disabled === true // predicate: disabled only\n      ? this._classNames.dropdownItemDisabled\n      : this._classNames.dropdownItem;\n\n    const { title } = item;\n\n    // define the id and label id (for multiselect checkboxes)\n    const id = this._listId + item.index;\n    const labelId = item.id ?? id + '-label';\n\n    const multiSelectItemStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.multiSelectItem as IStyleFunctionOrObject<\n          ICheckboxStyleProps,\n          ICheckboxStyles\n        >)\n      : undefined;\n\n    return !this.props.multiSelect ? (\n      <CommandButton\n        id={id}\n        key={item.key}\n        data-index={item.index}\n        data-is-focusable={!item.disabled}\n        disabled={item.disabled}\n        className={itemClassName}\n        onClick={this._onItemClick(item)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onMouseEnter={this._onItemMouseEnter.bind(this, item)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onMouseLeave={this._onMouseItemLeave.bind(this, item)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onMouseMove={this._onItemMouseMove.bind(this, item)}\n        role=\"option\"\n        aria-selected={isItemSelected ? 'true' : 'false'}\n        ariaLabel={item.ariaLabel}\n        title={title}\n        aria-posinset={this._sizePosCache.positionInSet(item.index)}\n        aria-setsize={this._sizePosCache.optionSetSize}\n      >\n        {onRenderOption(item, this._onRenderOption)}\n      </CommandButton>\n    ) : (\n      <Checkbox\n        id={id}\n        key={item.key}\n        disabled={item.disabled}\n        onChange={this._onItemClick(item)}\n        inputProps={{\n          'aria-selected': isItemSelected,\n          onMouseEnter: this._onItemMouseEnter.bind(this, item),\n          onMouseLeave: this._onMouseItemLeave.bind(this, item),\n          onMouseMove: this._onItemMouseMove.bind(this, item),\n          role: 'option',\n          ...({\n            'data-index': item.index,\n            'data-is-focusable': !(item.disabled || item.hidden),\n          } as any),\n        }}\n        label={item.text}\n        title={title}\n        // eslint-disable-next-line react/jsx-no-bind\n        onRenderLabel={this._onRenderItemLabel.bind(this, { ...item, id: labelId })}\n        className={css(itemClassName, 'is-multi-select')}\n        checked={isItemSelected}\n        styles={multiSelectItemStyles}\n        ariaPositionInSet={!item.hidden ? this._sizePosCache.positionInSet(item.index) : undefined}\n        ariaSetSize={!item.hidden ? this._sizePosCache.optionSetSize : undefined}\n        ariaLabel={item.ariaLabel}\n        ariaLabelledBy={item.ariaLabel ? undefined : labelId}\n      />\n    );\n  };\n\n  /** Render content of item (i.e. text/icon inside of button) */\n  private _onRenderOption = (item: IDropdownOption): JSX.Element => {\n    return <span className={this._classNames.dropdownOptionText}>{item.text}</span>;\n  };\n\n  /*\n   * Render content of a multiselect item label.\n   * Text within the label is aria-hidden, to prevent duplicate input/label exposure\n   */\n  private _onRenderMultiselectOption = (item: IDropdownOption): JSX.Element => {\n    return (\n      <span id={item.id} aria-hidden=\"true\" className={this._classNames.dropdownOptionText}>\n        {item.text}\n      </span>\n    );\n  };\n\n  /** Render custom label for multiselect checkbox items */\n  private _onRenderItemLabel = (item: IDropdownOption): JSX.Element | null => {\n    const { onRenderOption = this._onRenderMultiselectOption } = this.props;\n    return onRenderOption(item, this._onRenderMultiselectOption);\n  };\n\n  private _onPositioned = (positions?: ICalloutPositionedInfo): void => {\n    if (this._focusZone.current) {\n      // Focusing an element can trigger a reflow. Making this wait until there is an animation\n      // frame can improve perf significantly.\n      this._requestAnimationFrame(() => {\n        const selectedIndices = this.props.hoisted.selectedIndices;\n        if (this._focusZone.current) {\n          if (\n            !this._hasBeenPositioned &&\n            selectedIndices &&\n            selectedIndices[0] &&\n            !this.props.options[selectedIndices[0]].disabled\n          ) {\n            const element: HTMLElement | null = getDocument()!.getElementById(`${this._id}-list${selectedIndices[0]}`);\n            if (element) {\n              this._focusZone.current.focusElement(element);\n            }\n            this._hasBeenPositioned = true;\n          } else {\n            this._focusZone.current.focus();\n          }\n        }\n      });\n    }\n\n    if (!this.state.calloutRenderEdge || this.state.calloutRenderEdge !== positions!.targetEdge) {\n      this.setState({\n        calloutRenderEdge: positions!.targetEdge,\n      });\n    }\n  };\n\n  private _onItemClick = (item: IDropdownOption): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>): void => {\n      if (!item.disabled) {\n        this.setSelectedIndex(event, item.index!);\n        if (!this.props.multiSelect) {\n          // only close the callout when it's in single-select mode\n          this.setState({\n            isOpen: false,\n          });\n        }\n      }\n    };\n  };\n\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n  private _onScroll = (): void => {\n    if (!this._isScrollIdle && this._scrollIdleTimeoutId !== undefined) {\n      clearTimeout(this._scrollIdleTimeoutId);\n      this._scrollIdleTimeoutId = undefined;\n    } else {\n      this._isScrollIdle = false;\n    }\n\n    this._scrollIdleTimeoutId = window.setTimeout(() => {\n      this._isScrollIdle = true;\n    }, this._scrollIdleDelay);\n  };\n\n  private _onItemMouseEnter(item: any, ev: React.MouseEvent<HTMLElement>): void {\n    if (this._shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    const targetElement = ev.currentTarget as HTMLElement;\n    targetElement.focus();\n  }\n\n  private _onItemMouseMove(item: any, ev: React.MouseEvent<HTMLElement>): void {\n    const targetElement = ev.currentTarget as HTMLElement;\n    this._gotMouseMove = true;\n\n    if (!this._isScrollIdle || document.activeElement === targetElement) {\n      return;\n    }\n\n    targetElement.focus();\n  }\n\n  private _onMouseItemLeave = (item: any, ev: React.MouseEvent<HTMLElement>): void => {\n    if (this._shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n    if (this._host.current) {\n      if ((this._host.current as any).setActive) {\n        try {\n          (this._host.current as any).setActive();\n        } catch (e) {\n          /* no-op */\n        }\n      } else {\n        this._host.current.focus();\n      }\n    }\n  };\n\n  private _shouldIgnoreMouseEvent(): boolean {\n    return !this._isScrollIdle || !this._gotMouseMove;\n  }\n\n  private _onDismiss = (): void => {\n    this.setState({ isOpen: false });\n  };\n\n  private _onDropdownBlur = (ev: React.FocusEvent<HTMLDivElement>): void => {\n    // If Dropdown disabled do not proceed with this logic.\n    const disabled = this._isDisabled();\n    if (disabled) {\n      return;\n    }\n\n    if (this.state.isOpen) {\n      // Do not call onBlur or update focus state when the callout is opened\n      return;\n    }\n\n    this.setState({ hasFocus: false });\n\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n  };\n\n  private _onDropdownKeyDown = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    // If Dropdown disabled do not process any keyboard events.\n    const disabled = this._isDisabled();\n    if (disabled) {\n      return;\n    }\n\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in _shouldHandleKeyUp for reasoning.\n    this._lastKeyDownWasAltOrMeta = this._isAltOrMeta(ev);\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n      if (ev.defaultPrevented) {\n        return;\n      }\n    }\n\n    let newIndex: number | undefined;\n    const selectedIndex = this.props.hoisted.selectedIndices.length ? this.props.hoisted.selectedIndices[0] : -1;\n    const containsExpandCollapseModifier = ev.altKey || ev.metaKey;\n    const isOpen = this.state.isOpen;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.enter:\n        this.setState({\n          isOpen: !isOpen,\n        });\n        break;\n\n      case KeyCodes.escape:\n        if (!isOpen) {\n          return;\n        }\n\n        this.setState({\n          isOpen: false,\n        });\n        break;\n\n      case KeyCodes.up:\n        if (containsExpandCollapseModifier) {\n          if (isOpen) {\n            this.setState({ isOpen: false });\n            break;\n          }\n\n          return;\n        }\n        if (this.props.multiSelect) {\n          this.setState({ isOpen: true });\n        } else if (!this._isDisabled()) {\n          newIndex = this._moveIndex(ev, -1, selectedIndex - 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.down:\n        if (containsExpandCollapseModifier) {\n          ev.stopPropagation();\n          ev.preventDefault();\n        }\n        if ((containsExpandCollapseModifier && !isOpen) || this.props.multiSelect) {\n          this.setState({ isOpen: true });\n        } else if (!this._isDisabled()) {\n          newIndex = this._moveIndex(ev, 1, selectedIndex + 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.home:\n        if (!this.props.multiSelect) {\n          newIndex = this._moveIndex(ev, 1, 0, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.end:\n        if (!this.props.multiSelect) {\n          newIndex = this._moveIndex(ev, -1, this.props.options.length - 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.space:\n        // event handled in _onDropdownKeyUp\n        break;\n\n      default:\n        return;\n    }\n\n    if (newIndex !== selectedIndex) {\n      ev.stopPropagation();\n      ev.preventDefault();\n    }\n  };\n\n  private _onDropdownKeyUp = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    // If Dropdown disabled do not process any keyboard events.\n    const disabled = this._isDisabled();\n    if (disabled) {\n      return;\n    }\n\n    const shouldHandleKey = this._shouldHandleKeyUp(ev);\n    const isOpen = this.state.isOpen;\n\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(ev);\n      if (ev.defaultPrevented) {\n        return;\n      }\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.space:\n        this.setState({\n          isOpen: !isOpen,\n        });\n        break;\n\n      default:\n        if (shouldHandleKey && isOpen) {\n          this.setState({ isOpen: false });\n        }\n        return;\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  /**\n   * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n   */\n  private _isAltOrMeta(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    return ev.which === KeyCodes.alt || ev.key === 'Meta';\n  }\n\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n  private _shouldHandleKeyUp(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    const keyPressIsAltOrMetaAlone = this._lastKeyDownWasAltOrMeta && this._isAltOrMeta(ev);\n    this._lastKeyDownWasAltOrMeta = false;\n    return !!keyPressIsAltOrMetaAlone && !(isMac() || isIOS());\n  }\n\n  private _onZoneKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    let elementToFocus;\n\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in _shouldHandleKeyUp for reasoning.\n    this._lastKeyDownWasAltOrMeta = this._isAltOrMeta(ev);\n    const containsExpandCollapseModifier = ev.altKey || ev.metaKey;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.up:\n        if (containsExpandCollapseModifier) {\n          this.setState({ isOpen: false });\n        } else {\n          if (this._host.current) {\n            elementToFocus = getLastFocusable(this._host.current, this._host.current.lastChild as HTMLElement, true);\n          }\n        }\n        break;\n\n      // All directional keystrokes should be canceled when the zone is rendered.\n      // This avoids the body scroll from reacting and thus dismissing the dropdown.\n      case KeyCodes.home:\n      case KeyCodes.end:\n      case KeyCodes.pageUp:\n      case KeyCodes.pageDown:\n        break;\n\n      case KeyCodes.down:\n        if (!containsExpandCollapseModifier && this._host.current) {\n          elementToFocus = getFirstFocusable(this._host.current, this._host.current.firstChild as HTMLElement, true);\n        }\n        break;\n\n      case KeyCodes.escape:\n        this.setState({ isOpen: false });\n        break;\n\n      case KeyCodes.tab:\n        this.setState({ isOpen: false });\n\n        const document = getDocument();\n\n        if (document) {\n          if (ev.shiftKey) {\n            getPreviousElement(document.body, this._dropDown.current, false, false, true, true)?.focus();\n          } else {\n            getNextElement(document.body, this._dropDown.current, false, false, true, true)?.focus();\n          }\n        }\n        break;\n\n      default:\n        return;\n    }\n\n    if (elementToFocus) {\n      elementToFocus.focus();\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  private _onZoneKeyUp = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const shouldHandleKey = this._shouldHandleKeyUp(ev);\n\n    if (shouldHandleKey && this.state.isOpen) {\n      this.setState({ isOpen: false });\n      ev.preventDefault();\n    }\n  };\n\n  private _onDropdownClick = (ev: React.MouseEvent<HTMLDivElement>): void => {\n    if (this.props.onClick) {\n      this.props.onClick(ev);\n      if (ev.defaultPrevented) {\n        return;\n      }\n    }\n\n    const { isOpen } = this.state;\n    const disabled = this._isDisabled();\n\n    if (!disabled && !this._shouldOpenOnFocus()) {\n      this.setState({\n        isOpen: !isOpen,\n      });\n    }\n\n    this._isFocusedByClick = false; // reset\n  };\n\n  private _onDropdownMouseDown = (): void => {\n    this._isFocusedByClick = true;\n  };\n\n  private _onFocus = (ev: React.FocusEvent<HTMLDivElement>): void => {\n    const disabled = this._isDisabled();\n\n    if (!disabled) {\n      if (this.props.onFocus) {\n        this.props.onFocus(ev);\n      }\n      const state: Pick<IDropdownState, 'hasFocus'> | Pick<IDropdownState, 'hasFocus' | 'isOpen'> = { hasFocus: true };\n      if (this._shouldOpenOnFocus()) {\n        (state as Pick<IDropdownState, 'hasFocus' | 'isOpen'>).isOpen = true;\n      }\n\n      this.setState(state);\n    }\n  };\n\n  /**\n   * Because the isDisabled prop is deprecated, we have had to repeat this logic all over the place.\n   * This helper method avoids all the repetition.\n   */\n  private _isDisabled: () => boolean | undefined = () => {\n    let { disabled } = this.props;\n    // eslint-disable-next-line deprecation/deprecation\n    const { isDisabled } = this.props;\n\n    // Remove this deprecation workaround at 1.0.0\n    if (disabled === undefined) {\n      disabled = isDisabled;\n    }\n\n    return disabled;\n  };\n\n  private _onRenderLabel = (props: IDropdownProps): JSX.Element | null => {\n    const { label, required, disabled } = props;\n\n    const labelStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.label as IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>)\n      : undefined;\n\n    return label ? (\n      <Label\n        className={this._classNames.label}\n        id={this._labelId}\n        required={required}\n        styles={labelStyles}\n        disabled={disabled}\n      >\n        {label}\n      </Label>\n    ) : null;\n  };\n\n  /**\n   * Returns true if dropdown should set to open on focus.\n   * Otherwise, isOpen state should be toggled on click\n   */\n  private _shouldOpenOnFocus(): boolean {\n    const { hasFocus } = this.state;\n    const { openOnKeyboardFocus } = this.props;\n    return !this._isFocusedByClick && openOnKeyboardFocus === true && !hasFocus;\n  }\n}\n", "import * as React from 'react';\nimport { CalloutContent } from './CalloutContent';\nimport { Layer } from '../../Layer';\nimport type { ICalloutProps } from './Callout.types';\n\nexport const Callout: React.FunctionComponent<ICalloutProps> = React.forwardRef<HTMLDivElement, ICalloutProps>(\n  ({ layerProps, doNotLayer, ...rest }, forwardedRef) => {\n    const content = <CalloutContent {...rest} doNotLayer={doNotLayer} ref={forwardedRef} />;\n    return doNotLayer ? content : <Layer {...layerProps}>{content}</Layer>;\n  },\n);\nCallout.displayName = 'Callout';\n", "import * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport {\n  css,\n  divProperties,\n  elementContains,\n  focusFirstChild,\n  getNativeProps,\n  on,\n  shallowCompare,\n  getPropsWithDefaults,\n  Async,\n} from '../../Utilities';\nimport { positionCallout, RectangleEdge, positionCard, getBoundsFromTargetWindow } from '../../Positioning';\nimport { Popup } from '../../Popup';\nimport { classNamesFunction } from '../../Utilities';\nimport { AnimationClassNames } from '../../Styling';\nimport { useMergedRefs, useAsync, useConst, useTarget, useOnEvent } from '@fluentui/react-hooks';\nimport type { ICalloutProps, ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\nimport type { Point, IRectangle } from '../../Utilities';\nimport type { ICalloutPositionedInfo, IPositionProps, IPosition } from '../../Positioning';\nimport type { Target } from '@fluentui/react-hooks';\n\nconst COMPONENT_NAME = 'CalloutContentBase';\n\nconst ANIMATIONS: { [key: number]: string | undefined } = {\n  [RectangleEdge.top]: AnimationClassNames.slideUpIn10,\n  [RectangleEdge.bottom]: AnimationClassNames.slideDownIn10,\n  [RectangleEdge.left]: AnimationClassNames.slideLeftIn10,\n  [RectangleEdge.right]: AnimationClassNames.slideRightIn10,\n};\n\nconst BEAK_ORIGIN_POSITION = { top: 0, left: 0 };\n// Microsoft Edge will overwrite inline styles if there is an animation pertaining to that style.\n// To help ensure that edge will respect the offscreen style opacity\n// filter needs to be added as an additional way to set opacity.\n// Also set pointer-events: none so that the callout will not occlude the element it is\n// going to be positioned against\nconst OFF_SCREEN_STYLE: React.CSSProperties = {\n  opacity: 0,\n  filter: 'opacity(0)',\n  pointerEvents: 'none',\n};\n// role and role description go hand-in-hand. Both would be included by spreading getNativeProps for a basic element\n// This constant array can be used to filter these out of native props spread on callout root and apply them together on\n// calloutMain (the Popup component within the callout)\nconst ARIA_ROLE_ATTRIBUTES = ['role', 'aria-roledescription'];\n\nconst DEFAULT_PROPS = {\n  preventDismissOnLostFocus: false,\n  preventDismissOnScroll: false,\n  preventDismissOnResize: false,\n  isBeakVisible: true,\n  beakWidth: 16,\n  gapSpace: 0,\n  minPagePadding: 8,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n} as const;\n\nconst getClassNames = classNamesFunction<ICalloutContentStyleProps, ICalloutContentStyles>({\n  disableCaching: true, // disabling caching because stylesProp.position mutates often\n});\n\n/**\n * (Hook) to return a function to lazily fetch the bounds of the target element for the callout.\n */\nfunction useBounds(\n  { bounds, minPagePadding = DEFAULT_PROPS.minPagePadding, target }: ICalloutProps,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  targetWindow: Window | undefined,\n) {\n  const [targetWindowResized, setTargetWindowResized] = React.useState(false);\n  const cachedBounds = React.useRef<IRectangle | undefined>();\n\n  const getBounds = React.useCallback((): IRectangle | undefined => {\n    if (!cachedBounds.current || targetWindowResized) {\n      let currentBounds =\n        typeof bounds === 'function' ? (targetWindow ? bounds(target, targetWindow) : undefined) : bounds;\n\n      if (!currentBounds && targetWindow) {\n        currentBounds = getBoundsFromTargetWindow(targetRef.current, targetWindow);\n        currentBounds = {\n          top: currentBounds.top + minPagePadding,\n          left: currentBounds.left + minPagePadding,\n          right: currentBounds.right! - minPagePadding,\n          bottom: currentBounds.bottom! - minPagePadding,\n          width: currentBounds.width - minPagePadding * 2,\n          height: currentBounds.height - minPagePadding * 2,\n        };\n      }\n      cachedBounds.current = currentBounds;\n      targetWindowResized && setTargetWindowResized(false);\n    }\n\n    return cachedBounds.current;\n  }, [bounds, minPagePadding, target, targetRef, targetWindow, targetWindowResized]);\n\n  const async: Async = useAsync();\n  useOnEvent(\n    targetWindow,\n    'resize',\n    async.debounce(\n      () => {\n        setTargetWindowResized(true);\n      },\n      500,\n      { leading: true },\n    ),\n  );\n\n  return getBounds;\n}\n\n/**\n * (Hook) to return the maximum available height for the Callout to render into.\n */\nfunction useMaxHeight(\n  { calloutMaxHeight, finalHeight, directionalHint, directionalHintFixed, hidden }: ICalloutProps,\n  getBounds: () => IRectangle | undefined,\n  positions?: ICalloutPositionedInfo,\n) {\n  const [maxHeight, setMaxHeight] = React.useState<number | undefined>();\n  const { top, bottom } = positions?.elementPosition ?? {};\n\n  React.useEffect(() => {\n    const { top: topBounds, bottom: bottomBounds } = getBounds() ?? {};\n    let calculatedHeight: number | undefined;\n\n    if (typeof top === 'number' && bottomBounds) {\n      calculatedHeight = bottomBounds - top;\n    } else if (typeof bottom === 'number' && typeof topBounds === 'number' && bottomBounds) {\n      calculatedHeight = bottomBounds - topBounds - bottom;\n    }\n\n    if (\n      (!calloutMaxHeight && !hidden) ||\n      (calloutMaxHeight && calculatedHeight && calloutMaxHeight > calculatedHeight)\n    ) {\n      setMaxHeight(calculatedHeight);\n    } else if (calloutMaxHeight) {\n      setMaxHeight(calloutMaxHeight);\n    } else {\n      setMaxHeight(undefined);\n    }\n  }, [bottom, calloutMaxHeight, finalHeight, directionalHint, directionalHintFixed, getBounds, hidden, positions, top]);\n\n  return maxHeight;\n}\n\n/**\n * (Hook) to find the current position of Callout. If Callout is resized then a new position is calculated.\n */\nfunction usePositions(\n  props: ICalloutProps,\n  hostElement: React.RefObject<HTMLDivElement>,\n  calloutElement: HTMLDivElement | null,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  getBounds: () => IRectangle | undefined,\n) {\n  const [positions, setPositions] = React.useState<ICalloutPositionedInfo>();\n  const positionAttempts = React.useRef(0);\n  const previousTarget = React.useRef<Target>();\n  const async = useAsync();\n  const { hidden, target, finalHeight, calloutMaxHeight, onPositioned, directionalHint } = props;\n\n  React.useEffect(() => {\n    if (!hidden) {\n      const timerId = async.requestAnimationFrame(() => {\n        if (hostElement.current && calloutElement) {\n          const currentProps: IPositionProps = {\n            ...props,\n            target: targetRef.current!,\n            bounds: getBounds(),\n          };\n\n          // duplicate calloutElement & remove useMaxHeight's maxHeight for position calc\n          const dupeCalloutElement = calloutElement.cloneNode(true) as HTMLElement;\n          dupeCalloutElement.style.maxHeight = calloutMaxHeight ? `${calloutMaxHeight}` : '';\n          dupeCalloutElement.style.visibility = 'hidden';\n          calloutElement.parentElement?.appendChild(dupeCalloutElement);\n\n          const previousPositions = previousTarget.current === target ? positions : undefined;\n\n          // If there is a finalHeight given then we assume that the user knows and will handle\n          // additional positioning adjustments so we should call positionCard\n          const newPositions: ICalloutPositionedInfo = finalHeight\n            ? positionCard(currentProps, hostElement.current, dupeCalloutElement, previousPositions)\n            : positionCallout(currentProps, hostElement.current, dupeCalloutElement, previousPositions);\n\n          // clean up duplicate calloutElement\n          calloutElement.parentElement?.removeChild(dupeCalloutElement);\n\n          // Set the new position only when the positions do not exist or one of the new callout positions\n          // is different. The position should not change if the position is within 2 decimal places.\n          if (\n            (!positions && newPositions) ||\n            (positions && newPositions && !arePositionsEqual(positions, newPositions) && positionAttempts.current < 5)\n          ) {\n            // We should not reposition the callout more than a few times, if it is then the content is likely resizing\n            // and we should stop trying to reposition to prevent a stack overflow.\n            positionAttempts.current++;\n            setPositions(newPositions);\n          } else if (positionAttempts.current > 0) {\n            // Only call the onPositioned callback if the callout has been re-positioned at least once.\n            positionAttempts.current = 0;\n            onPositioned?.(positions);\n          }\n        }\n      }, calloutElement);\n\n      previousTarget.current = target;\n\n      return () => {\n        async.cancelAnimationFrame(timerId);\n        previousTarget.current = undefined;\n      };\n    } else {\n      // When the callout is hidden, clear position state so that it is not accidentally used next render.\n      setPositions(undefined);\n      positionAttempts.current = 0;\n    }\n  }, [\n    hidden,\n    directionalHint,\n    async,\n    calloutElement,\n    calloutMaxHeight,\n    hostElement,\n    targetRef,\n    finalHeight,\n    getBounds,\n    onPositioned,\n    positions,\n    props,\n    target,\n  ]);\n\n  return positions;\n}\n\n/**\n * (Hook) to set up behavior to automatically focus the callout when it appears, if indicated by props.\n */\nfunction useAutoFocus(\n  { hidden, setInitialFocus }: ICalloutProps,\n  positions: ICalloutPositionedInfo | undefined,\n  calloutElement: HTMLDivElement | null,\n) {\n  const async = useAsync();\n  const hasPositions = !!positions;\n  React.useEffect(() => {\n    if (!hidden && setInitialFocus && hasPositions && calloutElement) {\n      const timerId = async.requestAnimationFrame(() => focusFirstChild(calloutElement), calloutElement);\n\n      return () => async.cancelAnimationFrame(timerId);\n    }\n  }, [hidden, hasPositions, async, calloutElement, setInitialFocus]);\n}\n\n/**\n * (Hook) to set up various handlers to dismiss the popup when it loses focus or the window scrolls or similar cases.\n */\nfunction useDismissHandlers(\n  {\n    hidden,\n    onDismiss,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnScroll,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnResize,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnLostFocus,\n    dismissOnTargetClick,\n    shouldDismissOnWindowFocus,\n    preventDismissOnEvent,\n  }: ICalloutProps,\n  positions: ICalloutPositionedInfo | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  targetWindow: Window | undefined,\n) {\n  const isMouseDownOnPopup = React.useRef(false);\n  const async = useAsync();\n\n  const mouseDownHandlers = useConst([\n    () => {\n      isMouseDownOnPopup.current = true;\n    },\n    () => {\n      isMouseDownOnPopup.current = false;\n    },\n  ] as const);\n\n  const positionsExists = !!positions;\n\n  React.useEffect(() => {\n    const dismissOnScroll = (ev: Event) => {\n      if (positionsExists && !preventDismissOnScroll) {\n        dismissOnClickOrScroll(ev);\n      }\n    };\n\n    const dismissOnResize = (ev: Event) => {\n      if (!preventDismissOnResize && !(preventDismissOnEvent && preventDismissOnEvent(ev))) {\n        onDismiss?.(ev);\n      }\n    };\n\n    const dismissOnLostFocus = (ev: Event) => {\n      if (!preventDismissOnLostFocus) {\n        dismissOnClickOrScroll(ev);\n      }\n    };\n\n    const dismissOnClickOrScroll = (ev: Event) => {\n      const eventPaths: Array<EventTarget> = ev.composedPath ? ev.composedPath() : [];\n      const target = eventPaths.length > 0 ? (eventPaths[0] as HTMLElement) : (ev.target as HTMLElement);\n      const isEventTargetOutsideCallout = hostElement.current && !elementContains(hostElement.current, target);\n\n      // If mouse is pressed down on callout but moved outside then released, don't dismiss the callout.\n      if (isEventTargetOutsideCallout && isMouseDownOnPopup.current) {\n        isMouseDownOnPopup.current = false;\n        return;\n      }\n\n      if (\n        (!targetRef.current && isEventTargetOutsideCallout) ||\n        (ev.target !== targetWindow &&\n          isEventTargetOutsideCallout &&\n          (!targetRef.current ||\n            'stopPropagation' in targetRef.current ||\n            dismissOnTargetClick ||\n            (target !== targetRef.current && !elementContains(targetRef.current as HTMLElement, target))))\n      ) {\n        if (preventDismissOnEvent && preventDismissOnEvent(ev)) {\n          return;\n        }\n        onDismiss?.(ev);\n      }\n    };\n\n    const dismissOnTargetWindowBlur = (ev: FocusEvent) => {\n      // Do nothing\n      if (!shouldDismissOnWindowFocus) {\n        return;\n      }\n\n      if (\n        ((preventDismissOnEvent && !preventDismissOnEvent(ev)) ||\n          (!preventDismissOnEvent && !preventDismissOnLostFocus)) &&\n        !targetWindow?.document.hasFocus() &&\n        ev.relatedTarget === null\n      ) {\n        onDismiss?.(ev);\n      }\n    };\n\n    // This is added so the callout will dismiss when the window is scrolled\n    // but not when something inside the callout is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the callout.\n    const disposablesPromise = new Promise<() => void>(resolve => {\n      async.setTimeout(() => {\n        if (!hidden && targetWindow) {\n          const disposables = [\n            on(targetWindow, 'scroll', dismissOnScroll, true),\n            on(targetWindow, 'resize', dismissOnResize, true),\n            on(targetWindow.document.documentElement, 'focus', dismissOnLostFocus, true),\n            on(targetWindow.document.documentElement, 'click', dismissOnLostFocus, true),\n            on(targetWindow, 'blur', dismissOnTargetWindowBlur, true),\n          ];\n\n          resolve(() => {\n            disposables.forEach(dispose => dispose());\n          });\n        }\n      }, 0);\n    });\n\n    return () => {\n      disposablesPromise.then(dispose => dispose());\n    };\n  }, [\n    hidden,\n    async,\n    hostElement,\n    targetRef,\n    targetWindow,\n    onDismiss,\n    shouldDismissOnWindowFocus,\n    dismissOnTargetClick,\n    preventDismissOnLostFocus,\n    preventDismissOnResize,\n    preventDismissOnScroll,\n    positionsExists,\n    preventDismissOnEvent,\n  ]);\n\n  return mouseDownHandlers;\n}\n\nexport const CalloutContentBase: React.FunctionComponent<ICalloutProps> = React.memo(\n  React.forwardRef<HTMLDivElement, ICalloutProps>((propsWithoutDefaults, forwardedRef) => {\n    const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n    const {\n      styles,\n      style,\n      ariaLabel,\n      ariaDescribedBy,\n      ariaLabelledBy,\n      className,\n      isBeakVisible,\n      children,\n      beakWidth,\n      calloutWidth,\n      calloutMaxWidth,\n      calloutMinWidth,\n      doNotLayer,\n      finalHeight,\n      hideOverflow = !!finalHeight,\n      backgroundColor,\n      calloutMaxHeight,\n      onScroll,\n      // eslint-disable-next-line deprecation/deprecation\n      shouldRestoreFocus = true,\n      target,\n      hidden,\n      onLayerMounted,\n      popupProps,\n    } = props;\n\n    const hostElement = React.useRef<HTMLDivElement>(null);\n    const [calloutElement, setCalloutElement] = React.useState<HTMLDivElement | null>(null);\n    const calloutCallback = React.useCallback((calloutEl: any) => {\n      setCalloutElement(calloutEl);\n    }, []);\n    const rootRef = useMergedRefs(hostElement, forwardedRef);\n\n    const [targetRef, targetWindow] = useTarget(props.target, {\n      current: calloutElement,\n    });\n    const getBounds = useBounds(props, targetRef, targetWindow);\n    const positions = usePositions(props, hostElement, calloutElement, targetRef, getBounds);\n    const maxHeight = useMaxHeight(props, getBounds, positions);\n    const [mouseDownOnPopup, mouseUpOnPopup] = useDismissHandlers(\n      props,\n      positions,\n      hostElement,\n      targetRef,\n      targetWindow,\n    );\n\n    // do not set both top and bottom css props from positions\n    // instead, use maxHeight\n    const isForcedInBounds = positions?.elementPosition.top && positions?.elementPosition.bottom;\n    const cssPositions = {\n      ...positions?.elementPosition,\n      maxHeight,\n    };\n    if (isForcedInBounds) {\n      cssPositions.bottom = undefined;\n    }\n\n    useAutoFocus(props, positions, calloutElement);\n\n    React.useEffect(() => {\n      if (!hidden) {\n        onLayerMounted?.();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run if hidden changes\n    }, [hidden]);\n\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\n    if (!targetWindow) {\n      return null;\n    }\n\n    const overflowYHidden = hideOverflow;\n\n    const beakVisible = isBeakVisible && !!target;\n    const classNames = getClassNames(styles!, {\n      theme: props.theme!,\n      className,\n      overflowYHidden,\n      calloutWidth,\n      positions,\n      beakWidth,\n      backgroundColor,\n      calloutMaxWidth,\n      calloutMinWidth,\n      doNotLayer,\n    });\n\n    const overflowStyle: React.CSSProperties = {\n      maxHeight: calloutMaxHeight ? calloutMaxHeight : '100%',\n      ...style,\n      ...(overflowYHidden && { overflowY: 'hidden' }),\n    };\n\n    const visibilityStyle: React.CSSProperties | undefined = props.hidden ? { visibility: 'hidden' } : undefined;\n    // React.CSSProperties does not understand IRawStyle, so the inline animations will need to be cast as any for now.\n    return (\n      <div ref={rootRef} className={classNames.container} style={visibilityStyle}>\n        <div\n          {...getNativeProps(props, divProperties, ARIA_ROLE_ATTRIBUTES)}\n          className={css(classNames.root, positions && positions.targetEdge && ANIMATIONS[positions.targetEdge!])}\n          style={positions ? { ...cssPositions } : OFF_SCREEN_STYLE}\n          // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n          // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n          tabIndex={-1}\n          ref={calloutCallback}\n        >\n          {beakVisible && <div className={classNames.beak} style={getBeakPosition(positions)} />}\n          {beakVisible && <div className={classNames.beakCurtain} />}\n          <Popup\n            // don't use getNativeElementProps for role and roledescription because it will also\n            // pass through data-* props (resulting in them being used in two places)\n            role={props.role}\n            aria-roledescription={props['aria-roledescription']}\n            ariaDescribedBy={ariaDescribedBy}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            className={classNames.calloutMain}\n            onDismiss={props.onDismiss}\n            onMouseDown={mouseDownOnPopup}\n            onMouseUp={mouseUpOnPopup}\n            onRestoreFocus={props.onRestoreFocus}\n            onScroll={onScroll}\n            shouldRestoreFocus={shouldRestoreFocus}\n            style={overflowStyle}\n            {...popupProps}\n          >\n            {children}\n          </Popup>\n        </div>\n      </div>\n    );\n  }),\n  (previousProps: ICalloutProps, nextProps: ICalloutProps) => {\n    if (!nextProps.shouldUpdateWhenHidden && previousProps.hidden && nextProps.hidden) {\n      // Do not update when hidden.\n      return true;\n    }\n    return shallowCompare(previousProps, nextProps);\n  },\n);\n\n/**\n * (Utility) to find and return the current `Callout` Beak position.\n *\n * @param positions\n */\nfunction getBeakPosition(positions?: ICalloutPositionedInfo): React.CSSProperties {\n  const beakPositionStyle: React.CSSProperties = {\n    ...positions?.beakPosition?.elementPosition,\n    display: positions?.beakPosition?.hideBeak ? 'none' : undefined,\n  };\n\n  if (!beakPositionStyle.top && !beakPositionStyle.bottom && !beakPositionStyle.left && !beakPositionStyle.right) {\n    beakPositionStyle.left = BEAK_ORIGIN_POSITION.left;\n    beakPositionStyle.top = BEAK_ORIGIN_POSITION.top;\n  }\n\n  return beakPositionStyle;\n}\n\n/**\n * (Utility) used to compare two different elementPositions to determine whether they are equal.\n *\n * @param prevElementPositions\n * @param newElementPosition\n */\nfunction arePositionsEqual(\n  prevElementPositions: ICalloutPositionedInfo,\n  newElementPosition: ICalloutPositionedInfo,\n): boolean {\n  return (\n    comparePositions(prevElementPositions.elementPosition, newElementPosition.elementPosition) &&\n    comparePositions(prevElementPositions.beakPosition.elementPosition, newElementPosition.beakPosition.elementPosition)\n  );\n}\n\n/**\n * (Utility) used in **arePositionsEqual** to compare two different elementPositions.\n *\n * @param prevElementPositions\n * @param newElementPositions\n */\nfunction comparePositions(prevElementPositions: IPosition, newElementPositions: IPosition): boolean {\n  for (const key in newElementPositions) {\n    if (newElementPositions.hasOwnProperty(key)) {\n      const oldPositionEdge = prevElementPositions[key];\n      const newPositionEdge = newElementPositions[key];\n      if (oldPositionEdge !== undefined && newPositionEdge !== undefined) {\n        if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nCalloutContentBase.displayName = COMPONENT_NAME;\n", "export const DirectionalHint = {\n  /**\n   * Appear above the target element, with the left edges of the callout and target aligning.\n   */\n  topLeftEdge: 0 as 0,\n\n  /**\n   * Appear above the target element, with the centers of the callout and target aligning.\n   */\n  topCenter: 1 as 1,\n\n  /**\n   * Appear above the target element, with the right edges of the callout and target aligning.\n   */\n  topRightEdge: 2 as 2,\n\n  /**\n   * Appear above the target element, aligning with the target element such that the callout tends toward\n   * the center of the screen.\n   */\n  topAutoEdge: 3 as 3,\n\n  /**\n   * Appear below the target element, with the left edges of the callout and target aligning.\n   */\n  bottomLeftEdge: 4 as 4,\n\n  /**\n   * Appear below the target element, with the centers of the callout and target aligning.\n   */\n  bottomCenter: 5 as 5,\n\n  /**\n   * Appear below the target element, with the right edges of the callout and target aligning.\n   */\n  bottomRightEdge: 6 as 6,\n\n  /**\n   * Appear below the target element, aligning with the target element such that the callout tends toward\n   * the center of the screen.\n   */\n  bottomAutoEdge: 7 as 7,\n\n  /**\n   * Appear to the left of the target element, with the top edges of the callout and target aligning.\n   */\n  leftTopEdge: 8 as 8,\n\n  /**\n   * Appear to the left of the target element, with the centers of the callout and target aligning.\n   */\n  leftCenter: 9 as 9,\n\n  /**\n   * Appear to the left of the target element, with the bottom edges of the callout and target aligning.\n   */\n  leftBottomEdge: 10 as 10,\n\n  /**\n   * Appear to the right of the target element, with the top edges of the callout and target aligning.\n   */\n  rightTopEdge: 11 as 11,\n\n  /**\n   * Appear to the right of the target element, with the centers of the callout and target aligning.\n   */\n  rightCenter: 12 as 12,\n\n  /**\n   * Appear to the right of the target element, with the bottom edges of the callout and target aligning.\n   */\n  rightBottomEdge: 13 as 13,\n};\n\nexport type DirectionalHint = (typeof DirectionalHint)[keyof typeof DirectionalHint];\n", "import { DirectionalHint } from '../../common/DirectionalHint';\nimport type { IRectangle, Point } from '../../Utilities';\n\nexport enum RectangleEdge {\n  top = 1,\n  bottom = -1,\n  left = 2,\n  right = -2,\n}\n\nexport enum Position {\n  top = 0,\n  bottom = 1,\n  start = 2,\n  end = 3,\n}\n\n/**\n * Window with typings for experimental features regarding Dual Screen devices.\n */\nexport interface IWindowWithSegments extends Window {\n  getWindowSegments?: () => DOMRect[];\n}\n\nexport interface IPositionProps {\n  target?: Element | MouseEvent | Point;\n  /** how the element should be positioned */\n  directionalHint?: DirectionalHint;\n  /**\n   * How the element should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used instead\n   */\n  directionalHintForRTL?: DirectionalHint;\n  /** The gap between the callout and the target */\n  gapSpace?: number;\n  /**\n   * The bounding rectangle for which  the contextual menu can appear in.\n   */\n  bounds?: IRectangle;\n  /**\n   * If true the position returned will have the menu element cover the target.\n   * If false then it will position next to the target;\n   */\n  coverTarget?: boolean;\n  /**\n   * If true the position will not change edges in an attempt to fit the rectangle within bounds.\n   * It will still attempt to align it to whatever bounds are given.\n   * @defaultvalue false\n   */\n  directionalHintFixed?: boolean;\n\n  /**\n   * If true the positioning logic will prefer flipping edges over nudging the rectangle to fit within bounds,\n   * thus making sure the element align perfectly with target.\n   */\n  alignTargetEdge?: boolean;\n}\n\nexport interface ICalloutPositionProps extends IPositionProps {\n  /**\n   * The width of the beak.\n   */\n  beakWidth?: number;\n\n  /**\n   * Whether or not the beak is visible\n   */\n  isBeakVisible?: boolean;\n}\n\nexport interface IPositionedData {\n  /**\n   * The new position of the element.\n   */\n  elementPosition: IPosition;\n  /**\n   * The finalized target edge that element is aligning to. For instance RectangleEdge.bottom would mean\n   * that the bottom edge of the target is being aligned to by the RectangleEdge.top of the element\n   * that is being positioned.\n   */\n  targetEdge: RectangleEdge;\n  /**\n   * The finalized alignment edge that the element is aligning too. For instance, RectangleEdge.left means\n   * that the left edge of the target should be in line with the left edge of the element being positioned.\n   */\n  alignmentEdge?: RectangleEdge;\n}\n\nexport interface ICalloutPositionedInfo extends IPositionedData {\n  beakPosition: ICalloutBeakPositionedInfo;\n}\n\nexport interface ICalloutBeakPositionedInfo extends IPositionedData {\n  closestEdge: RectangleEdge;\n  hideBeak?: boolean;\n}\n\n/**\n * Gives the position of some element on the page. Only a pair of vertical and horizontal edges need to be\n * given. So top/left or bottom/left is sufficient.\n * The number given is the distance in pixels from whatever host was given..\n * So bottom: 100 would be 100px up from the bottom of the host while top: 100px from the top.\n */\nexport interface IPosition {\n  top?: number;\n  left?: number;\n  bottom?: number;\n  right?: number;\n  [key: string]: number | undefined;\n}\n\nexport interface IPositionDirectionalHintData {\n  targetEdge: RectangleEdge;\n  alignmentEdge?: RectangleEdge;\n  isAuto?: boolean;\n  alignTargetEdge?: boolean;\n}\n\nexport interface IRelativePositions {\n  calloutPosition: IPosition;\n  beakPosition: { position: IPosition | undefined; display: 'block' };\n  directionalClassName: string;\n  submenuDirection: DirectionalHint;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nexport type { Point, IPoint } from '../../Utilities';\n", "import { DirectionalHint } from '../../common/DirectionalHint';\nimport { getScrollbarWidth, getRTL } from '../../Utilities';\nimport { RectangleEdge } from './positioning.types';\nimport { Rectangle } from '../../Utilities';\nimport type { IRectangle, Point } from '../../Utilities';\nimport type {\n  IPositionDirectionalHintData,\n  IPositionedData,\n  ICalloutPositionedInfo,\n  ICalloutBeakPositionedInfo,\n  IPositionProps,\n  ICalloutPositionProps,\n  IWindowWithSegments,\n} from './positioning.types';\n\nfunction _createPositionData(\n  targetEdge: RectangleEdge,\n  alignmentEdge?: RectangleEdge,\n  isAuto?: boolean,\n): IPositionDirectionalHintData {\n  return {\n    targetEdge,\n    alignmentEdge,\n    isAuto,\n  };\n}\n\n// Currently the beakPercent is set to 50 for all positions meaning that it should tend to the center of the target\nconst DirectionalDictionary: { [key: number]: IPositionDirectionalHintData } = {\n  [DirectionalHint.topLeftEdge]: _createPositionData(RectangleEdge.top, RectangleEdge.left),\n  [DirectionalHint.topCenter]: _createPositionData(RectangleEdge.top),\n  [DirectionalHint.topRightEdge]: _createPositionData(RectangleEdge.top, RectangleEdge.right),\n  [DirectionalHint.topAutoEdge]: _createPositionData(RectangleEdge.top, undefined, true),\n  [DirectionalHint.bottomLeftEdge]: _createPositionData(RectangleEdge.bottom, RectangleEdge.left),\n  [DirectionalHint.bottomCenter]: _createPositionData(RectangleEdge.bottom),\n  [DirectionalHint.bottomRightEdge]: _createPositionData(RectangleEdge.bottom, RectangleEdge.right),\n  [DirectionalHint.bottomAutoEdge]: _createPositionData(RectangleEdge.bottom, undefined, true),\n  [DirectionalHint.leftTopEdge]: _createPositionData(RectangleEdge.left, RectangleEdge.top),\n  [DirectionalHint.leftCenter]: _createPositionData(RectangleEdge.left),\n  [DirectionalHint.leftBottomEdge]: _createPositionData(RectangleEdge.left, RectangleEdge.bottom),\n  [DirectionalHint.rightTopEdge]: _createPositionData(RectangleEdge.right, RectangleEdge.top),\n  [DirectionalHint.rightCenter]: _createPositionData(RectangleEdge.right),\n  [DirectionalHint.rightBottomEdge]: _createPositionData(RectangleEdge.right, RectangleEdge.bottom),\n};\n\n/**\n * Do not call methods from this directly, use either positionCallout or positionElement or make another function that\n * utilizes them.\n * START Private functions and interfaces\n */\n\nexport interface IElementPosition {\n  elementRectangle: Rectangle;\n  targetEdge: RectangleEdge;\n  alignmentEdge: RectangleEdge | undefined;\n  forcedInBounds?: boolean;\n}\n\nexport interface IElementPositionInfo extends IElementPosition {\n  targetRectangle: Rectangle;\n}\n\ntype PartialIRectangle = Partial<IRectangle>;\n\ninterface IPartialIRectangle extends PartialIRectangle {\n  [key: string]: number | undefined;\n}\n\nfunction _isRectangleWithinBounds(rect: Rectangle, boundingRect: Rectangle): boolean {\n  if (rect.top < boundingRect.top) {\n    return false;\n  }\n  if (rect.bottom > boundingRect.bottom) {\n    return false;\n  }\n  if (rect.left < boundingRect.left) {\n    return false;\n  }\n  if (rect.right > boundingRect.right) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Gets all of the edges of a rectangle that are outside of the given bounds.\n * If there are no out of bounds edges it returns an empty array.\n */\nfunction _getOutOfBoundsEdges(rect: Rectangle, boundingRect: Rectangle): RectangleEdge[] {\n  const outOfBounds: RectangleEdge[] = [];\n\n  if (rect.top < boundingRect.top) {\n    outOfBounds.push(RectangleEdge.top);\n  }\n  if (rect.bottom > boundingRect.bottom) {\n    outOfBounds.push(RectangleEdge.bottom);\n  }\n  if (rect.left < boundingRect.left) {\n    outOfBounds.push(RectangleEdge.left);\n  }\n  if (rect.right > boundingRect.right) {\n    outOfBounds.push(RectangleEdge.right);\n  }\n\n  return outOfBounds;\n}\n\nfunction _getEdgeValue(rect: Rectangle, edge: RectangleEdge): number {\n  return (rect as any)[RectangleEdge[edge]] as number;\n}\n\nfunction _setEdgeValue(rect: Rectangle, edge: RectangleEdge, value: number) {\n  (rect as any)[RectangleEdge[edge]] = value;\n  return rect;\n}\n\n/**\n * Returns the middle value of an edge. Only returns 1 value rather than xy coordinates as\n * the itself already contains the other coordinate.\n * For instance, a bottom edge's current value is it's y coordinate, so the number returned is the x.\n */\nfunction _getCenterValue(rect: Rectangle, edge: RectangleEdge): number {\n  const edges = _getFlankingEdges(edge);\n  return (_getEdgeValue(rect, edges.positiveEdge) + _getEdgeValue(rect, edges.negativeEdge)) / 2;\n}\n\n/**\n * Flips the value depending on the edge.\n * If the edge is a \"positive\" edge, Top or Left, then the value should stay as it is.\n * If the edge is a \"negative\" edge, Bottom or Right, then the value should be flipped.\n * This is to account for the fact that the coordinates are effectively reserved in certain cases for the\n * \"negative\" edges.\n *\n * For example, when testing to see if a bottom edge 1 is within the bounds of another bottom edge 2:\n * If edge 1 is greater than edge 2 then it is out of bounds. This is reversed for top edge 1 and top edge 2.\n * If top edge 1 is less than edge 2 then it is out of bounds.\n */\nfunction _getRelativeEdgeValue(edge: RectangleEdge, value: number): number {\n  if (edge > 0) {\n    return value;\n  } else {\n    return value * -1;\n  }\n}\n\nfunction _getRelativeRectEdgeValue(edge: RectangleEdge, rect: Rectangle): number {\n  return _getRelativeEdgeValue(edge, _getEdgeValue(rect, edge));\n}\n\nfunction _getRelativeEdgeDifference(rect: Rectangle, hostRect: Rectangle, edge: RectangleEdge): number {\n  const edgeDifference = _getEdgeValue(rect, edge) - _getEdgeValue(hostRect, edge);\n  return _getRelativeEdgeValue(edge, edgeDifference);\n}\n\n/**\n * Moves the edge of a rectangle to the value given. It only moves the edge in a linear direction based on that edge.\n * For example, if it's a bottom edge it will only change y coordinates.\n * if maintainSize is set to false, it will only adjust the specified edge value\n */\nfunction _moveEdge(rect: Rectangle, edge: RectangleEdge, newValue: number, maintainSize = true): Rectangle {\n  const difference = _getEdgeValue(rect, edge) - newValue;\n  let returnRect = _setEdgeValue(rect, edge, newValue);\n  if (maintainSize) {\n    returnRect = _setEdgeValue(rect, edge * -1, _getEdgeValue(rect, edge * -1) - difference);\n  }\n  return returnRect;\n}\n\n/**\n * Aligns the edge on the passed in rect to the target. If there is a gap then it will have that space between the two.\n */\nfunction _alignEdges(rect: Rectangle, target: Rectangle, edge: RectangleEdge, gap: number = 0): Rectangle {\n  return _moveEdge(rect, edge, _getEdgeValue(target, edge) + _getRelativeEdgeValue(edge, gap));\n}\n\n/**\n * Aligns the targetEdge on the passed in target to the rects corresponding opposite edge.\n * For instance if targetEdge is bottom, then the rects top will be moved to match it.\n */\nfunction _alignOppositeEdges(\n  rect: Rectangle,\n  target: Rectangle,\n  targetEdge: RectangleEdge,\n  gap: number = 0,\n): Rectangle {\n  const oppositeEdge = targetEdge * -1;\n  const adjustedGap = _getRelativeEdgeValue(oppositeEdge, gap);\n  return _moveEdge(rect, targetEdge * -1, _getEdgeValue(target, targetEdge) + adjustedGap);\n}\n\n/**\n * Tests to see if the given edge is within the bounds of the given rectangle.\n */\nfunction _isEdgeInBounds(rect: Rectangle, bounds: Rectangle, edge: RectangleEdge): boolean {\n  const adjustedRectValue = _getRelativeRectEdgeValue(edge, rect);\n  return adjustedRectValue > _getRelativeRectEdgeValue(edge, bounds);\n}\n\n/**\n * Returns a measure of how much a rectangle is out of bounds for a given alignment;\n * this can be used to compare which rectangle is more or less out of bounds.\n * A value of 0 means the rectangle is entirely in bounds\n */\nfunction _getOutOfBoundsDegree(rect: Rectangle, bounds: Rectangle) {\n  const breakingEdges = _getOutOfBoundsEdges(rect, bounds);\n  let total = 0;\n  for (const edge of breakingEdges) {\n    total += _getRelativeEdgeDifference(rect, bounds, edge) ** 2;\n  }\n\n  return total;\n}\n\n/**\n * Attempts to move the rectangle through various sides of the target to find a place to fit.\n * If no fit is found, the least bad option should be returned.\n */\nfunction _flipToFit(\n  rect: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n): IElementPosition {\n  const directions: RectangleEdge[] = [\n    RectangleEdge.left,\n    RectangleEdge.right,\n    RectangleEdge.bottom,\n    RectangleEdge.top,\n  ];\n  // In RTL page, RectangleEdge.right has a higher priority than RectangleEdge.left, so the order should be updated.\n  if (getRTL()) {\n    directions[0] *= -1;\n    directions[1] *= -1;\n  }\n  let currentEstimate = rect;\n  let currentEdge = positionData.targetEdge;\n  let currentAlignment = positionData.alignmentEdge;\n\n  // keep track of least bad option, in case no sides fit\n  let oobDegree;\n  let bestEdge = currentEdge;\n  let bestAlignment = currentAlignment;\n\n  // Keep switching sides until one is found with enough space.\n  // If all sides don't fit then return the unmodified element.\n  for (let i = 0; i < 4; i++) {\n    if (!_isEdgeInBounds(currentEstimate, bounding, currentEdge)) {\n      // update least-bad edges\n      const currentOOBDegree = _getOutOfBoundsDegree(currentEstimate, bounding);\n      if (!oobDegree || currentOOBDegree < oobDegree) {\n        oobDegree = currentOOBDegree;\n        bestEdge = currentEdge;\n        bestAlignment = currentAlignment;\n      }\n\n      directions.splice(directions.indexOf(currentEdge), 1);\n      if (directions.length > 0) {\n        if (directions.indexOf(currentEdge * -1) > -1) {\n          currentEdge = currentEdge * -1;\n        } else {\n          currentAlignment = currentEdge;\n          currentEdge = directions.slice(-1)[0];\n        }\n        currentEstimate = _estimatePosition(\n          rect,\n          target,\n          { targetEdge: currentEdge, alignmentEdge: currentAlignment },\n          gap,\n        );\n      }\n    } else {\n      return {\n        elementRectangle: currentEstimate,\n        targetEdge: currentEdge,\n        alignmentEdge: currentAlignment,\n      };\n    }\n  }\n\n  // nothing fits, use least-bad option\n  currentEstimate = _estimatePosition(rect, target, { targetEdge: bestEdge, alignmentEdge: bestAlignment }, gap);\n  return {\n    elementRectangle: currentEstimate,\n    targetEdge: bestEdge,\n    alignmentEdge: bestAlignment,\n  };\n}\n\n/**\n * Flips only the alignment edge of an element rectangle. This is used instead of nudging the alignment edges\n * into position, when `alignTargetEdge` is specified.\n */\nfunction _flipAlignmentEdge(\n  elementEstimate: IElementPosition,\n  target: Rectangle,\n  gap: number,\n  coverTarget?: boolean,\n): IElementPosition {\n  const { alignmentEdge, targetEdge, elementRectangle } = elementEstimate;\n  const oppositeEdge = alignmentEdge! * -1;\n  const newEstimate = _estimatePosition(\n    elementRectangle,\n    target,\n    { targetEdge, alignmentEdge: oppositeEdge },\n    gap,\n    coverTarget,\n  );\n\n  return {\n    elementRectangle: newEstimate,\n    targetEdge,\n    alignmentEdge: oppositeEdge,\n  };\n}\n\n/**\n * Adjusts a element rectangle to fit within the bounds given. If directionalHintFixed or covertarget is passed in\n * then the element will not flip sides on the target. They will, however, be nudged to fit within the bounds given.\n */\nfunction _adjustFitWithinBounds(\n  element: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n  directionalHintFixed?: boolean,\n  coverTarget?: boolean,\n): IElementPosition {\n  const { alignmentEdge, alignTargetEdge } = positionData;\n  let elementEstimate: IElementPosition = {\n    elementRectangle: element,\n    targetEdge: positionData.targetEdge,\n    alignmentEdge,\n  };\n\n  if (!directionalHintFixed && !coverTarget) {\n    elementEstimate = _flipToFit(element, target, bounding, positionData, gap);\n  }\n  const outOfBounds = _getOutOfBoundsEdges(elementEstimate.elementRectangle, bounding);\n  // if directionalHintFixed is specified, we need to force the target edge to not change\n  // we need *-1 because targetEdge refers to the target's edge; the callout edge is the opposite\n  const fixedEdge = directionalHintFixed ? -elementEstimate.targetEdge : undefined;\n\n  if (outOfBounds.length > 0) {\n    if (alignTargetEdge) {\n      // The edge opposite to the alignment edge might be out of bounds.\n      // Flip alignment to see if we can get it within bounds.\n      if (elementEstimate.alignmentEdge && outOfBounds.indexOf(elementEstimate.alignmentEdge * -1) > -1) {\n        const flippedElementEstimate = _flipAlignmentEdge(elementEstimate, target, gap, coverTarget);\n        if (_isRectangleWithinBounds(flippedElementEstimate.elementRectangle, bounding)) {\n          return flippedElementEstimate;\n        } else {\n          // If the flipped elements edges are still out of bounds, try nudging it.\n          elementEstimate = _alignOutOfBoundsEdges(\n            _getOutOfBoundsEdges(flippedElementEstimate.elementRectangle, bounding),\n            elementEstimate,\n            bounding,\n            fixedEdge,\n          );\n        }\n      } else {\n        elementEstimate = _alignOutOfBoundsEdges(outOfBounds, elementEstimate, bounding, fixedEdge);\n      }\n    } else {\n      elementEstimate = _alignOutOfBoundsEdges(outOfBounds, elementEstimate, bounding, fixedEdge);\n    }\n  }\n\n  return elementEstimate;\n}\n\n/**\n * Iterates through a list of out of bounds edges and tries to nudge and align them.\n * @param outOfBoundsEdges - Array of edges that are out of bounds\n * @param elementEstimate - The current element positioning estimate\n * @param bounding - The current bounds\n * @param preserveEdge - Specify an edge that should not be modified\n */\nfunction _alignOutOfBoundsEdges(\n  outOfBoundsEdges: RectangleEdge[],\n  elementEstimate: IElementPosition,\n  bounding: Rectangle,\n  preserveEdge?: RectangleEdge,\n) {\n  for (const direction of outOfBoundsEdges) {\n    let edgeAttempt;\n\n    // if preserveEdge is specified, do not call _alignEdges, skip directly to _moveEdge\n    // this is because _alignEdges will move the opposite edge\n    if (preserveEdge && preserveEdge === direction * -1) {\n      edgeAttempt = _moveEdge(elementEstimate.elementRectangle, direction, _getEdgeValue(bounding, direction), false);\n      elementEstimate.forcedInBounds = true;\n    } else {\n      edgeAttempt = _alignEdges(elementEstimate.elementRectangle, bounding, direction);\n      const inBounds = _isEdgeInBounds(edgeAttempt, bounding, direction * -1);\n      // only update estimate if the attempt didn't break out of the opposite bounding edge\n      if (!inBounds) {\n        edgeAttempt = _moveEdge(edgeAttempt, direction * -1, _getEdgeValue(bounding, direction * -1), false);\n        elementEstimate.forcedInBounds = true;\n      }\n    }\n\n    elementEstimate.elementRectangle = edgeAttempt;\n  }\n\n  return elementEstimate;\n}\n\n/**\n * Moves the middle point on an edge to the point given.\n * Only moves in one direction. For instance if a bottom edge is passed in, then\n * the bottom edge will be moved in the x axis to match the point.\n */\nfunction _centerEdgeToPoint(rect: Rectangle, edge: RectangleEdge, point: number): Rectangle {\n  const { positiveEdge } = _getFlankingEdges(edge);\n  const elementMiddle = _getCenterValue(rect, edge);\n  const distanceToMiddle = elementMiddle - _getEdgeValue(rect, positiveEdge);\n  return _moveEdge(rect, positiveEdge, point - distanceToMiddle);\n}\n\n/**\n * Moves the element rectangle to be appropriately positioned relative to a given target.\n * Does not flip or adjust the element.\n */\nfunction _estimatePosition(\n  elementToPosition: Rectangle,\n  target: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n  coverTarget?: boolean,\n): Rectangle {\n  let estimatedElementPosition = new Rectangle(\n    elementToPosition.left,\n    elementToPosition.right,\n    elementToPosition.top,\n    elementToPosition.bottom,\n  );\n  const { alignmentEdge, targetEdge } = positionData;\n  const elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n  estimatedElementPosition = coverTarget\n    ? _alignEdges(estimatedElementPosition, target, targetEdge, gap)\n    : _alignOppositeEdges(estimatedElementPosition, target, targetEdge, gap);\n  // if no alignment edge is provided it's supposed to be centered.\n  if (!alignmentEdge) {\n    const targetMiddlePoint = _getCenterValue(target, targetEdge);\n    estimatedElementPosition = _centerEdgeToPoint(estimatedElementPosition, elementEdge, targetMiddlePoint);\n  } else {\n    estimatedElementPosition = _alignEdges(estimatedElementPosition, target, alignmentEdge);\n  }\n\n  return estimatedElementPosition;\n}\n\n/**\n * Returns the non-opposite edges of the target edge.\n * For instance if bottom is passed in then left and right will be returned.\n */\nfunction _getFlankingEdges(edge: RectangleEdge): { positiveEdge: RectangleEdge; negativeEdge: RectangleEdge } {\n  if (edge === RectangleEdge.top || edge === RectangleEdge.bottom) {\n    return {\n      positiveEdge: RectangleEdge.left,\n      negativeEdge: RectangleEdge.right,\n    };\n  } else {\n    return {\n      positiveEdge: RectangleEdge.top,\n      negativeEdge: RectangleEdge.bottom,\n    };\n  }\n}\n\n/**\n * Retrieve the final value for the return edge of `elementRectangle`. If the `elementRectangle` is closer to one side\n * of the bounds versus the other, the return edge is flipped to grow inward.\n */\nfunction _finalizeReturnEdge(\n  elementRectangle: Rectangle,\n  returnEdge: RectangleEdge,\n  bounds?: Rectangle,\n): RectangleEdge {\n  if (\n    bounds &&\n    Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge)) >\n      Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge * -1))\n  ) {\n    return returnEdge * -1;\n  }\n\n  return returnEdge;\n}\n\n/**\n * Whether or not the considered edge of the elementRectangle is lying on the edge of the bounds\n * @param elementRectangle The rectangle whose edge we are considering\n * @param bounds The rectangle marking the bounds\n * @param edge The target edge we're considering\n * @returns If the target edge of the elementRectangle is in the same location as that edge of the bounds\n */\nfunction _isEdgeOnBounds(elementRectangle: Rectangle, edge: RectangleEdge, bounds?: Rectangle): boolean {\n  return bounds !== undefined && _getEdgeValue(elementRectangle, edge) === _getEdgeValue(bounds, edge);\n}\n\n/**\n * Finalizes the element position based on the hostElement. Only returns the\n * rectangle values to position such that they are anchored to the target.\n * This helps prevent resizing from looking very strange.\n * For instance, if the target edge is top and aligned with the left side then\n * the bottom and left values are returned so as the Callout shrinks it shrinks towards that corner.\n */\nfunction _finalizeElementPosition(\n  elementRectangle: Rectangle,\n  hostElement: HTMLElement,\n  targetEdge: RectangleEdge,\n  bounds?: Rectangle,\n  alignmentEdge?: RectangleEdge,\n  coverTarget?: boolean,\n  doNotFinalizeReturnEdge?: boolean,\n  forceWithinBounds?: boolean,\n): IPartialIRectangle {\n  const returnValue: IPartialIRectangle = {};\n\n  const hostRect: Rectangle = _getRectangleFromElement(hostElement);\n  const elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n  let returnEdge = alignmentEdge ? alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge;\n\n  // If we are finalizing the return edge, choose the edge such that we grow away from the bounds\n  // If we are not finalizing the return edge but the opposite edge is flush against the bounds,\n  // choose that as the anchor edge so the element rect can grow away from the bounds' edge\n  // In this case there will not be a visual difference because there is no more room for the elementRectangle to grow\n  // in the usual direction\n  if (!doNotFinalizeReturnEdge || _isEdgeOnBounds(elementRectangle, getOppositeEdge(returnEdge), bounds)) {\n    returnEdge = _finalizeReturnEdge(elementRectangle, returnEdge, bounds);\n  }\n\n  returnValue[RectangleEdge[elementEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, elementEdge);\n  returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, returnEdge);\n\n  // if the positioned element will still overflow, return all four edges with in-bounds values\n  if (forceWithinBounds) {\n    returnValue[RectangleEdge[elementEdge * -1]] = _getRelativeEdgeDifference(\n      elementRectangle,\n      hostRect,\n      elementEdge * -1,\n    );\n    returnValue[RectangleEdge[returnEdge * -1]] = _getRelativeEdgeDifference(\n      elementRectangle,\n      hostRect,\n      returnEdge * -1,\n    );\n  }\n\n  return returnValue;\n}\n\n// Since the beak is rotated 45 degrees the actual height/width is the length of the diagonal.\n// We still want to position the beak based on it's midpoint which does not change. It will\n// be at (beakwidth / 2, beakwidth / 2)\nfunction _calculateActualBeakWidthInPixels(beakWidth: number): number {\n  return Math.sqrt(beakWidth * beakWidth * 2);\n}\n\n/**\n * Returns the appropriate IPositionData based on the props altered for RTL.\n * If directionalHintForRTL is passed in that is used if the page is RTL.\n * If directionalHint is specified, no directionalHintForRTL is available, and the page is RTL, the hint will be\n * flipped (e.g. bottomLeftEdge would become bottomRightEdge).\n *\n * If there is no directionalHint passed in, bottomAutoEdge is chosen automatically.\n */\nfunction _getPositionData(\n  directionalHint: DirectionalHint = DirectionalHint.bottomAutoEdge,\n  directionalHintForRTL?: DirectionalHint,\n  previousPositions?: IPositionDirectionalHintData,\n): IPositionDirectionalHintData {\n  if (previousPositions) {\n    return {\n      alignmentEdge: previousPositions.alignmentEdge,\n      isAuto: previousPositions.isAuto,\n      targetEdge: previousPositions.targetEdge,\n    };\n  }\n  const positionInformation: IPositionDirectionalHintData = { ...DirectionalDictionary[directionalHint] };\n  if (getRTL()) {\n    // If alignment edge exists and that alignment edge is -2 or 2, right or left, then flip it.\n    if (positionInformation.alignmentEdge && positionInformation.alignmentEdge % 2 === 0) {\n      positionInformation.alignmentEdge = positionInformation.alignmentEdge * -1;\n    }\n\n    return directionalHintForRTL !== undefined ? DirectionalDictionary[directionalHintForRTL] : positionInformation;\n  }\n  return positionInformation;\n}\n\n/**\n * Gets the alignment data for the given information. This only really matters if the positioning is Auto.\n * If it is auto then the alignmentEdge should be chosen based on the target edge's position relative to\n * the center of the page.\n */\nfunction _getAlignmentData(\n  positionData: IPositionDirectionalHintData,\n  target: Rectangle,\n  boundingRect: Rectangle,\n  coverTarget?: boolean,\n  alignTargetEdge?: boolean,\n): IPositionDirectionalHintData {\n  if (positionData.isAuto) {\n    positionData.alignmentEdge = getClosestEdge(positionData.targetEdge, target, boundingRect);\n  }\n\n  positionData.alignTargetEdge = alignTargetEdge;\n  return positionData;\n}\n\nfunction getClosestEdge(targetEdge: RectangleEdge, target: Rectangle, boundingRect: Rectangle): RectangleEdge {\n  const targetCenter: number = _getCenterValue(target, targetEdge);\n  const boundingCenter: number = _getCenterValue(boundingRect, targetEdge);\n  const { positiveEdge, negativeEdge } = _getFlankingEdges(targetEdge);\n  if (targetCenter <= boundingCenter) {\n    return positiveEdge;\n  } else {\n    return negativeEdge;\n  }\n}\n\nfunction _positionElementWithinBounds(\n  elementToPosition: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number,\n  directionalHintFixed?: boolean,\n  coverTarget?: boolean,\n): IElementPosition {\n  const estimatedElementPosition: Rectangle = _estimatePosition(\n    elementToPosition,\n    target,\n    positionData,\n    gap,\n    coverTarget,\n  );\n  if (_isRectangleWithinBounds(estimatedElementPosition, bounding)) {\n    return {\n      elementRectangle: estimatedElementPosition,\n      targetEdge: positionData.targetEdge,\n      alignmentEdge: positionData.alignmentEdge,\n    };\n  } else {\n    return _adjustFitWithinBounds(\n      estimatedElementPosition,\n      target,\n      bounding,\n      positionData,\n      gap,\n      directionalHintFixed,\n      coverTarget,\n    );\n  }\n}\n\nfunction _finalizeBeakPosition(\n  elementPosition: IElementPositionInfo,\n  positionedBeak: Rectangle,\n  bounds?: Rectangle,\n): ICalloutBeakPositionedInfo {\n  const targetEdge = elementPosition.targetEdge * -1;\n  // The \"host\" element that we will use to help position the beak.\n  const actualElement = new Rectangle(\n    0,\n    elementPosition.elementRectangle.width,\n    0,\n    elementPosition.elementRectangle.height,\n  );\n  const returnValue: IPartialIRectangle = {};\n  const returnEdge = _finalizeReturnEdge(\n    elementPosition.elementRectangle,\n    elementPosition.alignmentEdge ? elementPosition.alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge,\n    bounds,\n  );\n\n  // only show the beak if the callout is not fully covering the target\n  const beakEdgeDifference = _getRelativeEdgeDifference(\n    elementPosition.elementRectangle,\n    elementPosition.targetRectangle,\n    targetEdge,\n  );\n  const showBeak = beakEdgeDifference > Math.abs(_getEdgeValue(positionedBeak, targetEdge));\n\n  returnValue[RectangleEdge[targetEdge]] = _getEdgeValue(positionedBeak, targetEdge);\n  returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(positionedBeak, actualElement, returnEdge);\n\n  return {\n    elementPosition: { ...returnValue },\n    closestEdge: getClosestEdge(elementPosition.targetEdge, positionedBeak, actualElement),\n    targetEdge,\n    hideBeak: !showBeak,\n  };\n}\n\nfunction _positionBeak(beakWidth: number, elementPosition: IElementPositionInfo): Rectangle {\n  const target = elementPosition.targetRectangle;\n  /**\n   * Note about beak positioning: The actual beak width only matters for getting the gap between the callout and\n   * target, it does not impact the beak placement within the callout. For example example, if the beakWidth is 8,\n   * then the actual beakWidth is sqrroot(8^2 + 8^2) = 11.31x11.31. So the callout will need to be an extra 3 pixels\n   * away from its target. While the beak is being positioned in the callout it still acts as though it were 8x8.\n   */\n  const { positiveEdge, negativeEdge } = _getFlankingEdges(elementPosition.targetEdge);\n  const beakTargetPoint = _getCenterValue(target, elementPosition.targetEdge);\n  const elementBounds = new Rectangle(\n    beakWidth / 2,\n    elementPosition.elementRectangle.width - beakWidth / 2,\n    beakWidth / 2,\n    elementPosition.elementRectangle.height - beakWidth / 2,\n  );\n\n  let beakPosition: Rectangle = new Rectangle(0, beakWidth, 0, beakWidth);\n\n  beakPosition = _moveEdge(beakPosition, elementPosition.targetEdge * -1, -beakWidth / 2);\n\n  beakPosition = _centerEdgeToPoint(\n    beakPosition,\n    elementPosition.targetEdge * -1,\n    beakTargetPoint - _getRelativeRectEdgeValue(positiveEdge, elementPosition.elementRectangle),\n  );\n\n  if (!_isEdgeInBounds(beakPosition, elementBounds, positiveEdge)) {\n    beakPosition = _alignEdges(beakPosition, elementBounds, positiveEdge);\n  } else if (!_isEdgeInBounds(beakPosition, elementBounds, negativeEdge)) {\n    beakPosition = _alignEdges(beakPosition, elementBounds, negativeEdge);\n  }\n\n  return beakPosition;\n}\n\nfunction _getRectangleFromElement(element: Element): Rectangle {\n  // eslint-disable-next-line deprecation/deprecation\n  const clientRect: ClientRect = element.getBoundingClientRect();\n\n  return new Rectangle(clientRect.left, clientRect.right, clientRect.top, clientRect.bottom);\n}\n\nfunction _getRectangleFromIRect(rect: IRectangle): Rectangle {\n  return new Rectangle(rect.left, rect.right, rect.top, rect.bottom);\n}\n\nfunction _getTargetRect(bounds: Rectangle, target: Element | MouseEvent | Point | Rectangle | undefined): Rectangle {\n  let targetRectangle: Rectangle;\n  if (target) {\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!(target as MouseEvent).preventDefault) {\n      const ev = target as MouseEvent;\n      targetRectangle = new Rectangle(ev.clientX, ev.clientX, ev.clientY, ev.clientY);\n      // eslint-disable-next-line no-extra-boolean-cast\n    } else if (!!(target as Element).getBoundingClientRect) {\n      targetRectangle = _getRectangleFromElement(target as Element);\n      // HTMLImgElements can have x and y values. The check for it being a point must go last.\n    } else {\n      const rectOrPoint: Point & Rectangle = target as Point & Rectangle;\n      // eslint-disable-next-line deprecation/deprecation\n      const left = rectOrPoint.left || rectOrPoint.x;\n      // eslint-disable-next-line deprecation/deprecation\n      const top = rectOrPoint.top || rectOrPoint.y;\n      const right = rectOrPoint.right || left;\n      const bottom = rectOrPoint.bottom || top;\n      targetRectangle = new Rectangle(left, right, top, bottom);\n    }\n\n    if (!_isRectangleWithinBounds(targetRectangle, bounds)) {\n      const outOfBounds: RectangleEdge[] = _getOutOfBoundsEdges(targetRectangle, bounds);\n\n      for (const direction of outOfBounds) {\n        (targetRectangle as any)[RectangleEdge[direction]] = (bounds as any)[RectangleEdge[direction]];\n      }\n    }\n  } else {\n    targetRectangle = new Rectangle(0, 0, 0, 0);\n  }\n\n  return targetRectangle;\n}\n\n/**\n * If max height is less than zero it returns the bounds height instead.\n */\nfunction _getMaxHeightFromTargetRectangle(\n  targetRectangle: Rectangle,\n  targetEdge: DirectionalHint,\n  gapSpace: number,\n  bounds: Rectangle,\n  coverTarget?: boolean,\n) {\n  let maxHeight = 0;\n  const directionalHint = DirectionalDictionary[targetEdge];\n\n  // If cover target is set, then the max height should be calculated using the opposite of the target edge since\n  // that's the direction that the callout will expand in.\n  // For instance, if the directionalhint is bottomLeftEdge then the callout will position so it's bottom edge\n  // is aligned with the bottom of the target and expand up towards the top of the screen and the calculated max height\n  // is (bottom of target) - (top of screen) - gapSpace.\n  const target = coverTarget ? directionalHint.targetEdge * -1 : directionalHint.targetEdge;\n\n  if (target === RectangleEdge.top) {\n    maxHeight = _getEdgeValue(targetRectangle, directionalHint.targetEdge) - bounds.top - gapSpace;\n  } else if (target === RectangleEdge.bottom) {\n    maxHeight = bounds.bottom - _getEdgeValue(targetRectangle, directionalHint.targetEdge) - gapSpace;\n  } else {\n    maxHeight = bounds.bottom - targetRectangle.top - gapSpace;\n  }\n\n  return maxHeight > 0 ? maxHeight : bounds.height;\n}\n\nfunction _positionElementRelative(\n  props: IPositionProps,\n  elementToPosition: HTMLElement,\n  boundingRect: Rectangle,\n  previousPositions?: IPositionedData,\n): IElementPositionInfo {\n  const gap: number = props.gapSpace ? props.gapSpace : 0;\n  const targetRect: Rectangle = _getTargetRect(boundingRect, props.target);\n  const positionData: IPositionDirectionalHintData = _getAlignmentData(\n    _getPositionData(props.directionalHint, props.directionalHintForRTL, previousPositions)!,\n    targetRect,\n    boundingRect,\n    props.coverTarget,\n    props.alignTargetEdge,\n  );\n  const positionedElement: IElementPosition = _positionElementWithinBounds(\n    _getRectangleFromElement(elementToPosition),\n    targetRect,\n    boundingRect,\n    positionData,\n    gap,\n    props.directionalHintFixed,\n    props.coverTarget,\n  );\n  return { ...positionedElement, targetRectangle: targetRect };\n}\n\nfunction _finalizePositionData(\n  positionedElement: IElementPosition,\n  hostElement: HTMLElement,\n  bounds?: Rectangle,\n  coverTarget?: boolean,\n  doNotFinalizeReturnEdge?: boolean,\n): IPositionedData {\n  const finalizedElement: IPartialIRectangle = _finalizeElementPosition(\n    positionedElement.elementRectangle,\n    hostElement,\n    positionedElement.targetEdge,\n    bounds,\n    positionedElement.alignmentEdge,\n    coverTarget,\n    doNotFinalizeReturnEdge,\n    positionedElement.forcedInBounds,\n  );\n  return {\n    elementPosition: finalizedElement,\n    targetEdge: positionedElement.targetEdge,\n    alignmentEdge: positionedElement.alignmentEdge,\n  };\n}\n\nfunction _positionElement(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: IPositionedData,\n): IPositionedData {\n  const boundingRect: Rectangle = props.bounds\n    ? _getRectangleFromIRect(props.bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n  const positionedElement: IElementPosition = _positionElementRelative(\n    props,\n    elementToPosition,\n    boundingRect,\n    previousPositions,\n  );\n  return _finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget);\n}\n\nfunction _positionCallout(\n  props: ICalloutPositionProps,\n  hostElement: HTMLElement,\n  callout: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n  doNotFinalizeReturnEdge?: boolean,\n): ICalloutPositionedInfo {\n  const beakWidth: number = props.isBeakVisible ? props.beakWidth || 0 : 0;\n  const gap: number = _calculateActualBeakWidthInPixels(beakWidth) / 2 + (props.gapSpace ? props.gapSpace : 0);\n  const positionProps: IPositionProps = props;\n  positionProps.gapSpace = gap;\n  const boundingRect: Rectangle = props.bounds\n    ? _getRectangleFromIRect(props.bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n  const positionedElement: IElementPositionInfo = _positionElementRelative(\n    positionProps,\n    callout,\n    boundingRect,\n    previousPositions,\n  );\n\n  const beakPositioned: Rectangle = _positionBeak(beakWidth, positionedElement);\n  const finalizedBeakPosition: ICalloutBeakPositionedInfo = _finalizeBeakPosition(\n    positionedElement,\n    beakPositioned,\n    boundingRect,\n  );\n\n  return {\n    ..._finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget, doNotFinalizeReturnEdge),\n    beakPosition: finalizedBeakPosition,\n  };\n}\n\nfunction _positionCard(\n  props: ICalloutPositionProps,\n  hostElement: HTMLElement,\n  callout: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCallout(props, hostElement, callout, previousPositions, true);\n}\n// END PRIVATE FUNCTIONS\n\nexport const __positioningTestPackage = {\n  _finalizePositionData,\n  _finalizeBeakPosition,\n  _calculateActualBeakWidthInPixels,\n  _positionElementWithinBounds,\n  _positionBeak,\n  _getPositionData,\n  _getMaxHeightFromTargetRectangle,\n};\n\n/**\n * Used to position an element relative to the given positioning props.\n * If positioning has been completed before, previousPositions can be passed to ensure that the positioning element\n * repositions based on its previous targets rather than starting with directionalhint.\n */\nexport function positionElement(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: IPositionedData,\n): IPositionedData {\n  return _positionElement(props, hostElement, elementToPosition, previousPositions);\n}\n\nexport function positionCallout(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCallout(props, hostElement, elementToPosition, previousPositions);\n}\n\nexport function positionCard(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCard(props, hostElement, elementToPosition, previousPositions);\n}\n\n/**\n * Gets the maximum height that a rectangle can have in order to fit below or above a target.\n * If the directional hint specifies a left or right edge (i.e. leftCenter) it will limit the height to the topBorder\n * of the target given.\n * If no bounds are provided then the window is treated as the bounds.\n */\nexport function getMaxHeight(\n  target: Element | MouseEvent | Point | Rectangle,\n  targetEdge: DirectionalHint,\n  gapSpace: number = 0,\n  bounds?: IRectangle,\n  coverTarget?: boolean,\n): number {\n  const mouseTarget: MouseEvent = target as MouseEvent;\n  const elementTarget: Element = target as Element;\n  const rectOrPointTarget: Point & Rectangle = target as Point & Rectangle;\n  let targetRect: Rectangle;\n  const boundingRectangle = bounds\n    ? _getRectangleFromIRect(bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n\n  // eslint-disable-next-line deprecation/deprecation\n  const left = rectOrPointTarget.left || rectOrPointTarget.x;\n  // eslint-disable-next-line deprecation/deprecation\n  const top = rectOrPointTarget.top || rectOrPointTarget.y;\n  const right = rectOrPointTarget.right || left;\n  const bottom = rectOrPointTarget.bottom || top;\n\n  // eslint-disable-next-line no-extra-boolean-cast -- may not actually be a MouseEvent\n  if (!!mouseTarget.stopPropagation) {\n    targetRect = new Rectangle(mouseTarget.clientX, mouseTarget.clientX, mouseTarget.clientY, mouseTarget.clientY);\n  } else if (left !== undefined && top !== undefined) {\n    targetRect = new Rectangle(left, right, top, bottom);\n  } else {\n    targetRect = _getRectangleFromElement(elementTarget);\n  }\n\n  return _getMaxHeightFromTargetRectangle(targetRect, targetEdge, gapSpace, boundingRectangle, coverTarget);\n}\n\n/**\n * Returns the opposite edge of the given RectangleEdge.\n */\nexport function getOppositeEdge(edge: RectangleEdge): RectangleEdge {\n  return edge * -1;\n}\n\nfunction _getBoundsFromTargetWindow(\n  target: Element | MouseEvent | Point | Rectangle | null,\n  targetWindow: IWindowWithSegments,\n): IRectangle {\n  let segments = undefined;\n  if (targetWindow.getWindowSegments) {\n    segments = targetWindow.getWindowSegments();\n  }\n\n  // Identify if we're dealing with single screen scenarios.\n  if (segments === undefined || segments.length <= 1) {\n    return {\n      top: 0,\n      left: 0,\n      right: targetWindow.innerWidth,\n      bottom: targetWindow.innerHeight,\n      width: targetWindow.innerWidth,\n      height: targetWindow.innerHeight,\n    };\n  }\n\n  // Logic for determining dual screen scenarios.\n  let x: number | undefined = 0;\n  let y: number | undefined = 0;\n\n  // If the target is an Element get coordinates for its center.\n  if (target !== null && !!(target as Element).getBoundingClientRect) {\n    const clientRect = (target as Element).getBoundingClientRect();\n    x = (clientRect.left + clientRect.right) / 2;\n    y = (clientRect.top + clientRect.bottom) / 2;\n  }\n  // If the target is not null get x-axis and y-axis coordinates directly.\n  else if (target !== null) {\n    // eslint-disable-next-line deprecation/deprecation\n    x = (target as Point).left || (target as MouseEvent | Point).x;\n    // eslint-disable-next-line deprecation/deprecation\n    y = (target as Point).top || (target as MouseEvent | Point).y;\n  }\n\n  let bounds = { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n\n  // Define which window segment are the coordinates in and calculate bounds based on that.\n  for (const segment of segments) {\n    if (x && segment.left <= x && segment.right >= x && y && segment.top <= y && segment.bottom >= y) {\n      bounds = {\n        top: segment.top,\n        left: segment.left,\n        right: segment.right,\n        bottom: segment.bottom,\n        width: segment.width,\n        height: segment.height,\n      };\n    }\n  }\n\n  return bounds;\n}\n\nexport function getBoundsFromTargetWindow(\n  target: Element | MouseEvent | Point | Rectangle | null,\n  targetWindow: IWindowWithSegments,\n): IRectangle {\n  return _getBoundsFromTargetWindow(target, targetWindow);\n}\n", "import * as React from 'react';\nimport {\n  KeyCodes,\n  divProperties,\n  doesElementContainFocus,\n  getDocument,\n  getNativeProps,\n  getPropsWithDefaults,\n  getWindow,\n  modalize,\n} from '../../Utilities';\nimport { useMergedRefs, useAsync, useOnEvent } from '@fluentui/react-hooks';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport type { IPopupProps, IPopupRestoreFocusParams } from './Popup.types';\n\nfunction useScrollbarAsync(props: IPopupProps, root: React.RefObject<HTMLDivElement | undefined>) {\n  const async = useAsync();\n  const [needsVerticalScrollBarState, setNeedsVerticalScrollBar] = React.useState(false);\n  React.useEffect(() => {\n    async.requestAnimationFrame(() => {\n      // If overflowY is overridden, don't waste time calculating whether the scrollbar is necessary.\n      if (props.style && props.style.overflowY) {\n        return;\n      }\n\n      let needsVerticalScrollBar = false;\n      if (root && root.current && root.current?.firstElementChild) {\n        // ClientHeight returns the client height of an element rounded to an\n        // integer. On some browsers at different zoom levels this rounding\n        // can generate different results for the root container and child even\n        // though they are the same height. This causes us to show a scroll bar\n        // when not needed. Ideally we would use BoundingClientRect().height\n        // instead however seems that the API is 90% slower than using ClientHeight.\n        // Therefore instead we will calculate the difference between heights and\n        // allow for a 1px difference to still be considered ok and not show the\n        // scroll bar.\n        const rootHeight = root.current.clientHeight;\n        const firstChildHeight = root.current.firstElementChild.clientHeight;\n        if (rootHeight > 0 && firstChildHeight > rootHeight) {\n          needsVerticalScrollBar = firstChildHeight - rootHeight > 1;\n        }\n      }\n      if (needsVerticalScrollBarState !== needsVerticalScrollBar) {\n        setNeedsVerticalScrollBar(needsVerticalScrollBar);\n      }\n    });\n\n    return () => async.dispose();\n  });\n\n  return needsVerticalScrollBarState;\n}\n\nfunction defaultFocusRestorer(options: IPopupRestoreFocusParams) {\n  const { originalElement, containsFocus } = options;\n\n  if (originalElement && containsFocus && originalElement !== getWindow()) {\n    // Make sure that the focus method actually exists\n    // In some cases the object might exist but not be a real element.\n    // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n    // This is wrapped in a setTimeout because of a React 16 bug that is resolved in 17.\n    // Once we move to 17, the setTimeout should be removed (ref: https://github.com/facebook/react/issues/17894#issuecomment-656094405)\n    setTimeout(() => {\n      originalElement.focus?.();\n    }, 0);\n  }\n}\n\nfunction useRestoreFocus(props: IPopupProps, root: React.RefObject<HTMLDivElement | undefined>) {\n  const { onRestoreFocus = defaultFocusRestorer } = props;\n  const originalFocusedElement = React.useRef<HTMLElement>();\n  const containsFocus = React.useRef(false);\n\n  React.useEffect(() => {\n    originalFocusedElement.current = getDocument()!.activeElement as HTMLElement;\n\n    if (doesElementContainFocus(root.current!)) {\n      containsFocus.current = true;\n    }\n\n    return () => {\n      onRestoreFocus?.({\n        originalElement: originalFocusedElement.current,\n        containsFocus: containsFocus.current,\n        documentContainsFocus: getDocument()?.hasFocus() || false,\n      });\n\n      // De-reference DOM Node to avoid retainment via transpiled closure of _onKeyDown\n      originalFocusedElement.current = undefined;\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n\n  useOnEvent(\n    root,\n    'focus',\n    React.useCallback((): void => {\n      containsFocus.current = true;\n    }, []),\n    true,\n  );\n\n  useOnEvent(\n    root,\n    'blur',\n    React.useCallback((ev: FocusEvent): void => {\n      /** The popup should update this._containsFocus when:\n       * relatedTarget exists AND\n       * the relatedTarget is not contained within the popup.\n       * If the relatedTarget is within the popup, that means the popup still has focus\n       * and focused moved from one element to another within the popup.\n       * If relatedTarget is undefined or null that usually means that a\n       * keyboard event occurred and focus didn't change\n       */\n      if (root.current && ev.relatedTarget && !root.current.contains(ev.relatedTarget as HTMLElement)) {\n        containsFocus.current = false;\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n    }, []),\n    true,\n  );\n}\n\nfunction useHideSiblingNodes(props: IPopupProps, root: React.RefObject<HTMLDivElement | undefined>) {\n  // eslint-disable-next-line deprecation/deprecation\n  const shouldHideSiblings = String(props['aria-modal']).toLowerCase() === 'true' && props.enableAriaHiddenSiblings;\n\n  React.useEffect(() => {\n    if (!(shouldHideSiblings && root.current)) {\n      return;\n    }\n\n    const unmodalize = modalize(root.current);\n    return unmodalize;\n  }, [root, shouldHideSiblings]);\n}\n\n/**\n * This adds accessibility to Dialog and Panel controls\n */\nexport const Popup: React.FunctionComponent<IPopupProps> = React.forwardRef<HTMLDivElement, IPopupProps>(\n  (propsWithoutDefaults, forwardedRef) => {\n    const props = getPropsWithDefaults(\n      { shouldRestoreFocus: true, enableAriaHiddenSiblings: true },\n      propsWithoutDefaults,\n    );\n\n    const root = React.useRef<HTMLDivElement>();\n    const mergedRootRef = useMergedRefs(root, forwardedRef) as React.Ref<HTMLDivElement>;\n\n    useHideSiblingNodes(props, root);\n    useRestoreFocus(props, root);\n\n    const { role, className, ariaLabel, ariaLabelledBy, ariaDescribedBy, style, children, onDismiss } = props;\n    const needsVerticalScrollBar = useScrollbarAsync(props, root);\n\n    const onKeyDown = React.useCallback(\n      (ev: React.KeyboardEvent<HTMLElement> | KeyboardEvent): void => {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n          case KeyCodes.escape:\n            if (onDismiss) {\n              onDismiss(ev);\n\n              ev.preventDefault();\n              ev.stopPropagation();\n            }\n\n            break;\n        }\n      },\n      [onDismiss],\n    );\n\n    const win = useWindow();\n    useOnEvent(win, 'keydown', onKeyDown as (ev: Event) => void);\n\n    return (\n      <div\n        ref={mergedRootRef}\n        {...getNativeProps(props, divProperties)}\n        className={className}\n        role={role}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        onKeyDown={onKeyDown}\n        style={{ overflowY: needsVerticalScrollBar ? 'scroll' : undefined, outline: 'none', ...style }}\n      >\n        {children}\n      </div>\n    );\n  },\n);\nPopup.displayName = 'Popup';\n", "import { mergeStyles } from '../MergeStyles';\n\n/**\n * Builds a class names object from a given map.\n *\n * @param styles - Map of unprocessed styles.\n * @returns Map of property name to class name.\n */\nexport function buildClassMap<T extends Object>(styles: T): { [key in keyof T]?: string } {\n  let classes: { [key in keyof T]?: string } = {};\n\n  for (let styleName in styles) {\n    if (styles.hasOwnProperty(styleName)) {\n      let className: string;\n\n      Object.defineProperty(classes, styleName, {\n        get: (): string => {\n          if (className === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            className = mergeStyles(styles[styleName] as any).toString();\n          }\n          return className;\n        },\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  return classes;\n}\n", "import { GlobalSettings, warn } from '@fluentui/utilities';\nimport { fontFace, mergeStyles, Stylesheet } from '@fluentui/merge-styles';\nimport type { IRawStyle, IFontFace } from '@fluentui/merge-styles';\n\nexport interface IIconSubset {\n  fontFace?: IFontFace;\n  icons: {\n    [key: string]: string | JSX.Element;\n  };\n\n  style?: IRawStyle;\n  /**\n   * Indicates to the icon renderer that it is safe to merge any props on the original `Icon` element\n   * onto the child content element registered for the icon which are valid for HTML images.\n   */\n  mergeImageProps?: boolean;\n}\n\nexport interface IIconSubsetRecord extends IIconSubset {\n  isRegistered?: boolean;\n  className?: string;\n}\n\nexport interface IIconRecord {\n  code: string | undefined;\n  subset: IIconSubsetRecord;\n}\n\nexport interface IIconOptions {\n  /**\n   * By default, registering the same set of icons will generate a console warning per duplicate icon\n   * registered, because this scenario can create unexpected consequences.\n   *\n   * Some scenarios include:\n   *\n   * Icon set was previously registered using a different base url.\n   * Icon set was previously registered but a different version was provided.\n   * Icons in a previous registered set overlap with a new set.\n   *\n   * To simply ignore previously registered icons, you can specify to disable warnings. This means\n   * that if an icon which was previous registered is registered again, it will be silently ignored.\n   * However, consider whether the problems listed above will cause issues.\n   **/\n  disableWarnings: boolean;\n\n  /**\n   * @deprecated Use `disableWarnings` instead.\n   */\n  warnOnMissingIcons?: boolean;\n}\n\nexport interface IIconRecords {\n  __options: IIconOptions;\n  __remapped: { [key: string]: string };\n  [key: string]: IIconRecord | {};\n}\n\nconst ICON_SETTING_NAME = 'icons';\n\nconst _iconSettings = GlobalSettings.getValue<IIconRecords>(ICON_SETTING_NAME, {\n  __options: {\n    disableWarnings: false,\n    warnOnMissingIcons: true,\n  },\n  __remapped: {},\n});\n\n// Reset icon registration on stylesheet resets.\nconst stylesheet = Stylesheet.getInstance();\n\nif (stylesheet && stylesheet.onReset) {\n  stylesheet.onReset(() => {\n    for (const name in _iconSettings) {\n      if (_iconSettings.hasOwnProperty(name) && !!(_iconSettings[name] as IIconRecord).subset) {\n        (_iconSettings[name] as IIconRecord).subset.className = undefined;\n      }\n    }\n  });\n}\n\n/**\n * Normalizes an icon name for consistent mapping.\n * Current implementation is to convert the icon name to lower case.\n *\n * @param name - Icon name to normalize.\n * @returns {string} Normalized icon name to use for indexing and mapping.\n */\nconst normalizeIconName = (name: string): string => name.toLowerCase();\n\n/**\n * Registers a given subset of icons.\n *\n * @param iconSubset - the icon subset definition.\n */\nexport function registerIcons(iconSubset: IIconSubset, options?: Partial<IIconOptions>): void {\n  let subset = {\n    ...iconSubset,\n    isRegistered: false,\n    className: undefined,\n  };\n  let { icons } = iconSubset;\n\n  // Grab options, optionally mix user provided ones on top.\n  options = options ? { ..._iconSettings.__options, ...options } : _iconSettings.__options;\n\n  for (const iconName in icons) {\n    if (icons.hasOwnProperty(iconName)) {\n      const code = icons[iconName];\n      const normalizedIconName = normalizeIconName(iconName);\n\n      if (_iconSettings[normalizedIconName]) {\n        _warnDuplicateIcon(iconName);\n      } else {\n        _iconSettings[normalizedIconName] = {\n          code,\n          subset,\n        } as IIconRecord;\n      }\n    }\n  }\n}\n\n/**\n * Unregisters icons by name.\n *\n * @param iconNames - List of icons to unregister.\n */\nexport function unregisterIcons(iconNames: string[]): void {\n  const options = _iconSettings.__options;\n\n  for (const iconName of iconNames) {\n    const normalizedIconName = normalizeIconName(iconName);\n    if (_iconSettings[normalizedIconName]) {\n      delete _iconSettings[normalizedIconName];\n    } else {\n      // Warn that we are trying to delete an icon that doesn't exist\n      if (!options.disableWarnings) {\n        warn(`The icon \"${iconName}\" tried to unregister but was not registered.`);\n      }\n    }\n\n    // Delete any aliases for this iconName\n    if (_iconSettings.__remapped[normalizedIconName]) {\n      delete _iconSettings.__remapped[normalizedIconName];\n    }\n\n    // Delete any items that were an alias for this iconName\n    Object.keys(_iconSettings.__remapped).forEach((key: string) => {\n      if (_iconSettings.__remapped[key] === normalizedIconName) {\n        delete _iconSettings.__remapped[key];\n      }\n    });\n  }\n}\n\n/**\n * Remaps one icon name to another.\n */\nexport function registerIconAlias(iconName: string, mappedToName: string): void {\n  _iconSettings.__remapped[normalizeIconName(iconName)] = normalizeIconName(mappedToName);\n}\n\n/**\n * Gets an icon definition. If an icon is requested but the subset has yet to be registered,\n * it will get registered immediately.\n *\n * @public\n * @param name - Name of icon.\n */\nexport function getIcon(name?: string): IIconRecord | undefined {\n  let icon: IIconRecord | undefined = undefined;\n  const options = _iconSettings.__options;\n\n  name = name ? normalizeIconName(name) : '';\n  name = _iconSettings.__remapped[name] || name;\n\n  if (name) {\n    icon = _iconSettings[name!] as IIconRecord;\n\n    if (icon) {\n      let { subset } = icon;\n      if (subset && subset.fontFace) {\n        if (!subset.isRegistered) {\n          fontFace(subset.fontFace);\n          subset.isRegistered = true;\n        }\n\n        if (!subset.className) {\n          subset.className = mergeStyles(subset.style, {\n            fontFamily: subset.fontFace.fontFamily,\n            fontWeight: subset.fontFace.fontWeight || 'normal',\n            fontStyle: subset.fontFace.fontStyle || 'normal',\n          });\n        }\n      }\n    } else {\n      // eslint-disable-next-line deprecation/deprecation\n      if (!options.disableWarnings && options.warnOnMissingIcons) {\n        warn(\n          `The icon \"${name}\" was used but not registered. See https://github.com/microsoft/fluentui/wiki/Using-icons for more information.`,\n        );\n      }\n    }\n  }\n\n  return icon;\n}\n\n/**\n * Sets the icon options.\n *\n * @public\n */\nexport function setIconOptions(options: Partial<IIconOptions>): void {\n  _iconSettings.__options = {\n    ..._iconSettings.__options,\n    ...options,\n  };\n}\n\nlet _missingIcons: string[] = [];\nlet _missingIconsTimer: ReturnType<typeof setTimeout> | undefined = undefined;\n\nfunction _warnDuplicateIcon(iconName: string): void {\n  const options = _iconSettings.__options;\n  const warningDelay = 2000;\n  const maxIconsInMessage = 10;\n\n  if (!options.disableWarnings) {\n    _missingIcons.push(iconName);\n    if (_missingIconsTimer === undefined) {\n      _missingIconsTimer = setTimeout(() => {\n        warn(\n          `Some icons were re-registered. Applications should only call registerIcons for any given ` +\n            `icon once. Redefining what an icon is may have unintended consequences. Duplicates ` +\n            `include: \\n` +\n            _missingIcons.slice(0, maxIconsInMessage).join(', ') +\n            (_missingIcons.length > maxIconsInMessage ? ` (+ ${_missingIcons.length - maxIconsInMessage} more)` : ''),\n        );\n        _missingIconsTimer = undefined;\n        _missingIcons = [];\n      }, warningDelay);\n    }\n  }\n}\n", "import { mergeStyles } from '@fluentui/merge-styles';\nimport { getIcon } from './icons';\nimport type { IStyle } from '@fluentui/merge-styles';\n\nconst defaultIconStyles: IStyle = {\n  display: 'inline-block',\n};\n\n/**\n * Gets an icon classname. You should be able to add this classname to an I tag with no\n * additional classnames, and render the icon.\n *\n * @public\n */\nexport function getIconClassName(name: string): string {\n  let className = '';\n  const icon = getIcon(name);\n\n  if (icon) {\n    className = mergeStyles(icon.subset.className, defaultIconStyles, {\n      selectors: {\n        '::before': {\n          content: `\"${icon.code}\"`,\n        },\n      },\n    });\n  }\n\n  return className;\n}\n", "import type { IEffects, IPalette, ISemanticColors } from '../types/index';\n\n/** Generates all the semantic slot colors based on the theme so far\n * We'll use these as fallbacks for semantic slots that the passed in theme did not define.\n * The caller must still mix in the customized semantic slots at the end.\n */\nexport function makeSemanticColors(\n  p: IPalette,\n  e: IEffects,\n  s: Partial<ISemanticColors> | undefined,\n  isInverted: boolean,\n  depComments: boolean = false,\n): ISemanticColors {\n  const semanticColors: Partial<ISemanticColors> = {\n    primaryButtonBorder: 'transparent',\n\n    errorText: !isInverted ? '#a4262c' : '#F1707B',\n\n    messageText: !isInverted ? '#323130' : '#F3F2F1',\n    messageLink: !isInverted ? '#005A9E' : '#6CB8F6',\n    messageLinkHovered: !isInverted ? '#004578' : '#82C7FF',\n\n    infoIcon: !isInverted ? '#605e5c' : '#C8C6C4',\n    errorIcon: !isInverted ? '#A80000' : '#F1707B',\n    blockingIcon: !isInverted ? '#FDE7E9' : '#442726',\n    warningIcon: !isInverted ? '#797775' : '#C8C6C4',\n    severeWarningIcon: !isInverted ? '#D83B01' : '#FCE100',\n    successIcon: !isInverted ? '#107C10' : '#92C353',\n\n    infoBackground: !isInverted ? '#f3f2f1' : '#323130',\n    errorBackground: !isInverted ? '#FDE7E9' : '#442726',\n    blockingBackground: !isInverted ? '#FDE7E9' : '#442726',\n    warningBackground: !isInverted ? '#FFF4CE' : '#433519',\n    severeWarningBackground: !isInverted ? '#FED9CC' : '#4F2A0F',\n    successBackground: !isInverted ? '#DFF6DD' : '#393D1B',\n\n    // deprecated\n    warningHighlight: !isInverted ? '#ffb900' : '#fff100',\n    successText: !isInverted ? '#107C10' : '#92c353',\n\n    ...s,\n  };\n\n  const fullSemanticColors = getSemanticColors<ISemanticColors>(p, e, semanticColors, isInverted);\n  return _fixDeprecatedSlots(fullSemanticColors, depComments);\n}\n\n/**\n * Map partial platte and effects to partial semantic colors.\n */\nexport function getSemanticColors<TResult = Partial<ISemanticColors>>(\n  p: Partial<IPalette> | undefined,\n  e: Partial<IEffects> | undefined,\n  s: Partial<ISemanticColors> | undefined,\n  isInverted: boolean,\n  depComments: boolean = false,\n): TResult {\n  let result: Partial<ISemanticColors> = {};\n\n  // map palette\n  const {\n    white,\n    black,\n    themePrimary,\n    themeDark,\n    themeDarker,\n    themeDarkAlt,\n    themeLighter,\n    neutralLight,\n    neutralLighter,\n    neutralDark,\n    neutralQuaternary,\n    neutralQuaternaryAlt,\n    neutralPrimary,\n    neutralSecondary,\n    neutralSecondaryAlt,\n    neutralTertiary,\n    neutralTertiaryAlt,\n    neutralLighterAlt,\n    accent,\n  } = p || {};\n\n  if (white) {\n    result.bodyBackground = white;\n    result.bodyFrameBackground = white;\n    result.accentButtonText = white;\n    result.buttonBackground = white;\n    result.primaryButtonText = white;\n    result.primaryButtonTextHovered = white;\n    result.primaryButtonTextPressed = white;\n    result.inputBackground = white;\n    result.inputForegroundChecked = white;\n    result.listBackground = white;\n    result.menuBackground = white;\n    result.cardStandoutBackground = white;\n  }\n  if (black) {\n    result.bodyTextChecked = black;\n    result.buttonTextCheckedHovered = black;\n  }\n  if (themePrimary) {\n    result.link = themePrimary;\n    result.primaryButtonBackground = themePrimary;\n    result.inputBackgroundChecked = themePrimary;\n    result.inputIcon = themePrimary;\n    result.inputFocusBorderAlt = themePrimary;\n    result.menuIcon = themePrimary;\n    result.menuHeader = themePrimary;\n    result.accentButtonBackground = themePrimary;\n  }\n  if (themeDark) {\n    result.primaryButtonBackgroundPressed = themeDark;\n    result.inputBackgroundCheckedHovered = themeDark;\n    result.inputIconHovered = themeDark;\n  }\n  if (themeDarker) {\n    result.linkHovered = themeDarker;\n  }\n  if (themeDarkAlt) {\n    result.primaryButtonBackgroundHovered = themeDarkAlt;\n  }\n  if (themeLighter) {\n    result.inputPlaceholderBackgroundChecked = themeLighter;\n  }\n  if (neutralLight) {\n    result.bodyBackgroundChecked = neutralLight;\n    result.bodyFrameDivider = neutralLight;\n    result.bodyDivider = neutralLight;\n    result.variantBorder = neutralLight;\n    result.buttonBackgroundCheckedHovered = neutralLight;\n    result.buttonBackgroundPressed = neutralLight;\n    result.listItemBackgroundChecked = neutralLight;\n    result.listHeaderBackgroundPressed = neutralLight;\n    result.menuItemBackgroundPressed = neutralLight;\n    // eslint-disable-next-line deprecation/deprecation\n    result.menuItemBackgroundChecked = neutralLight;\n  }\n  if (neutralLighter) {\n    result.bodyBackgroundHovered = neutralLighter;\n    result.buttonBackgroundHovered = neutralLighter;\n    result.buttonBackgroundDisabled = neutralLighter;\n    result.buttonBorderDisabled = neutralLighter;\n    result.primaryButtonBackgroundDisabled = neutralLighter;\n    result.disabledBackground = neutralLighter;\n    result.listItemBackgroundHovered = neutralLighter;\n    result.listHeaderBackgroundHovered = neutralLighter;\n    result.menuItemBackgroundHovered = neutralLighter;\n  }\n  if (neutralQuaternary) {\n    result.primaryButtonTextDisabled = neutralQuaternary;\n    result.disabledSubtext = neutralQuaternary;\n  }\n  if (neutralQuaternaryAlt) {\n    result.listItemBackgroundCheckedHovered = neutralQuaternaryAlt;\n  }\n  if (neutralTertiary) {\n    result.disabledBodyText = neutralTertiary;\n    result.variantBorderHovered = s?.variantBorderHovered || neutralTertiary;\n    result.buttonTextDisabled = neutralTertiary;\n    result.inputIconDisabled = neutralTertiary;\n    result.disabledText = neutralTertiary;\n  }\n  if (neutralPrimary) {\n    result.bodyText = neutralPrimary;\n    result.actionLink = neutralPrimary;\n    result.buttonText = neutralPrimary;\n    result.inputBorderHovered = neutralPrimary;\n    result.inputText = neutralPrimary;\n    result.listText = neutralPrimary;\n    result.menuItemText = neutralPrimary;\n  }\n  if (neutralLighterAlt) {\n    result.bodyStandoutBackground = neutralLighterAlt;\n    result.defaultStateBackground = neutralLighterAlt;\n  }\n  if (neutralDark) {\n    result.actionLinkHovered = neutralDark;\n    result.buttonTextHovered = neutralDark;\n    result.buttonTextChecked = neutralDark;\n    result.buttonTextPressed = neutralDark;\n    result.inputTextHovered = neutralDark;\n    result.menuItemTextHovered = neutralDark;\n  }\n  if (neutralSecondary) {\n    result.bodySubtext = neutralSecondary;\n    result.focusBorder = neutralSecondary;\n    result.inputBorder = neutralSecondary;\n    result.smallInputBorder = neutralSecondary;\n    result.inputPlaceholderText = neutralSecondary;\n  }\n  if (neutralSecondaryAlt) {\n    result.buttonBorder = neutralSecondaryAlt;\n  }\n  if (neutralTertiaryAlt) {\n    result.disabledBodySubtext = neutralTertiaryAlt;\n    result.disabledBorder = neutralTertiaryAlt;\n    result.buttonBackgroundChecked = neutralTertiaryAlt;\n    result.menuDivider = neutralTertiaryAlt;\n  }\n  if (accent) {\n    result.accentButtonBackground = accent;\n  }\n\n  // map effects\n  if (e?.elevation4) {\n    result.cardShadow = e.elevation4;\n  }\n  if (!isInverted && e?.elevation8) {\n    result.cardShadowHovered = e.elevation8;\n  } else if (result.variantBorderHovered) {\n    result.cardShadowHovered = '0 0 1px ' + result.variantBorderHovered;\n  }\n\n  result = {\n    ...result,\n    // mix in customized semantic slots\n    ...s,\n  };\n\n  return result as TResult;\n}\n\nfunction _fixDeprecatedSlots(s: ISemanticColors, depComments: boolean): ISemanticColors {\n  // Add @deprecated tag as comment if enabled\n  let dep = '';\n  if (depComments === true) {\n    dep = ' /* @deprecated */';\n  }\n\n  /* eslint-disable deprecation/deprecation */\n  s.listTextColor = s.listText + dep;\n  s.menuItemBackgroundChecked += dep;\n  s.warningHighlight += dep;\n  s.warningText = s.messageText + dep;\n  s.successText += dep;\n  /* eslint-enable deprecation/deprecation */\n  return s;\n}\n", "import { merge } from '@fluentui/utilities';\nimport { getSemanticColors } from './utilities/makeSemanticColors';\nimport type { IFontStyles, PartialTheme, Theme } from './types/index';\n\n/**\n * Merge a partial/full theme into a full theme and returns a merged full theme.\n */\nexport function mergeThemes(theme: Theme, partialTheme: PartialTheme = {}): Theme {\n  const mergedTheme = merge<Theme | PartialTheme>({}, theme, partialTheme, {\n    semanticColors: getSemanticColors(\n      partialTheme.palette,\n      partialTheme.effects,\n      partialTheme.semanticColors,\n      partialTheme.isInverted === undefined ? theme.isInverted : partialTheme.isInverted,\n    ),\n  }) as Theme;\n\n  if (partialTheme.palette?.themePrimary && !partialTheme.palette?.accent) {\n    mergedTheme.palette.accent = partialTheme.palette.themePrimary;\n  }\n\n  if (partialTheme.defaultFontStyle) {\n    for (const fontStyle of Object.keys(mergedTheme.fonts) as (keyof IFontStyles)[]) {\n      mergedTheme.fonts[fontStyle] = merge(\n        mergedTheme.fonts[fontStyle],\n        partialTheme.defaultFontStyle,\n        partialTheme?.fonts?.[fontStyle],\n      );\n    }\n  }\n\n  return mergedTheme;\n}\n", "export namespace CommunicationColors {\n  export const shade30 = '#004578';\n  export const shade20 = '#005a9e';\n  export const shade10 = '#106ebe';\n  export const primary = '#0078d4';\n  export const tint10 = '#2b88d8';\n  export const tint20 = '#c7e0f4';\n  export const tint30 = '#deecf9';\n  export const tint40 = '#eff6fc';\n}\n\nexport namespace NeutralColors {\n  export const black = '#000000';\n  export const gray220 = '#11100f';\n  export const gray210 = '#161514';\n  export const gray200 = '#1b1a19';\n  export const gray190 = '#201f1e';\n  export const gray180 = '#252423';\n  export const gray170 = '#292827';\n  export const gray160 = '#323130';\n  export const gray150 = '#3b3a39';\n  export const gray140 = '#484644';\n  export const gray130 = '#605e5c';\n  export const gray120 = '#797775';\n  export const gray110 = '#8a8886';\n  export const gray100 = '#979593';\n  export const gray90 = '#a19f9d';\n  export const gray80 = '#b3b0ad';\n  export const gray70 = '#bebbb8';\n  export const gray60 = '#c8c6c4';\n  export const gray50 = '#d2d0ce';\n  export const gray40 = '#e1dfdd';\n  export const gray30 = '#edebe9';\n  export const gray20 = '#f3f2f1';\n  export const gray10 = '#faf9f8';\n  export const white = '#ffffff';\n}\n\nexport namespace SharedColors {\n  export const pinkRed10 = '#750b1c';\n  export const red20 = '#a4262c';\n  export const red10 = '#d13438';\n  export const redOrange20 = '#603d30';\n  export const redOrange10 = '#da3b01';\n  export const orange30 = '#8e562e';\n  export const orange20 = '#ca5010';\n  export const orange10 = '#ffaa44';\n  export const yellow10 = '#fce100';\n  export const orangeYellow20 = '#986f0b';\n  export const orangeYellow10 = '#c19c00';\n  export const yellowGreen10 = '#8cbd18';\n  export const green20 = '#0b6a0b';\n  export const green10 = '#498205';\n  export const greenCyan10 = '#00ad56';\n  export const cyan40 = '#005e50';\n  export const cyan30 = '#005b70';\n  export const cyan20 = '#038387';\n  export const cyan10 = '#00b7c3';\n  export const cyanBlue20 = '#004e8c';\n  export const cyanBlue10 = '#0078d4';\n  export const blue10 = '#4f6bed';\n  export const blueMagenta40 = '#373277';\n  export const blueMagenta30 = '#5c2e91';\n  export const blueMagenta20 = '#8764b8';\n  export const blueMagenta10 = '#8378de';\n  export const magenta20 = '#881798';\n  export const magenta10 = '#c239b3';\n  export const magentaPink20 = '#9b0062';\n  export const magentaPink10 = '#e3008c';\n  export const gray40 = '#393939';\n  export const gray30 = '#7a7574';\n  export const gray20 = '#69797e';\n  export const gray10 = '#a0aeb2';\n}\n", "import type { IPalette } from '../types/index';\n\n// When adding or removing a color, make sure you keep this consistent with IColorClassNames\n// by adding the color variants.\nexport const DefaultPalette: IPalette = {\n  themeDarker: '#004578',\n  themeDark: '#005a9e',\n  themeDarkAlt: '#106ebe',\n  themePrimary: '#0078d4',\n  themeSecondary: '#2b88d8',\n  themeTertiary: '#71afe5',\n  themeLight: '#c7e0f4',\n  themeLighter: '#deecf9',\n  themeLighterAlt: '#eff6fc',\n  black: '#000000',\n  blackTranslucent40: 'rgba(0,0,0,.4)',\n  neutralDark: '#201f1e',\n  neutralPrimary: '#323130',\n  neutralPrimaryAlt: '#3b3a39',\n  neutralSecondary: '#605e5c',\n  neutralSecondaryAlt: '#8a8886',\n  neutralTertiary: '#a19f9d',\n  neutralTertiaryAlt: '#c8c6c4',\n  neutralQuaternary: '#d2d0ce',\n  neutralQuaternaryAlt: '#e1dfdd',\n  neutralLight: '#edebe9',\n  neutralLighter: '#f3f2f1',\n  neutralLighterAlt: '#faf9f8',\n  accent: '#0078d4',\n  white: '#ffffff',\n  whiteTranslucent40: 'rgba(255,255,255,.4)',\n  yellowDark: '#d29200',\n  yellow: '#ffb900',\n  yellowLight: '#fff100',\n  orange: '#d83b01',\n  orangeLight: '#ea4300',\n  orangeLighter: '#ff8c00',\n  redDark: '#a4262c',\n  red: '#e81123',\n  magentaDark: '#5c005c',\n  magenta: '#b4009e',\n  magentaLight: '#e3008c',\n  purpleDark: '#32145a',\n  purple: '#5c2d91',\n  purpleLight: '#b4a0ff',\n  blueDark: '#002050',\n  blueMid: '#00188f',\n  blue: '#0078d4',\n  blueLight: '#00bcf2',\n  tealDark: '#004b50',\n  teal: '#008272',\n  tealLight: '#00b294',\n  greenDark: '#004b1c',\n  green: '#107c10',\n  greenLight: '#bad80a',\n};\n", "export namespace Depths {\n  export const depth0 = '0 0 0 0 transparent';\n  export const depth4 = '0 1.6px 3.6px 0 rgba(0, 0, 0, 0.132), 0 0.3px 0.9px 0 rgba(0, 0, 0, 0.108)';\n  export const depth8 = '0 3.2px 7.2px 0 rgba(0, 0, 0, 0.132), 0 0.6px 1.8px 0 rgba(0, 0, 0, 0.108)';\n  export const depth16 = '0 6.4px 14.4px 0 rgba(0, 0, 0, 0.132), 0 1.2px 3.6px 0 rgba(0, 0, 0, 0.108)';\n  export const depth64 = '0 25.6px 57.6px 0 rgba(0, 0, 0, 0.22), 0 4.8px 14.4px 0 rgba(0, 0, 0, 0.18)';\n}\n", "import { Depths } from './FluentDepths';\nimport type { IEffects } from '../types/index';\n\nexport const DefaultEffects: IEffects = {\n  elevation4: Depths.depth4,\n  elevation8: Depths.depth8,\n  elevation16: Depths.depth16,\n  elevation64: Depths.depth64,\n\n  roundedCorner2: '2px',\n  roundedCorner4: '4px',\n  roundedCorner6: '6px',\n};\n", "import type { ISpacing } from '../types/index';\n\nexport const DefaultSpacing: ISpacing = {\n  s2: '4px',\n  s1: '8px',\n  m: '16px',\n  l1: '20px',\n  l2: '32px',\n};\n", "import { keyframes } from '@fluentui/merge-styles';\n\nconst fadeInAnimationName: string = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 },\n});\n\nconst fadeOutAnimationName: string = keyframes({\n  from: { opacity: 1 },\n  to: { opacity: 0 },\n});\n\nconst scaleDownInAnimationName: string = keyframes({\n  from: { transform: 'scale3d(1.15, 1.15, 1)' },\n  to: { transform: 'scale3d(1, 1, 1)' },\n});\n\nconst scaleDownOutAnimationName: string = keyframes({\n  from: { transform: 'scale3d(1, 1, 1)' },\n  to: { transform: 'scale3d(0.9, 0.9, 1)' },\n});\n\nconst slideLeftOutAnimationName: string = keyframes({\n  from: { transform: 'translate3d(0, 0, 0)' },\n  to: { transform: 'translate3d(-48px, 0, 0)' },\n});\n\nconst slideRightOutAnimationName: string = keyframes({\n  from: { transform: 'translate3d(0, 0, 0)' },\n  to: { transform: 'translate3d(48px, 0, 0)' },\n});\n\nconst slideLeftInAnimationName: string = keyframes({\n  from: { transform: 'translate3d(48px, 0, 0)' },\n  to: { transform: 'translate3d(0, 0, 0)' },\n});\n\nconst slideRightInAnimationName: string = keyframes({\n  from: { transform: 'translate3d(-48px, 0, 0)' },\n  to: { transform: 'translate3d(0, 0, 0)' },\n});\n\nconst slideUpOutAnimationName: string = keyframes({\n  from: { transform: 'translate3d(0, 0, 0)' },\n  to: { transform: 'translate3d(0, -48px, 0)' },\n});\n\nconst slideDownOutAnimationName: string = keyframes({\n  from: { transform: 'translate3d(0, 0, 0)' },\n  to: { transform: 'translate3d(0, 48px, 0)' },\n});\n\nconst slideUpInAnimationName: string = keyframes({\n  from: { transform: 'translate3d(0, 48px, 0)' },\n  to: { transform: 'translate3d(0, 0, 0)' },\n});\n\nconst slideDownInAnimationName: string = keyframes({\n  from: { transform: 'translate3d(0, -48px, 0)' },\n  to: { transform: 'translate3d(0, 0, 0)' },\n});\n\nexport namespace MotionDurations {\n  export const duration1 = '100ms';\n  export const duration2 = '200ms';\n  export const duration3 = '300ms';\n  export const duration4 = '400ms';\n}\n\nexport namespace MotionTimings {\n  export const accelerate = 'cubic-bezier(0.9, 0.1, 1, 0.2)';\n  export const decelerate = 'cubic-bezier(0.1, 0.9, 0.2, 1)';\n  export const linear = 'cubic-bezier(0, 0, 1, 1)';\n  export const standard = 'cubic-bezier(0.8, 0, 0.2, 1)';\n}\n\nfunction _createAnimation(animationName: string, animationDuration: string, animationTimingFunction: string): string {\n  return `${animationName} ${animationDuration} ${animationTimingFunction}`;\n}\n\nexport namespace MotionAnimations {\n  export const fadeIn = _createAnimation(fadeInAnimationName, MotionDurations.duration1, MotionTimings.linear);\n  export const fadeOut = _createAnimation(fadeOutAnimationName, MotionDurations.duration1, MotionTimings.linear);\n  export const scaleDownIn = _createAnimation(\n    scaleDownInAnimationName,\n    MotionDurations.duration3,\n    MotionTimings.decelerate,\n  );\n  export const scaleDownOut = _createAnimation(\n    scaleDownOutAnimationName,\n    MotionDurations.duration3,\n    MotionTimings.decelerate,\n  );\n  export const slideLeftOut = _createAnimation(\n    slideLeftOutAnimationName,\n    MotionDurations.duration1,\n    MotionTimings.accelerate,\n  );\n  export const slideRightOut = _createAnimation(\n    slideRightOutAnimationName,\n    MotionDurations.duration1,\n    MotionTimings.accelerate,\n  );\n  export const slideLeftIn = _createAnimation(\n    slideLeftInAnimationName,\n    MotionDurations.duration1,\n    MotionTimings.decelerate,\n  );\n  export const slideRightIn = _createAnimation(\n    slideRightInAnimationName,\n    MotionDurations.duration1,\n    MotionTimings.decelerate,\n  );\n  export const slideUpOut = _createAnimation(\n    slideUpOutAnimationName,\n    MotionDurations.duration1,\n    MotionTimings.accelerate,\n  );\n  export const slideDownOut = _createAnimation(\n    slideDownOutAnimationName,\n    MotionDurations.duration1,\n    MotionTimings.accelerate,\n  );\n  export const slideUpIn = _createAnimation(\n    slideUpInAnimationName,\n    MotionDurations.duration1,\n    MotionTimings.decelerate,\n  );\n  export const slideDownIn = _createAnimation(\n    slideDownInAnimationName,\n    MotionDurations.duration1,\n    MotionTimings.decelerate,\n  );\n}\n", "import { keyframes } from '@fluentui/merge-styles';\nimport type { IAnimationStyles, IAnimationVariables } from '../types/IAnimationStyles';\nimport type { IRawStyle } from '@fluentui/merge-styles';\n\n/* Register the keyframes */\n\nconst EASING_FUNCTION_1 = 'cubic-bezier(.1,.9,.2,1)';\nconst EASING_FUNCTION_2 = 'cubic-bezier(.1,.25,.75,.9)';\nconst DURATION_1 = '0.167s';\nconst DURATION_2 = '0.267s';\nconst DURATION_3 = '0.367s';\nconst DURATION_4 = '0.467s';\n\nconst FADE_IN: string = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 },\n});\n\nconst FADE_OUT: string = keyframes({\n  from: { opacity: 1 },\n  to: { opacity: 0, visibility: 'hidden' },\n});\n\nconst SLIDE_RIGHT_IN10: string = _createSlideInX(-10);\nconst SLIDE_RIGHT_IN20: string = _createSlideInX(-20);\nconst SLIDE_RIGHT_IN40: string = _createSlideInX(-40);\nconst SLIDE_RIGHT_IN400: string = _createSlideInX(-400);\nconst SLIDE_LEFT_IN10: string = _createSlideInX(10);\nconst SLIDE_LEFT_IN20: string = _createSlideInX(20);\nconst SLIDE_LEFT_IN40: string = _createSlideInX(40);\nconst SLIDE_LEFT_IN400: string = _createSlideInX(400);\nconst SLIDE_UP_IN10: string = _createSlideInY(10);\nconst SLIDE_UP_IN20: string = _createSlideInY(20);\nconst SLIDE_DOWN_IN10: string = _createSlideInY(-10);\nconst SLIDE_DOWN_IN20: string = _createSlideInY(-20);\n\nconst SLIDE_RIGHT_OUT10: string = _createSlideOutX(10);\nconst SLIDE_RIGHT_OUT20: string = _createSlideOutX(20);\nconst SLIDE_RIGHT_OUT40: string = _createSlideOutX(40);\nconst SLIDE_RIGHT_OUT400: string = _createSlideOutX(400);\nconst SLIDE_LEFT_OUT10: string = _createSlideOutX(-10);\nconst SLIDE_LEFT_OUT20: string = _createSlideOutX(-20);\nconst SLIDE_LEFT_OUT40: string = _createSlideOutX(-40);\nconst SLIDE_LEFT_OUT400: string = _createSlideOutX(-400);\nconst SLIDE_UP_OUT10: string = _createSlideOutY(-10);\nconst SLIDE_UP_OUT20: string = _createSlideOutY(-20);\nconst SLIDE_DOWN_OUT10: string = _createSlideOutY(10);\nconst SLIDE_DOWN_OUT20: string = _createSlideOutY(20);\n\nconst SCALE_UP100: string = keyframes({\n  from: { transform: 'scale3d(.98,.98,1)' },\n  to: { transform: 'scale3d(1,1,1)' },\n});\n\nconst SCALE_DOWN98: string = keyframes({\n  from: { transform: 'scale3d(1,1,1)' },\n  to: { transform: 'scale3d(.98,.98,1)' },\n});\n\nconst SCALE_DOWN100: string = keyframes({\n  from: { transform: 'scale3d(1.03,1.03,1)' },\n  to: { transform: 'scale3d(1,1,1)' },\n});\n\nconst SCALE_UP103: string = keyframes({\n  from: { transform: 'scale3d(1,1,1)' },\n  to: { transform: 'scale3d(1.03,1.03,1)' },\n});\n\nconst ROTATE90: string = keyframes({\n  from: { transform: 'rotateZ(0deg)' },\n  to: { transform: 'rotateZ(90deg)' },\n});\n\nconst ROTATE_N90: string = keyframes({\n  from: { transform: 'rotateZ(0deg)' },\n  to: { transform: 'rotateZ(-90deg)' },\n});\n\n/**\n * Exporting raw duraction values and easing functions to be used in custom animations\n */\nexport const AnimationVariables: IAnimationVariables = {\n  easeFunction1: EASING_FUNCTION_1,\n  easeFunction2: EASING_FUNCTION_2,\n  durationValue1: DURATION_1,\n  durationValue2: DURATION_2,\n  durationValue3: DURATION_3,\n  durationValue4: DURATION_4,\n};\n\n/**\n * All Fabric standard animations, exposed as json objects referencing predefined\n * keyframes. These objects can be mixed in with other class definitions.\n */\nexport const AnimationStyles: IAnimationStyles = {\n  slideRightIn10: _createAnimation(`${FADE_IN},${SLIDE_RIGHT_IN10}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightIn20: _createAnimation(`${FADE_IN},${SLIDE_RIGHT_IN20}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightIn40: _createAnimation(`${FADE_IN},${SLIDE_RIGHT_IN40}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightIn400: _createAnimation(`${FADE_IN},${SLIDE_RIGHT_IN400}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftIn10: _createAnimation(`${FADE_IN},${SLIDE_LEFT_IN10}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftIn20: _createAnimation(`${FADE_IN},${SLIDE_LEFT_IN20}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftIn40: _createAnimation(`${FADE_IN},${SLIDE_LEFT_IN40}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftIn400: _createAnimation(`${FADE_IN},${SLIDE_LEFT_IN400}`, DURATION_3, EASING_FUNCTION_1),\n  slideUpIn10: _createAnimation(`${FADE_IN},${SLIDE_UP_IN10}`, DURATION_3, EASING_FUNCTION_1),\n  slideUpIn20: _createAnimation(`${FADE_IN},${SLIDE_UP_IN20}`, DURATION_3, EASING_FUNCTION_1),\n  slideDownIn10: _createAnimation(`${FADE_IN},${SLIDE_DOWN_IN10}`, DURATION_3, EASING_FUNCTION_1),\n  slideDownIn20: _createAnimation(`${FADE_IN},${SLIDE_DOWN_IN20}`, DURATION_3, EASING_FUNCTION_1),\n\n  slideRightOut10: _createAnimation(`${FADE_OUT},${SLIDE_RIGHT_OUT10}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightOut20: _createAnimation(`${FADE_OUT},${SLIDE_RIGHT_OUT20}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightOut40: _createAnimation(`${FADE_OUT},${SLIDE_RIGHT_OUT40}`, DURATION_3, EASING_FUNCTION_1),\n  slideRightOut400: _createAnimation(`${FADE_OUT},${SLIDE_RIGHT_OUT400}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftOut10: _createAnimation(`${FADE_OUT},${SLIDE_LEFT_OUT10}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftOut20: _createAnimation(`${FADE_OUT},${SLIDE_LEFT_OUT20}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftOut40: _createAnimation(`${FADE_OUT},${SLIDE_LEFT_OUT40}`, DURATION_3, EASING_FUNCTION_1),\n  slideLeftOut400: _createAnimation(`${FADE_OUT},${SLIDE_LEFT_OUT400}`, DURATION_3, EASING_FUNCTION_1),\n  slideUpOut10: _createAnimation(`${FADE_OUT},${SLIDE_UP_OUT10}`, DURATION_3, EASING_FUNCTION_1),\n  slideUpOut20: _createAnimation(`${FADE_OUT},${SLIDE_UP_OUT20}`, DURATION_3, EASING_FUNCTION_1),\n  slideDownOut10: _createAnimation(`${FADE_OUT},${SLIDE_DOWN_OUT10}`, DURATION_3, EASING_FUNCTION_1),\n  slideDownOut20: _createAnimation(`${FADE_OUT},${SLIDE_DOWN_OUT20}`, DURATION_3, EASING_FUNCTION_1),\n\n  scaleUpIn100: _createAnimation(`${FADE_IN},${SCALE_UP100}`, DURATION_3, EASING_FUNCTION_1),\n  scaleDownIn100: _createAnimation(`${FADE_IN},${SCALE_DOWN100}`, DURATION_3, EASING_FUNCTION_1),\n  scaleUpOut103: _createAnimation(`${FADE_OUT},${SCALE_UP103}`, DURATION_1, EASING_FUNCTION_2),\n  scaleDownOut98: _createAnimation(`${FADE_OUT},${SCALE_DOWN98}`, DURATION_1, EASING_FUNCTION_2),\n\n  fadeIn100: _createAnimation(FADE_IN, DURATION_1, EASING_FUNCTION_2),\n  fadeIn200: _createAnimation(FADE_IN, DURATION_2, EASING_FUNCTION_2),\n  fadeIn400: _createAnimation(FADE_IN, DURATION_3, EASING_FUNCTION_2),\n  fadeIn500: _createAnimation(FADE_IN, DURATION_4, EASING_FUNCTION_2),\n\n  fadeOut100: _createAnimation(FADE_OUT, DURATION_1, EASING_FUNCTION_2),\n  fadeOut200: _createAnimation(FADE_OUT, DURATION_2, EASING_FUNCTION_2),\n  fadeOut400: _createAnimation(FADE_OUT, DURATION_3, EASING_FUNCTION_2),\n  fadeOut500: _createAnimation(FADE_OUT, DURATION_4, EASING_FUNCTION_2),\n\n  rotate90deg: _createAnimation(ROTATE90, '0.1s', EASING_FUNCTION_2),\n  rotateN90deg: _createAnimation(ROTATE_N90, '0.1s', EASING_FUNCTION_2),\n\n  // expandCollapse 100/200/400, delay 100/200\n};\n\nfunction _createAnimation(\n  animationName: string,\n  animationDuration: string,\n  animationTimingFunction: string,\n): IRawStyle {\n  return {\n    animationName,\n    animationDuration,\n    animationTimingFunction,\n    animationFillMode: 'both',\n  };\n}\n\nfunction _createSlideInX(fromX: number): string {\n  return keyframes({\n    from: { transform: `translate3d(${fromX}px,0,0)`, pointerEvents: 'none' },\n    to: { transform: `translate3d(0,0,0)`, pointerEvents: 'auto' },\n  });\n}\n\nfunction _createSlideInY(fromY: number): string {\n  return keyframes({\n    from: { transform: `translate3d(0,${fromY}px,0)`, pointerEvents: 'none' },\n    to: { transform: `translate3d(0,0,0)`, pointerEvents: 'auto' },\n  });\n}\n\nfunction _createSlideOutX(toX: number): string {\n  return keyframes({\n    from: { transform: `translate3d(0,0,0)` },\n    to: { transform: `translate3d(${toX}px,0,0)` },\n  });\n}\n\nfunction _createSlideOutY(toY: number): string {\n  return keyframes({\n    from: { transform: `translate3d(0,0,0)` },\n    to: { transform: `translate3d(0,${toY}px,0)` },\n  });\n}\n", "import type { IFontWeight } from '@fluentui/merge-styles';\n\n// Font face names to be registered.\nexport namespace LocalizedFontNames {\n  export const Arabic = 'Segoe UI Web (Arabic)';\n  export const Cyrillic = 'Segoe UI Web (Cyrillic)';\n  export const EastEuropean = 'Segoe UI Web (East European)';\n  export const Greek = 'Segoe UI Web (Greek)';\n  export const Hebrew = 'Segoe UI Web (Hebrew)';\n  export const Thai = 'Leelawadee UI Web';\n  export const Vietnamese = 'Segoe UI Web (Vietnamese)';\n  export const WestEuropean = 'Segoe UI Web (West European)';\n  export const Selawik = 'Selawik Web';\n  export const Armenian = 'Segoe UI Web (Armenian)';\n  export const Georgian = 'Segoe UI Web (Georgian)';\n}\n\n// Font families with fallbacks, for the general regions.\nexport namespace LocalizedFontFamilies {\n  export const Arabic = `'${LocalizedFontNames.Arabic}'`;\n  export const ChineseSimplified = `'Microsoft Yahei UI', Verdana, Simsun`;\n  export const ChineseTraditional = `'Microsoft Jhenghei UI', Pmingliu`;\n  export const Cyrillic = `'${LocalizedFontNames.Cyrillic}'`;\n  export const EastEuropean = `'${LocalizedFontNames.EastEuropean}'`;\n  export const Greek = `'${LocalizedFontNames.Greek}'`;\n  export const Hebrew = `'${LocalizedFontNames.Hebrew}'`;\n  export const Hindi = `'Nirmala UI'`;\n  export const Japanese = `'Yu Gothic UI', 'Meiryo UI', Meiryo, 'MS Pgothic', Osaka`;\n  export const Korean = `'Malgun Gothic', Gulim`;\n  export const Selawik = `'${LocalizedFontNames.Selawik}'`;\n  export const Thai = `'Leelawadee UI Web', 'Kmer UI'`;\n  export const Vietnamese = `'${LocalizedFontNames.Vietnamese}'`;\n  export const WestEuropean = `'${LocalizedFontNames.WestEuropean}'`;\n  export const Armenian = `'${LocalizedFontNames.Armenian}'`;\n  export const Georgian = `'${LocalizedFontNames.Georgian}'`;\n}\n\n// Standard font sizes.\nexport namespace FontSizes {\n  export const size10 = '10px';\n  export const size12 = '12px';\n  export const size14 = '14px';\n  export const size16 = '16px';\n  export const size18 = '18px';\n  export const size20 = '20px';\n  export const size24 = '24px';\n  export const size28 = '28px';\n  export const size32 = '32px';\n  export const size42 = '42px';\n  export const size68 = '68px';\n\n  export const mini: string = '10px';\n  export const xSmall: string = '10px';\n  export const small: string = '12px';\n  export const smallPlus: string = '12px';\n  export const medium: string = '14px';\n  export const mediumPlus: string = '16px';\n  export const icon: string = '16px';\n  export const large: string = '18px';\n  export const xLarge: string = '20px';\n  export const xLargePlus: string = '24px';\n  export const xxLarge: string = '28px';\n  export const xxLargePlus: string = '32px';\n  export const superLarge: string = '42px';\n  export const mega: string = '68px';\n}\n\n// Standard font weights.\nexport namespace FontWeights {\n  export const light: IFontWeight = 100;\n  export const semilight: IFontWeight = 300;\n  export const regular: IFontWeight = 400;\n  export const semibold: IFontWeight = 600;\n  export const bold: IFontWeight = 700;\n}\n\n// Standard Icon Sizes.\nexport namespace IconFontSizes {\n  export const xSmall: string = '10px';\n  export const small: string = '12px';\n  export const medium: string = '16px';\n  export const large: string = '20px';\n}\n", "import { FontSizes, FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport type { IFontWeight, IRawStyle } from '@fluentui/merge-styles';\nimport type { IFontStyles } from '../types/IFontStyles';\n\n// Fallback fonts, if specified system or web fonts are unavailable.\nconst FontFamilyFallbacks = `'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif`;\n\n// By default, we favor system fonts for the default.\n// All localized fonts use a web font and never use the system font.\nconst defaultFontFamily = `'Segoe UI', '${LocalizedFontNames.WestEuropean}'`;\n\n// Mapping of language prefix to to font family.\nconst LanguageToFontMap = {\n  ar: LocalizedFontFamilies.Arabic,\n  bg: LocalizedFontFamilies.Cyrillic,\n  cs: LocalizedFontFamilies.EastEuropean,\n  el: LocalizedFontFamilies.Greek,\n  et: LocalizedFontFamilies.EastEuropean,\n  he: LocalizedFontFamilies.Hebrew,\n  hi: LocalizedFontFamilies.Hindi,\n  hr: LocalizedFontFamilies.EastEuropean,\n  hu: LocalizedFontFamilies.EastEuropean,\n  ja: LocalizedFontFamilies.Japanese,\n  kk: LocalizedFontFamilies.EastEuropean,\n  ko: LocalizedFontFamilies.Korean,\n  lt: LocalizedFontFamilies.EastEuropean,\n  lv: LocalizedFontFamilies.EastEuropean,\n  pl: LocalizedFontFamilies.EastEuropean,\n  ru: LocalizedFontFamilies.Cyrillic,\n  sk: LocalizedFontFamilies.EastEuropean,\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\n  th: LocalizedFontFamilies.Thai,\n  tr: LocalizedFontFamilies.EastEuropean,\n  uk: LocalizedFontFamilies.Cyrillic,\n  vi: LocalizedFontFamilies.Vietnamese,\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional,\n  hy: LocalizedFontFamilies.Armenian,\n  ka: LocalizedFontFamilies.Georgian,\n};\n\nfunction _fontFamilyWithFallbacks(fontFamily: string): string {\n  return `${fontFamily}, ${FontFamilyFallbacks}`;\n}\n\n/**\n * If there is a localized font for this language, return that.\n * Returns undefined if there is no localized font for that language.\n */\nfunction _getLocalizedFontFamily(language: string | null): string {\n  for (const lang in LanguageToFontMap) {\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return (LanguageToFontMap as any)[lang];\n    }\n  }\n\n  return defaultFontFamily;\n}\n\nfunction _createFont(size: string, weight: IFontWeight, fontFamily: string): IRawStyle {\n  return {\n    fontFamily: fontFamily,\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    fontSize: size,\n    fontWeight: weight,\n  };\n}\n\nexport function createFontStyles(localeCode: string | null): IFontStyles {\n  const localizedFont = _getLocalizedFontFamily(localeCode);\n  const fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\n\n  const fontStyles = {\n    tiny: _createFont(FontSizes.mini, FontWeights.regular, fontFamilyWithFallback),\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\n    large: _createFont(FontSizes.large, FontWeights.regular, fontFamilyWithFallback),\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xLargePlus: _createFont(FontSizes.xLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xxLargePlus: _createFont(FontSizes.xxLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.semibold, fontFamilyWithFallback),\n    mega: _createFont(FontSizes.mega, FontWeights.semibold, fontFamilyWithFallback),\n  };\n\n  return fontStyles;\n}\n", "import { fontFace } from '@fluentui/merge-styles';\nimport { FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport { createFontStyles } from './createFontStyles';\nimport { getLanguage, getWindow } from '@fluentui/utilities';\nimport type { IFontWeight } from '@fluentui/merge-styles';\nimport type { IFontStyles } from '../types/IFontStyles';\nimport type { IFabricConfig } from '../types/IFabricConfig';\n\n// Default urls.\nconst DefaultBaseUrl = 'https://res-1.cdn.office.net/files/fabric-cdn-prod_20221209.001/assets';\n\n// Standard font styling.\nexport const DefaultFontStyles: IFontStyles = createFontStyles(getLanguage());\n\nfunction _registerFontFace(fontFamily: string, url: string, fontWeight?: IFontWeight, localFontName?: string): void {\n  fontFamily = `'${fontFamily}'`;\n\n  const localFontSrc = localFontName !== undefined ? `local('${localFontName}'),` : '';\n\n  fontFace({\n    fontFamily,\n    src: localFontSrc + `url('${url}.woff2') format('woff2'),` + `url('${url}.woff') format('woff')`,\n    fontWeight,\n    fontStyle: 'normal',\n    fontDisplay: 'swap',\n  });\n}\n\nfunction _registerFontFaceSet(\n  baseUrl: string,\n  fontFamily: string,\n  cdnFolder: string,\n  cdnFontName: string = 'segoeui',\n  localFontName?: string,\n): void {\n  const urlBase = `${baseUrl}/${cdnFolder}/${cdnFontName}`;\n\n  _registerFontFace(fontFamily, urlBase + '-light', FontWeights.light, localFontName && localFontName + ' Light');\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semilight',\n    FontWeights.semilight,\n    localFontName && localFontName + ' SemiLight',\n  );\n  _registerFontFace(fontFamily, urlBase + '-regular', FontWeights.regular, localFontName);\n  _registerFontFace(\n    fontFamily,\n    urlBase + '-semibold',\n    FontWeights.semibold,\n    localFontName && localFontName + ' SemiBold',\n  );\n  _registerFontFace(fontFamily, urlBase + '-bold', FontWeights.bold, localFontName && localFontName + ' Bold');\n}\n\nexport function registerDefaultFontFaces(baseUrl: string): void {\n  if (baseUrl) {\n    const fontUrl = `${baseUrl}/fonts`;\n\n    // Produce @font-face definitions for all supported web fonts.\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Thai, 'leelawadeeui-thai', 'leelawadeeui');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Arabic, 'segoeui-arabic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Cyrillic, 'segoeui-cyrillic');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.EastEuropean, 'segoeui-easteuropean');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Greek, 'segoeui-greek');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Hebrew, 'segoeui-hebrew');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Vietnamese, 'segoeui-vietnamese');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.WestEuropean, 'segoeui-westeuropean', 'segoeui', 'Segoe UI');\n    _registerFontFaceSet(fontUrl, LocalizedFontFamilies.Selawik, 'selawik', 'selawik');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Armenian, 'segoeui-armenian');\n    _registerFontFaceSet(fontUrl, LocalizedFontNames.Georgian, 'segoeui-georgian');\n\n    // Leelawadee UI (Thai) does not have a 'light' weight, so we override\n    // the font-face generated above to use the 'semilight' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-semilight`, FontWeights.light);\n\n    // Leelawadee UI (Thai) does not have a 'semibold' weight, so we override\n    // the font-face generated above to use the 'bold' weight instead.\n    _registerFontFace('Leelawadee UI Web', `${fontUrl}/leelawadeeui-thai/leelawadeeui-bold`, FontWeights.semibold);\n  }\n}\n\n/**\n * Reads the fontBaseUrl from window.FabricConfig.fontBaseUrl or falls back to a default.\n */\nfunction _getFontBaseUrl(): string {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const fabricConfig: IFabricConfig | undefined = (getWindow() as any)?.FabricConfig;\n\n  return fabricConfig?.fontBaseUrl ?? DefaultBaseUrl;\n}\n\n/**\n * Register the font faces.\n */\nregisterDefaultFontFaces(_getFontBaseUrl());\n", "import { DefaultPalette } from './colors/index';\nimport { DefaultEffects } from './effects/index';\nimport { DefaultFontStyles } from './fonts/index';\nimport { mergeThemes } from './mergeThemes';\nimport { DefaultSpacing } from './spacing/index';\nimport { makeSemanticColors } from './utilities/makeSemanticColors';\nimport type { PartialTheme, Theme } from './types/index';\n\n/**\n * Creates a custom theme definition.\n * @param theme - Partial theme object.\n * @param depComments - Whether to include deprecated tags as comments for deprecated slots.\n */\nexport function createTheme(theme: PartialTheme = {}, depComments: boolean = false): Theme {\n  const isInverted = !!theme.isInverted;\n  const baseTheme: Theme = {\n    palette: DefaultPalette,\n    effects: DefaultEffects,\n    fonts: DefaultFontStyles,\n    spacing: DefaultSpacing,\n    isInverted,\n    disableGlobalClassNames: false,\n    semanticColors: makeSemanticColors(DefaultPalette, DefaultEffects, undefined, isInverted, depComments),\n    rtl: undefined,\n  };\n\n  return mergeThemes(baseTheme, theme);\n}\n", "import { createTheme } from './createTheme';\nimport type { ITheme } from './types/ITheme';\n\nexport const FluentTheme: ITheme = createTheme({});\n", "// Do not modify this file; it is generated as part of publish.\n// The checked in version is a placeholder only and will not be updated.\nimport { setVersion } from '@fluentui/set-version';\nsetVersion('@fluentui/theme', '2.6.32');", "import type { IRawStyle } from '../MergeStyles';\n\nexport const HighContrastSelector = '@media screen and (-ms-high-contrast: active), screen and (forced-colors: active)';\nexport const HighContrastSelectorWhite =\n  // eslint-disable-next-line @fluentui/max-len\n  '@media screen and (-ms-high-contrast: black-on-white), screen and (forced-colors: active) and (prefers-color-scheme: light)';\nexport const HighContrastSelectorBlack =\n  // eslint-disable-next-line @fluentui/max-len\n  '@media screen and (-ms-high-contrast: white-on-black), screen and (forced-colors: active) and (prefers-color-scheme: dark)';\n/**\n * @deprecated Use `HighContrastSelector`\n */\nexport const EdgeChromiumHighContrastSelector =\n  '@media screen and (-ms-high-contrast: active), screen and (forced-colors: active)';\n\nexport const ScreenWidthMinSmall = 320;\nexport const ScreenWidthMinMedium = 480;\nexport const ScreenWidthMinLarge = 640;\nexport const ScreenWidthMinXLarge = 1024;\nexport const ScreenWidthMinXXLarge = 1366;\nexport const ScreenWidthMinXXXLarge = 1920;\nexport const ScreenWidthMaxSmall = ScreenWidthMinMedium - 1;\nexport const ScreenWidthMaxMedium = ScreenWidthMinLarge - 1;\nexport const ScreenWidthMaxLarge = ScreenWidthMinXLarge - 1;\nexport const ScreenWidthMaxXLarge = ScreenWidthMinXXLarge - 1;\nexport const ScreenWidthMaxXXLarge = ScreenWidthMinXXXLarge - 1;\n\nexport const ScreenWidthMinUhfMobile = 768;\n\nexport function getScreenSelector(min: number | undefined, max: number | undefined): string {\n  const minSelector = typeof min === 'number' ? ` and (min-width: ${min}px)` : '';\n  const maxSelector = typeof max === 'number' ? ` and (max-width: ${max}px)` : '';\n  return `@media only screen${minSelector}${maxSelector}`;\n}\n\n/**\n * The style which turns off high contrast adjustment in browsers.\n */\nexport function getHighContrastNoAdjustStyle(): IRawStyle {\n  return {\n    forcedColorAdjust: 'none',\n    MsHighContrastAdjust: 'none',\n  };\n}\n\n/**\n * The style which turns off high contrast adjustment in (only) Edge Chromium browser.\n *  @deprecated Use `getHighContrastNoAdjustStyle`\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getEdgeChromiumNoHighContrastAdjustSelector(): { [EdgeChromiumHighContrastSelector]: IRawStyle } {\n  return {\n    // eslint-disable-next-line deprecation/deprecation\n    [EdgeChromiumHighContrastSelector]: {\n      forcedColorAdjust: 'none',\n      MsHighContrastAdjust: 'none',\n    },\n  };\n}\n", "export namespace ZIndexes {\n  export const Nav: number = 1;\n  /**\n   * @deprecated Do not use\n   */\n  export const ScrollablePane: number = 1;\n  export const FocusStyle: number = 1;\n  export const Coachmark: number = 1000;\n  export const Layer: number = 1000000;\n  export const KeytipLayer: number = 1000001;\n}\n", "import { HighContrastSelector } from './CommonStyles';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nimport { ZIndexes } from './zIndexes';\nimport type { IRawStyle } from '@fluentui/merge-styles';\nimport type { IGetFocusStylesOptions, ITheme } from '../interfaces/index';\n\n/**\n * Generates a focus style which can be used to define an :after focus border.\n *\n * @param theme - The theme object to use.\n * @param options - Options to customize the focus border.\n * @returns The style object.\n */\nexport function getFocusStyle(theme: ITheme, options?: IGetFocusStylesOptions): IRawStyle;\n/**\n * Generates a focus style which can be used to define an :after focus border.\n *\n * @param theme - The theme object to use.\n * @param inset - The number of pixels to inset the border.\n * @param position - The positioning applied to the container. Must\n * be 'relative' or 'absolute' so that the focus border can live around it.\n * @param highContrastStyle - Style for high contrast mode.\n * @param borderColor - Color of the border.\n * @param outlineColor - Color of the outline.\n * @param isFocusedOnly - If the styles should apply on focus or not.\n * @param borderRadius - If the style should include a rounded border.\n * @returns The style object.\n * @deprecated Use the object parameter version instead.\n */\nexport function getFocusStyle(\n  theme: ITheme,\n  inset?: number,\n  position?: 'relative' | 'absolute',\n  highContrastStyle?: IRawStyle | undefined,\n  borderColor?: string,\n  outlineColor?: string,\n  isFocusedOnly?: boolean,\n  borderRadius?: string | number | undefined,\n): IRawStyle;\nexport function getFocusStyle(\n  theme: ITheme,\n  insetOrOptions?: number | IGetFocusStylesOptions,\n  position?: 'relative' | 'absolute',\n  highContrastStyle?: IRawStyle,\n  borderColor?: string,\n  outlineColor?: string,\n  isFocusedOnly?: boolean,\n  borderRadius?: string | number | undefined,\n): IRawStyle {\n  if (typeof insetOrOptions === 'number' || !insetOrOptions) {\n    return _getFocusStyleInternal(theme, {\n      inset: insetOrOptions,\n      position,\n      highContrastStyle,\n      borderColor,\n      outlineColor,\n      isFocusedOnly,\n      borderRadius,\n    });\n  } else {\n    return _getFocusStyleInternal(theme, insetOrOptions);\n  }\n}\n\nfunction _getFocusStyleInternal(theme: ITheme, options: IGetFocusStylesOptions = {}): IRawStyle {\n  const {\n    borderRadius,\n    inset = 0,\n    width = 1,\n    position = 'relative',\n    highContrastStyle,\n    borderColor = theme.palette.white,\n    outlineColor = theme.palette.neutralSecondary,\n    isFocusedOnly = true,\n    pointerEvents,\n  } = options;\n\n  return {\n    // Clear browser-specific focus styles and use 'transparent' as placeholder for focus style.\n    outline: 'transparent',\n    // Requirement because pseudo-element is absolutely positioned.\n    position,\n\n    selectors: {\n      // Clear the focus border in Firefox.\n      // Reference: http://stackoverflow.com/a/199319/1436671\n      '::-moz-focus-inner': {\n        border: '0',\n      },\n\n      // When the element that uses this mixin is in a :focus state, add a pseudo-element to\n      // create a border.\n      [`.${IsFocusVisibleClassName} &${isFocusedOnly ? ':focus' : ''}:after`]: {\n        content: '\"\"',\n        position: 'absolute',\n        pointerEvents,\n        left: inset + 1,\n        top: inset + 1,\n        bottom: inset + 1,\n        right: inset + 1,\n        border: `${width}px solid ${borderColor}`,\n        outline: `${width}px solid ${outlineColor}`,\n        zIndex: ZIndexes.FocusStyle,\n        borderRadius: borderRadius,\n        selectors: {\n          [HighContrastSelector]: highContrastStyle,\n        },\n      },\n    },\n  };\n}\n\n/**\n * Generates style to clear browser specific focus styles.\n */\nexport function focusClear(): IRawStyle {\n  return {\n    selectors: {\n      '&::-moz-focus-inner': {\n        // Clear the focus border in Firefox. Reference: http://stackoverflow.com/a/199319/1436671\n        border: 0,\n      },\n      '&': {\n        // Clear browser specific focus styles and use transparent as placeholder for focus style\n        outline: 'transparent',\n      },\n    },\n  };\n}\n\n/**\n * Generates a style which can be used to set a border on focus.\n *\n * @param theme - The theme object to use.\n * @param inset - The number of pixels to inset the border (default 0)\n * @param width - The border width in pixels (default 1)\n * @param color - Color of the outline (default `theme.palette.neutralSecondary`)\n * @returns The style object.\n */\nexport function getFocusOutlineStyle(theme: ITheme, inset: number = 0, width: number = 1, color?: string): IRawStyle {\n  return {\n    selectors: {\n      [`:global(${IsFocusVisibleClassName}) &:focus`]: {\n        outline: `${width} solid ${color || theme.palette.neutralSecondary}`,\n        outlineOffset: `${-inset}px`,\n      },\n    },\n  };\n}\n\n/**\n * Generates text input border styles on focus.\n *\n * @param borderColor - Color of the border.\n * @param borderRadius - Radius of the border.\n * @param borderType - Type of the border.\n * @param borderPosition - Position of the border relative to the input element (default to -1\n * as it's the most common border width of the input element)\n * @returns The style object.\n */\nexport const getInputFocusStyle = (\n  borderColor: string,\n  borderRadius: string | number,\n  borderType: 'border' | 'borderBottom' = 'border',\n  borderPosition: number = -1,\n): IRawStyle => {\n  const isBorderBottom = borderType === 'borderBottom';\n\n  return {\n    borderColor,\n    selectors: {\n      ':after': {\n        pointerEvents: 'none',\n        content: \"''\",\n        position: 'absolute',\n        left: isBorderBottom ? 0 : borderPosition,\n        top: borderPosition,\n        bottom: borderPosition,\n        right: isBorderBottom ? 0 : borderPosition,\n        [borderType]: `2px solid ${borderColor}`,\n        borderRadius,\n        width: borderType === 'borderBottom' ? '100%' : undefined,\n        selectors: {\n          [HighContrastSelector]: {\n            [borderType === 'border' ? 'borderColor' : 'borderBottomColor']: 'Highlight',\n          },\n        },\n      },\n    },\n  };\n};\n", "import type { IRawStyle } from '@fluentui/merge-styles';\n\nexport const hiddenContentStyle: IRawStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  padding: 0,\n  border: 0,\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n};\n", "import { keyframes } from '@fluentui/merge-styles';\nimport type { IRawStyle } from '@fluentui/merge-styles';\n\nconst DEFAULT_DURATION = '14s';\nconst DEFAULT_DELAY = '2s';\nconst DEFAULT_ITERATION_COUNT = '1';\n\nfunction _continuousPulseStepOne(beaconColorOne: string, innerDimension: string): IRawStyle {\n  return {\n    borderColor: beaconColorOne,\n    borderWidth: '0px',\n    width: innerDimension,\n    height: innerDimension,\n  };\n}\n\nfunction _continuousPulseStepTwo(borderWidth: string): IRawStyle {\n  return {\n    opacity: 1,\n    borderWidth: borderWidth,\n  };\n}\n\nfunction _continuousPulseStepThree(): IRawStyle {\n  return {\n    opacity: 1,\n  };\n}\n\nfunction _continuousPulseStepFour(beaconColorTwo: string, outerDimension: string): IRawStyle {\n  return {\n    borderWidth: '0',\n    width: outerDimension,\n    height: outerDimension,\n    opacity: 0,\n    borderColor: beaconColorTwo,\n  };\n}\n\nfunction _continuousPulseStepFive(beaconColorOne: string, innerDimension: string): IRawStyle {\n  return {\n    ..._continuousPulseStepOne(beaconColorOne, innerDimension),\n    ...{\n      opacity: 0,\n    },\n  };\n}\n\nfunction _continuousPulseAnimationDouble(\n  beaconColorOne: string,\n  beaconColorTwo: string,\n  innerDimension: string,\n  outerDimension: string,\n  borderWidth: string,\n): string {\n  return keyframes({\n    '0%': _continuousPulseStepOne(beaconColorOne, innerDimension),\n    '1.42%': _continuousPulseStepTwo(borderWidth),\n    '3.57%': _continuousPulseStepThree(),\n    '7.14%': _continuousPulseStepFour(beaconColorTwo, outerDimension),\n    '8%': _continuousPulseStepFive(beaconColorOne, innerDimension),\n    '29.99%': _continuousPulseStepFive(beaconColorOne, innerDimension),\n    '30%': _continuousPulseStepOne(beaconColorOne, innerDimension),\n    '31.42%': _continuousPulseStepTwo(borderWidth),\n    '33.57%': _continuousPulseStepThree(),\n    '37.14%': _continuousPulseStepFour(beaconColorTwo, outerDimension),\n    '38%': _continuousPulseStepFive(beaconColorOne, innerDimension),\n    '79.42%': _continuousPulseStepFive(beaconColorOne, innerDimension),\n    '79.43': _continuousPulseStepOne(beaconColorOne, innerDimension),\n    '81.85': _continuousPulseStepTwo(borderWidth),\n    '83.42': _continuousPulseStepThree(),\n    '87%': _continuousPulseStepFour(beaconColorTwo, outerDimension),\n    '100%': {},\n  });\n}\n\nfunction _continuousPulseAnimationSingle(\n  beaconColorOne: string,\n  beaconColorTwo: string,\n  innerDimension: string,\n  outerDimension: string,\n  borderWidth: string,\n): string {\n  return keyframes({\n    '0%': _continuousPulseStepOne(beaconColorOne, innerDimension),\n    '14.2%': _continuousPulseStepTwo(borderWidth),\n    '35.7%': _continuousPulseStepThree(),\n    '71.4%': _continuousPulseStepFour(beaconColorTwo, outerDimension),\n    '100%': {},\n  });\n}\n\nfunction _createDefaultAnimation(animationName: string, delayLength?: string): IRawStyle {\n  return {\n    animationName,\n    animationIterationCount: DEFAULT_ITERATION_COUNT,\n    animationDuration: DEFAULT_DURATION,\n    animationDelay: delayLength || DEFAULT_DELAY,\n  };\n}\n\nexport const PulsingBeaconAnimationStyles = {\n  continuousPulseAnimationDouble: _continuousPulseAnimationDouble,\n  continuousPulseAnimationSingle: _continuousPulseAnimationSingle,\n  createDefaultAnimation: _createDefaultAnimation,\n};\n", "import { Stylesheet } from '@fluentui/merge-styles';\nimport { memoizeFunction } from '@fluentui/utilities';\nimport type { ITheme } from '../interfaces/index';\n\nexport type GlobalClassNames<IStyles> = Record<keyof IStyles, string>;\n\n/**\n * Internal memoized function which simply takes in the class map and the\n * disable boolean. These immutable values can be memoized.\n */\nconst _getGlobalClassNames = memoizeFunction(\n  <T>(classNames: GlobalClassNames<T>, disableGlobalClassNames?: boolean): GlobalClassNames<T> => {\n    const styleSheet = Stylesheet.getInstance();\n\n    if (disableGlobalClassNames) {\n      // disable global classnames\n      return (Object.keys(classNames) as (keyof T)[]).reduce((acc, className) => {\n        acc[className] = styleSheet.getClassName(classNames[className]);\n        return acc;\n      }, {} as GlobalClassNames<T>);\n    }\n\n    // use global classnames\n    return classNames;\n  },\n);\n\n/**\n * Checks for the `disableGlobalClassNames` property on the `theme` to determine if it should return `classNames`\n * Note that calls to this function are memoized.\n *\n * @param classNames - The collection of global class names that apply when the flag is false. Make sure to pass in\n * the same instance on each call to benefit from memoization.\n * @param theme - The theme to check the flag on\n * @param disableGlobalClassNames - Optional. Explicitly opt in/out of disabling global classnames. Defaults to false.\n */\nexport function getGlobalClassNames<T>(\n  classNames: GlobalClassNames<T>,\n  theme: ITheme,\n  disableGlobalClassNames?: boolean,\n): GlobalClassNames<T> {\n  return _getGlobalClassNames(\n    classNames,\n    disableGlobalClassNames !== undefined ? disableGlobalClassNames : theme.disableGlobalClassNames,\n  );\n}\n", "import { Customizations, mergeSettings } from '@fluentui/utilities';\nimport type { ICustomizerContext } from '@fluentui/utilities';\nimport type { ISchemeNames, ITheme } from '../interfaces/index';\n\n/**\n * @internal\n * This function is still in experimental phase in support of Foundation experimental development.\n * Its API signature and existence are subject to change.\n *\n * Modify context to activate the specified scheme or theme. For schemes, look in context (if available) and fall back\n * to global Customizations. If both scheme and theme are specified, scheme will be looked up in theme. In this case,\n * scheme must be present in theme arg, otherwise new context will default to theme arg (there is no fallback to\n * settings to look up scheme.)\n *\n * @param context - Context in which to get schemed customizations.\n * @param scheme - Scheme to get customizations for from theme arg (if supplied) OR from context and global settings.\n * @param theme - Theme to merge into context.\n * @returns modified schemed context if scheme is valid and not already applied, unmodified context otherwise.\n */\nexport function getThemedContext(\n  context: ICustomizerContext,\n  scheme?: ISchemeNames,\n  theme?: ITheme,\n): ICustomizerContext {\n  let newContext: ICustomizerContext = context;\n  let newSettings;\n\n  // Only fall back to context and customizations when theme arg is not provided.\n  let schemeSource = theme || Customizations.getSettings(['theme'], undefined, context.customizations).theme;\n\n  if (theme) {\n    newSettings = { theme };\n  }\n\n  const schemeTheme: ITheme | undefined =\n    scheme && schemeSource && schemeSource.schemes && schemeSource.schemes[scheme];\n\n  // These first two checks are logically redundant but TS doesn't infer schemeSource.schemes is defined\n  // when schemeTheme is defined.\n  if (schemeSource && schemeTheme && schemeSource !== schemeTheme) {\n    newSettings = { theme: schemeTheme };\n    newSettings.theme.schemes = schemeSource.schemes;\n  }\n\n  if (newSettings) {\n    newContext = {\n      customizations: {\n        settings: mergeSettings(context.customizations.settings, newSettings),\n        scopedSettings: context.customizations.scopedSettings,\n      },\n    };\n  }\n\n  return newContext;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/**\n * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value\n * to use if that slot is not specified by the theme.\n */\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\n// Declaring a global here in case that the execution environment is Node.js (without importing the\n// entire node.js d.ts for now)\ndeclare let global: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nexport interface IThemingInstruction {\n  theme?: string;\n  defaultValue?: string;\n  rawString?: string;\n}\n\nexport type ThemableArray = IThemingInstruction[];\n\nexport interface ITheme {\n  [key: string]: string;\n}\n\ninterface IStyleSheet {\n  cssText: string;\n}\n\ninterface IExtendedHtmlStyleElement extends HTMLStyleElement {\n  styleSheet: IStyleSheet;\n}\n\n/**\n * Performance Measurement of loading styles\n */\ninterface IMeasurement {\n  /**\n   * Count of style element injected, which is the slow operation in IE\n   */\n  count: number;\n  /**\n   * Total duration of all loadStyles exections\n   */\n  duration: number;\n}\n\ninterface IRunState {\n  mode: Mode;\n  buffer: ThemableArray[];\n  flushTimer: number;\n}\n\ninterface IThemeState {\n  theme: ITheme | undefined;\n  lastStyleElement: IExtendedHtmlStyleElement;\n  registeredStyles: IStyleRecord[]; // records of already registered non-themable styles\n  registeredThemableStyles: IStyleRecord[]; // records of already registered themable styles\n  loadStyles: ((processedStyles: string, rawStyles?: string | ThemableArray) => void) | undefined;\n  perf: IMeasurement;\n  runState: IRunState;\n}\n\ninterface IStyleRecord {\n  styleElement: Element;\n  themableStyle: ThemableArray;\n}\n\ninterface ICustomEvent<T> extends Event {\n  args?: T;\n}\n\n/**\n * object returned from resolveThemableArray function\n */\ninterface IThemableArrayResolveResult {\n  /** this string is the processed styles in string */\n  styleString: string;\n\n  /** this boolean indicates if this style array is themable */\n  themable: boolean;\n}\n\n/**\n * In sync mode, styles are registered as style elements synchronously with loadStyles() call.\n * In async mode, styles are buffered and registered as batch in async timer for performance purpose.\n */\nexport const enum Mode {\n  sync,\n  async\n}\n\n/**\n * Themable styles and non-themable styles are tracked separately\n * Specify ClearStyleOptions when calling clearStyles API to specify which group of registered styles should be cleared.\n */\nexport const enum ClearStyleOptions {\n  /** only themable styles will be cleared */\n  onlyThemable = 1,\n  /** only non-themable styles will be cleared */\n  onlyNonThemable = 2,\n  /** both themable and non-themable styles will be cleared */\n  all = 3\n}\n\n// Store the theming state in __themeState__ global scope for reuse in the case of duplicate\n// load-themed-styles hosted on the page.\nconst _root: any = typeof window === 'undefined' ? global : window; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n// Nonce string to inject into script tag if one provided. This is used in CSP (Content Security Policy).\nconst _styleNonce: string = _root && _root.CSPSettings && _root.CSPSettings.nonce;\n\nconst _themeState: IThemeState = initializeThemeState();\n\n/**\n * Matches theming tokens. For example, \"[theme: themeSlotName, default: #FFF]\" (including the quotes).\n */\nconst _themeTokenRegex: RegExp =\n  /[\\'\\\"]\\[theme:\\s*(\\w+)\\s*(?:\\,\\s*default:\\s*([\\\\\"\\']?[\\.\\,\\(\\)\\#\\-\\s\\w]*[\\.\\,\\(\\)\\#\\-\\w][\\\"\\']?))?\\s*\\][\\'\\\"]/g;\n\nconst now: () => number = () =>\n  typeof performance !== 'undefined' && !!performance.now ? performance.now() : Date.now();\n\nfunction measure(func: () => void): void {\n  const start: number = now();\n  func();\n  const end: number = now();\n  _themeState.perf.duration += end - start;\n}\n\n/**\n * initialize global state object\n */\nfunction initializeThemeState(): IThemeState {\n  let state: IThemeState = _root.__themeState__ || {\n    theme: undefined,\n    lastStyleElement: undefined,\n    registeredStyles: []\n  };\n\n  if (!state.runState) {\n    state = {\n      ...state,\n      perf: {\n        count: 0,\n        duration: 0\n      },\n      runState: {\n        flushTimer: 0,\n        mode: Mode.sync,\n        buffer: []\n      }\n    };\n  }\n  if (!state.registeredThemableStyles) {\n    state = {\n      ...state,\n      registeredThemableStyles: []\n    };\n  }\n  _root.__themeState__ = state;\n  return state;\n}\n\n/**\n * Loads a set of style text. If it is registered too early, we will register it when the window.load\n * event is fired.\n * @param {string | ThemableArray} styles Themable style text to register.\n * @param {boolean} loadAsync When true, always load styles in async mode, irrespective of current sync mode.\n */\nexport function loadStyles(styles: string | ThemableArray, loadAsync: boolean = false): void {\n  measure(() => {\n    const styleParts: ThemableArray = Array.isArray(styles) ? styles : splitStyles(styles);\n    const { mode, buffer, flushTimer } = _themeState.runState;\n    if (loadAsync || mode === Mode.async) {\n      buffer.push(styleParts);\n      if (!flushTimer) {\n        _themeState.runState.flushTimer = asyncLoadStyles();\n      }\n    } else {\n      applyThemableStyles(styleParts);\n    }\n  });\n}\n\n/**\n * Allows for customizable loadStyles logic. e.g. for server side rendering application\n * @param {(processedStyles: string, rawStyles?: string | ThemableArray) => void}\n * a loadStyles callback that gets called when styles are loaded or reloaded\n */\nexport function configureLoadStyles(\n  loadStylesFn: ((processedStyles: string, rawStyles?: string | ThemableArray) => void) | undefined\n): void {\n  _themeState.loadStyles = loadStylesFn;\n}\n\n/**\n * Configure run mode of load-themable-styles\n * @param mode load-themable-styles run mode, async or sync\n */\nexport function configureRunMode(mode: Mode): void {\n  _themeState.runState.mode = mode;\n}\n\n/**\n * external code can call flush to synchronously force processing of currently buffered styles\n */\nexport function flush(): void {\n  measure(() => {\n    const styleArrays: ThemableArray[] = _themeState.runState.buffer.slice();\n    _themeState.runState.buffer = [];\n    const mergedStyleArray: ThemableArray = ([] as ThemableArray).concat.apply([], styleArrays);\n    if (mergedStyleArray.length > 0) {\n      applyThemableStyles(mergedStyleArray);\n    }\n  });\n}\n\n/**\n * register async loadStyles\n */\nfunction asyncLoadStyles(): number {\n  return setTimeout(() => {\n    _themeState.runState.flushTimer = 0;\n    flush();\n  }, 0);\n}\n\n/**\n * Loads a set of style text. If it is registered too early, we will register it when the window.load event\n * is fired.\n * @param {string} styleText Style to register.\n * @param {IStyleRecord} styleRecord Existing style record to re-apply.\n */\nfunction applyThemableStyles(stylesArray: ThemableArray, styleRecord?: IStyleRecord): void {\n  if (_themeState.loadStyles) {\n    _themeState.loadStyles(resolveThemableArray(stylesArray).styleString, stylesArray);\n  } else {\n    registerStyles(stylesArray);\n  }\n}\n\n/**\n * Registers a set theme tokens to find and replace. If styles were already registered, they will be\n * replaced.\n * @param {theme} theme JSON object of theme tokens to values.\n */\nexport function loadTheme(theme: ITheme | undefined): void {\n  _themeState.theme = theme;\n\n  // reload styles.\n  reloadStyles();\n}\n\n/**\n * Clear already registered style elements and style records in theme_State object\n * @param option - specify which group of registered styles should be cleared.\n * Default to be both themable and non-themable styles will be cleared\n */\nexport function clearStyles(option: ClearStyleOptions = ClearStyleOptions.all): void {\n  if (option === ClearStyleOptions.all || option === ClearStyleOptions.onlyNonThemable) {\n    clearStylesInternal(_themeState.registeredStyles);\n    _themeState.registeredStyles = [];\n  }\n  if (option === ClearStyleOptions.all || option === ClearStyleOptions.onlyThemable) {\n    clearStylesInternal(_themeState.registeredThemableStyles);\n    _themeState.registeredThemableStyles = [];\n  }\n}\n\nfunction clearStylesInternal(records: IStyleRecord[]): void {\n  records.forEach((styleRecord: IStyleRecord) => {\n    const styleElement: HTMLStyleElement = styleRecord && (styleRecord.styleElement as HTMLStyleElement);\n    if (styleElement && styleElement.parentElement) {\n      styleElement.parentElement.removeChild(styleElement);\n    }\n  });\n}\n\n/**\n * Reloads styles.\n */\nfunction reloadStyles(): void {\n  if (_themeState.theme) {\n    const themableStyles: ThemableArray[] = [];\n    for (const styleRecord of _themeState.registeredThemableStyles) {\n      themableStyles.push(styleRecord.themableStyle);\n    }\n    if (themableStyles.length > 0) {\n      clearStyles(ClearStyleOptions.onlyThemable);\n      applyThemableStyles(([] as ThemableArray).concat.apply([], themableStyles));\n    }\n  }\n}\n\n/**\n * Find theme tokens and replaces them with provided theme values.\n * @param {string} styles Tokenized styles to fix.\n */\nexport function detokenize(styles: string | undefined): string | undefined {\n  if (styles) {\n    styles = resolveThemableArray(splitStyles(styles)).styleString;\n  }\n\n  return styles;\n}\n\n/**\n * Resolves ThemingInstruction objects in an array and joins the result into a string.\n * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.\n */\nfunction resolveThemableArray(splitStyleArray: ThemableArray): IThemableArrayResolveResult {\n  const { theme }: IThemeState = _themeState;\n  let themable: boolean = false;\n  // Resolve the array of theming instructions to an array of strings.\n  // Then join the array to produce the final CSS string.\n  const resolvedArray: (string | undefined)[] = (splitStyleArray || []).map(\n    (currentValue: IThemingInstruction) => {\n      const themeSlot: string | undefined = currentValue.theme;\n      if (themeSlot) {\n        themable = true;\n        // A theming annotation. Resolve it.\n        const themedValue: string | undefined = theme ? theme[themeSlot] : undefined;\n        const defaultValue: string = currentValue.defaultValue || 'inherit';\n\n        // Warn to console if we hit an unthemed value even when themes are provided, but only if \"DEBUG\" is true.\n        // Allow the themedValue to be undefined to explicitly request the default value.\n        if (\n          theme &&\n          !themedValue &&\n          console &&\n          !(themeSlot in theme) &&\n          typeof DEBUG !== 'undefined' &&\n          DEBUG\n        ) {\n          console.warn(`Theming value not provided for \"${themeSlot}\". Falling back to \"${defaultValue}\".`);\n        }\n\n        return themedValue || defaultValue;\n      } else {\n        // A non-themable string. Preserve it.\n        return currentValue.rawString;\n      }\n    }\n  );\n\n  return {\n    styleString: resolvedArray.join(''),\n    themable: themable\n  };\n}\n\n/**\n * Split tokenized CSS into an array of strings and theme specification objects\n * @param {string} styles Tokenized styles to split.\n */\nexport function splitStyles(styles: string): ThemableArray {\n  const result: ThemableArray = [];\n  if (styles) {\n    let pos: number = 0; // Current position in styles.\n    let tokenMatch: RegExpExecArray | null;\n    while ((tokenMatch = _themeTokenRegex.exec(styles))) {\n      const matchIndex: number = tokenMatch.index;\n      if (matchIndex > pos) {\n        result.push({\n          rawString: styles.substring(pos, matchIndex)\n        });\n      }\n\n      result.push({\n        theme: tokenMatch[1],\n        defaultValue: tokenMatch[2] // May be undefined\n      });\n\n      // index of the first character after the current match\n      pos = _themeTokenRegex.lastIndex;\n    }\n\n    // Push the rest of the string after the last match.\n    result.push({\n      rawString: styles.substring(pos)\n    });\n  }\n\n  return result;\n}\n\n/**\n * Registers a set of style text. If it is registered too early, we will register it when the\n * window.load event is fired.\n * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.\n * @param {IStyleRecord} styleRecord May specify a style Element to update.\n */\nfunction registerStyles(styleArray: ThemableArray): void {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\n  const styleElement: HTMLStyleElement = document.createElement('style');\n  const { styleString, themable } = resolveThemableArray(styleArray);\n\n  styleElement.setAttribute('data-load-themed-styles', 'true');\n  if (_styleNonce) {\n    styleElement.setAttribute('nonce', _styleNonce);\n  }\n  styleElement.appendChild(document.createTextNode(styleString));\n  _themeState.perf.count++;\n  head.appendChild(styleElement);\n\n  const ev: ICustomEvent<{ newStyle: HTMLStyleElement }> = document.createEvent('HTMLEvents');\n  ev.initEvent('styleinsert', true /* bubbleEvent */, false /* cancelable */);\n  ev.args = {\n    newStyle: styleElement\n  };\n  document.dispatchEvent(ev);\n\n  const record: IStyleRecord = {\n    styleElement: styleElement,\n    themableStyle: styleArray\n  };\n\n  if (themable) {\n    _themeState.registeredThemableStyles.push(record);\n  } else {\n    _themeState.registeredStyles.push(record);\n  }\n}\n", "import { Customizations, getWindow } from '@fluentui/utilities';\nimport { loadTheme as legacyLoadTheme } from '@microsoft/load-themed-styles';\nimport { createTheme } from '@fluentui/theme';\nimport type { ITheme, IPartialTheme, IFontStyles } from '../interfaces/index';\nimport type { IRawStyle } from '@fluentui/merge-styles';\n\nexport { createTheme } from '@fluentui/theme';\n\nlet _theme: ITheme = createTheme({});\nlet _onThemeChangeCallbacks: Array<(theme: ITheme) => void> = [];\n\nexport const ThemeSettingName = 'theme';\n\nexport function initializeThemeInCustomizations(): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const win: any = getWindow();\n\n  if (win?.FabricConfig?.legacyTheme) {\n    // does everything the `else` clause does and more, such as invoke legacy theming\n    loadTheme(win.FabricConfig.legacyTheme);\n  } else if (!Customizations.getSettings([ThemeSettingName]).theme) {\n    if (win?.FabricConfig?.theme) {\n      _theme = createTheme(win.FabricConfig.theme);\n    }\n\n    // Set the default theme.\n    Customizations.applySettings({ [ThemeSettingName]: _theme });\n  }\n}\n\ninitializeThemeInCustomizations();\n\n/**\n * Gets the theme object\n * @param depComments - Whether to include deprecated tags as comments for deprecated slots.\n */\nexport function getTheme(depComments: boolean = false): ITheme {\n  if (depComments === true) {\n    _theme = createTheme({}, depComments);\n  }\n  return _theme;\n}\n\n/**\n * Registers a callback that gets called whenever the theme changes.\n * This should only be used when the component cannot automatically get theme changes through its state.\n * This will not register duplicate callbacks.\n */\nexport function registerOnThemeChangeCallback(callback: (theme: ITheme) => void): void {\n  if (_onThemeChangeCallbacks.indexOf(callback) === -1) {\n    _onThemeChangeCallbacks.push(callback);\n  }\n}\n\n/**\n * See registerOnThemeChangeCallback().\n * Removes previously registered callbacks.\n */\nexport function removeOnThemeChangeCallback(callback: (theme: ITheme) => void): void {\n  const i = _onThemeChangeCallbacks.indexOf(callback);\n  if (i === -1) {\n    return;\n  }\n\n  _onThemeChangeCallbacks.splice(i, 1);\n}\n\n/**\n * Applies the theme, while filling in missing slots.\n * @param theme - Partial theme object.\n * @param depComments - Whether to include deprecated tags as comments for deprecated slots.\n */\nexport function loadTheme(theme: IPartialTheme, depComments: boolean = false): ITheme {\n  _theme = createTheme(theme, depComments);\n\n  // Invoke the legacy method of theming the page as well.\n  legacyLoadTheme({ ..._theme.palette, ..._theme.semanticColors, ..._theme.effects, ..._loadFonts(_theme) });\n\n  Customizations.applySettings({ [ThemeSettingName]: _theme });\n\n  _onThemeChangeCallbacks.forEach((callback: (theme: ITheme) => void) => {\n    try {\n      callback(_theme);\n    } catch (e) {\n      // don't let a bad callback break everything else\n    }\n  });\n\n  return _theme;\n}\n\n/**\n * Loads font variables into a JSON object.\n * @param theme - The theme object\n */\nfunction _loadFonts(theme: ITheme): { [name: string]: string } {\n  const lines: { [key: string]: string } = {};\n\n  for (const fontName of Object.keys(theme.fonts)) {\n    const font: IRawStyle = theme.fonts[fontName as keyof IFontStyles];\n\n    for (const propName of Object.keys(font)) {\n      const name: string = fontName + propName.charAt(0).toUpperCase() + propName.slice(1);\n      let value = font[propName as keyof IRawStyle] as string;\n\n      if (propName === 'fontSize' && typeof value === 'number') {\n        // if it's a number, convert it to px by default like our theming system does\n        value = value + 'px';\n      }\n      lines[name] = value;\n    }\n  }\n  return lines;\n}\n", "import type { IRawStyle } from '@fluentui/merge-styles';\n\n// This file mimics styles and mixins from _General.Mixins.scss\nexport const normalize: IRawStyle = {\n  boxShadow: 'none',\n  margin: 0,\n  padding: 0,\n  boxSizing: 'border-box',\n};\n\nexport const noWrap: IRawStyle = {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n};\n", "import type { IRawStyle } from '@fluentui/merge-styles';\nimport type { ITheme, ISemanticColors, IPalette } from '../interfaces/index';\n\ninterface IRGB {\n  r: number;\n  g: number;\n  b: number;\n}\n\nconst DEFAULT_HEIGHT = '50%';\nconst DEFAULT_WIDTH = 20;\n\n/**\n * - Generates a style used to fade out an overflowing content by defining a style for an :after pseudo element.\n * - Apply it to the :after selector for all combination of states the parent of content might have (normal, hover,\n * selected, focus).\n * - Requires the target to have position set to relative and overflow set to hidden.\n *\n * @example\n * ```tsx\n * // Assuming the following DOM structure and the different background colors coming from\n * // the parent holding the content.\n * <div className={classNames.parent}>\n *   <span className={classNames.content}>Overflown Content</span>\n * </div>\n * ```\n * ```ts\n * // This is how the style set would look in Component.styles.ts\n * const { bodyBackground } = theme.semanticColors;\n * const { neutralLighter } = theme.palette;\n *\n * // The second argument of getFadedOverflowStyle function is a string representing a key of\n * // ISemanticColors or IPalette.\n *\n * const styles = {\n *   parent: [\n *     backgroundColor: bodyBackground,\n *     selectors: {\n *       '&:hover: {\n *         backgroundColor: neutralLighter\n *       },\n *       '$content:after': {\n *         ...getFadedOverflowStyle(theme, 'bodyBackground')\n *       },\n *       '&:hover $content:after': {\n *         ...getFadedOverflowStyle(theme, 'neutralLighter')\n *       }\n *     }\n *   ],\n *   content: [\n *     width: '100%',\n *     display: 'inline-block',\n *     position: 'relative',\n *     overflow: 'hidden'\n *   ]\n * }\n * ```\n * @param theme - The theme object to use.\n * @param color - The background color to fade out to. Accepts only keys of ISemanticColors or IPalette.\n * Defaults to 'bodyBackground'.\n * @param direction - The direction of the overflow. Defaults to horizontal.\n * @param width - The width of the fading overflow. Vertical direction defaults it to 100% vs 20px when horizontal.\n * @param height - The Height of the fading overflow. Vertical direction defaults it to 50% vs 100% when horizontal.\n * @returns The style object.\n */\nexport function getFadedOverflowStyle(\n  theme: ITheme,\n  color: keyof ISemanticColors | keyof IPalette = 'bodyBackground',\n  direction: 'horizontal' | 'vertical' = 'horizontal',\n  width: string | number = getDefaultValue('width', direction),\n  height: string | number = getDefaultValue('height', direction),\n): IRawStyle {\n  // Get the color value string from the theme semanticColors or palette.\n  const colorValue: string =\n    theme.semanticColors[color as keyof ISemanticColors] || theme.palette[color as keyof IPalette];\n  // Get the red, green, blue values of the colorValue.\n  const rgbColor: IRGB = color2rgb(colorValue);\n  // Apply opacity 0 to serve as a start color of the gradient.\n  const rgba = `rgba(${rgbColor.r}, ${rgbColor.g}, ${rgbColor.b}, 0)`;\n  // Get the direction of the gradient. (mergeStyles takes care of RTL direction)\n  const gradientDirection = direction === 'vertical' ? 'to bottom' : 'to right';\n\n  return {\n    content: '\"\"',\n    position: 'absolute',\n    right: 0,\n    bottom: 0,\n    width: width,\n    height: height,\n    pointerEvents: 'none',\n    backgroundImage: `linear-gradient(${gradientDirection}, ${rgba} 0%, ${colorValue} 100%)`,\n  };\n}\n\n// TODO consider moving this to a separate module along with some more color functions from OUFR/utilities.\n/**\n * Helper function to convert a string hex color to an RGB object.\n *\n * @param colorValue - Color to be converted from hex to rgba.\n */\nfunction color2rgb(colorValue: string): IRGB {\n  if (colorValue[0] === '#') {\n    // If it's a hex code\n    return {\n      r: parseInt(colorValue.slice(1, 3), 16),\n      g: parseInt(colorValue.slice(3, 5), 16),\n      b: parseInt(colorValue.slice(5, 7), 16),\n    };\n  } else if (colorValue.indexOf('rgba(') === 0) {\n    // If it's an rgba color string\n    colorValue = colorValue.match(/rgba\\(([^)]+)\\)/)![1];\n    const parts = colorValue.split(/ *, */).map(Number);\n\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n    };\n  }\n  // The only remaining possibility is transparent.\n  return {\n    r: 255,\n    g: 255,\n    b: 255,\n  };\n}\n\n/**\n * Helper function to get the default values for parameters of main function.\n *\n * @param style - Which style to get the default value for.\n * @param direction - What direction to take into consideration.\n */\nfunction getDefaultValue(style: 'width' | 'height', direction: string): number | string {\n  if (style === 'width') {\n    return direction === 'horizontal' ? DEFAULT_WIDTH : '100%';\n  } else {\n    return direction === 'vertical' ? DEFAULT_HEIGHT : '100%';\n  }\n}\n", "import type { IStyle } from '@fluentui/merge-styles';\n\n/**\n * Generates placeholder style for each of the browsers supported by `@fluentui/react`.\n * @param styles - The style to use.\n * @returns The placeholder style object for each browser depending on the placeholder directive it uses.\n */\nexport function getPlaceholderStyles(styles: IStyle): IStyle {\n  return {\n    selectors: {\n      '::placeholder': styles, // Chrome, Safari, Opera, Firefox\n      ':-ms-input-placeholder': styles, // IE 10+\n      '::-ms-input-placeholder': styles, // Edge\n    },\n  };\n}\n", "import { buildClassMap } from '../utilities/index';\nimport { AnimationStyles } from '../styles/index';\nimport type { IAnimationStyles } from '../interfaces/index';\n\n/**\n * {@docCategory AnimationClassNames}\n */\nexport const AnimationClassNames: { [key in keyof IAnimationStyles]?: string } = buildClassMap(AnimationStyles);\n", "import { buildClassMap } from '../utilities/buildClassMap';\nimport { DefaultFontStyles } from '../styles/DefaultFontStyles';\nimport type { IFontStyles } from '../interfaces/index';\n\n/**\n * {@docCategory FontClassNames}\n */\nexport const FontClassNames: { [key in keyof IFontStyles]?: string } = buildClassMap(DefaultFontStyles);\n", "import { mergeStyles } from '@fluentui/merge-styles';\nimport { DefaultPalette } from '../styles/DefaultPalette';\nimport { getTheme } from '../styles/index';\nimport type { IRawStyle } from '@fluentui/merge-styles';\n\n/**\n * {@docCategory IColorClassNames}\n */\nexport interface IColorClassNames {\n  themeDarker: string;\n  themeDarkerHover: string;\n  themeDarkerBackground: string;\n  themeDarkerBackgroundHover: string;\n  themeDarkerBorder: string;\n  themeDarkerBorderHover: string;\n  themeDark: string;\n  themeDarkHover: string;\n  themeDarkBackground: string;\n  themeDarkBackgroundHover: string;\n  themeDarkBorder: string;\n  themeDarkBorderHover: string;\n  themeDarkAlt: string;\n  themeDarkAltHover: string;\n  themeDarkAltBackground: string;\n  themeDarkAltBackgroundHover: string;\n  themeDarkAltBorder: string;\n  themeDarkAltBorderHover: string;\n  themePrimary: string;\n  themePrimaryHover: string;\n  themePrimaryBackground: string;\n  themePrimaryBackgroundHover: string;\n  themePrimaryBorder: string;\n  themePrimaryBorderHover: string;\n  themeSecondary: string;\n  themeSecondaryHover: string;\n  themeSecondaryBackground: string;\n  themeSecondaryBackgroundHover: string;\n  themeSecondaryBorder: string;\n  themeSecondaryBorderHover: string;\n  themeTertiary: string;\n  themeTertiaryHover: string;\n  themeTertiaryBackground: string;\n  themeTertiaryBackgroundHover: string;\n  themeTertiaryBorder: string;\n  themeTertiaryBorderHover: string;\n  themeLight: string;\n  themeLightHover: string;\n  themeLightBackground: string;\n  themeLightBackgroundHover: string;\n  themeLightBorder: string;\n  themeLightBorderHover: string;\n  themeLighter: string;\n  themeLighterHover: string;\n  themeLighterBackground: string;\n  themeLighterBackgroundHover: string;\n  themeLighterBorder: string;\n  themeLighterBorderHover: string;\n  themeLighterAlt: string;\n  themeLighterAltHover: string;\n  themeLighterAltBackground: string;\n  themeLighterAltBackgroundHover: string;\n  themeLighterAltBorder: string;\n  themeLighterAltBorderHover: string;\n  black: string;\n  blackHover: string;\n  blackBackground: string;\n  blackBackgroundHover: string;\n  blackBorder: string;\n  blackBorderHover: string;\n  blackTranslucent40: string;\n  blackTranslucent40Hover: string;\n  blackTranslucent40Background: string;\n  blackTranslucent40BackgroundHover: string;\n  blackTranslucent40Border: string;\n  blackTranslucent40BorderHover: string;\n  neutralDark: string;\n  neutralDarkHover: string;\n  neutralDarkBackground: string;\n  neutralDarkBackgroundHover: string;\n  neutralDarkBorder: string;\n  neutralDarkBorderHover: string;\n  neutralPrimary: string;\n  neutralPrimaryHover: string;\n  neutralPrimaryBackground: string;\n  neutralPrimaryBackgroundHover: string;\n  neutralPrimaryBorder: string;\n  neutralPrimaryBorderHover: string;\n  neutralPrimaryAlt: string;\n  neutralPrimaryAltHover: string;\n  neutralPrimaryAltBackground: string;\n  neutralPrimaryAltBackgroundHover: string;\n  neutralPrimaryAltBorder: string;\n  neutralPrimaryAltBorderHover: string;\n  neutralSecondary: string;\n  neutralSecondaryHover: string;\n  neutralSecondaryBackground: string;\n  neutralSecondaryBackgroundHover: string;\n  neutralSecondaryBorder: string;\n  neutralSecondaryBorderHover: string;\n  neutralSecondaryAlt: string;\n  neutralSecondaryAltHover: string;\n  neutralSecondaryAltBackground: string;\n  neutralSecondaryAltBackgroundHover: string;\n  neutralSecondaryAltBorder: string;\n  neutralSecondaryAltBorderHover: string;\n  neutralTertiary: string;\n  neutralTertiaryHover: string;\n  neutralTertiaryBackground: string;\n  neutralTertiaryBackgroundHover: string;\n  neutralTertiaryBorder: string;\n  neutralTertiaryBorderHover: string;\n  neutralTertiaryAlt: string;\n  neutralTertiaryAltHover: string;\n  neutralTertiaryAltBackground: string;\n  neutralTertiaryAltBackgroundHover: string;\n  neutralTertiaryAltBorder: string;\n  neutralTertiaryAltBorderHover: string;\n  neutralQuaternary: string;\n  neutralQuaternaryHover: string;\n  neutralQuaternaryBackground: string;\n  neutralQuaternaryBackgroundHover: string;\n  neutralQuaternaryBorder: string;\n  neutralQuaternaryBorderHover: string;\n  neutralQuaternaryAlt: string;\n  neutralQuaternaryAltHover: string;\n  neutralQuaternaryAltBackground: string;\n  neutralQuaternaryAltBackgroundHover: string;\n  neutralQuaternaryAltBorder: string;\n  neutralQuaternaryAltBorderHover: string;\n  neutralLight: string;\n  neutralLightHover: string;\n  neutralLightBackground: string;\n  neutralLightBackgroundHover: string;\n  neutralLightBorder: string;\n  neutralLightBorderHover: string;\n  neutralLighter: string;\n  neutralLighterHover: string;\n  neutralLighterBackground: string;\n  neutralLighterBackgroundHover: string;\n  neutralLighterBorder: string;\n  neutralLighterBorderHover: string;\n  neutralLighterAlt: string;\n  neutralLighterAltHover: string;\n  neutralLighterAltBackground: string;\n  neutralLighterAltBackgroundHover: string;\n  neutralLighterAltBorder: string;\n  neutralLighterAltBorderHover: string;\n  white: string;\n  whiteHover: string;\n  whiteBackground: string;\n  whiteBackgroundHover: string;\n  whiteBorder: string;\n  whiteBorderHover: string;\n  whiteTranslucent40: string;\n  whiteTranslucent40Hover: string;\n  whiteTranslucent40Background: string;\n  whiteTranslucent40BackgroundHover: string;\n  whiteTranslucent40Border: string;\n  whiteTranslucent40BorderHover: string;\n  yellow: string;\n  yellowHover: string;\n  yellowBackground: string;\n  yellowBackgroundHover: string;\n  yellowBorder: string;\n  yellowBorderHover: string;\n  yellowLight: string;\n  yellowLightHover: string;\n  yellowLightBackground: string;\n  yellowLightBackgroundHover: string;\n  yellowLightBorder: string;\n  yellowLightBorderHover: string;\n  orange: string;\n  orangeHover: string;\n  orangeBackground: string;\n  orangeBackgroundHover: string;\n  orangeBorder: string;\n  orangeBorderHover: string;\n  orangeLight: string;\n  orangeLightHover: string;\n  orangeLightBackground: string;\n  orangeLightBackgroundHover: string;\n  orangeLightBorder: string;\n  orangeLightBorderHover: string;\n  orangeLighter: string;\n  orangeLighterHover: string;\n  orangeLighterBackground: string;\n  orangeLighterBackgroundHover: string;\n  orangeLighterBorder: string;\n  orangeLighterBorderHover: string;\n  redDark: string;\n  redDarkHover: string;\n  redDarkBackground: string;\n  redDarkBackgroundHover: string;\n  redDarkBorder: string;\n  redDarkBorderHover: string;\n  red: string;\n  redHover: string;\n  redBackground: string;\n  redBackgroundHover: string;\n  redBorder: string;\n  redBorderHover: string;\n  magentaDark: string;\n  magentaDarkHover: string;\n  magentaDarkBackground: string;\n  magentaDarkBackgroundHover: string;\n  magentaDarkBorder: string;\n  magentaDarkBorderHover: string;\n  magenta: string;\n  magentaHover: string;\n  magentaBackground: string;\n  magentaBackgroundHover: string;\n  magentaBorder: string;\n  magentaBorderHover: string;\n  magentaLight: string;\n  magentaLightHover: string;\n  magentaLightBackground: string;\n  magentaLightBackgroundHover: string;\n  magentaLightBorder: string;\n  magentaLightBorderHover: string;\n  purpleDark: string;\n  purpleDarkHover: string;\n  purpleDarkBackground: string;\n  purpleDarkBackgroundHover: string;\n  purpleDarkBorder: string;\n  purpleDarkBorderHover: string;\n  purple: string;\n  purpleHover: string;\n  purpleBackground: string;\n  purpleBackgroundHover: string;\n  purpleBorder: string;\n  purpleBorderHover: string;\n  purpleLight: string;\n  purpleLightHover: string;\n  purpleLightBackground: string;\n  purpleLightBackgroundHover: string;\n  purpleLightBorder: string;\n  purpleLightBorderHover: string;\n  blueDark: string;\n  blueDarkHover: string;\n  blueDarkBackground: string;\n  blueDarkBackgroundHover: string;\n  blueDarkBorder: string;\n  blueDarkBorderHover: string;\n  blueMid: string;\n  blueMidHover: string;\n  blueMidBackground: string;\n  blueMidBackgroundHover: string;\n  blueMidBorder: string;\n  blueMidBorderHover: string;\n  blue: string;\n  blueHover: string;\n  blueBackground: string;\n  blueBackgroundHover: string;\n  blueBorder: string;\n  blueBorderHover: string;\n  blueLight: string;\n  blueLightHover: string;\n  blueLightBackground: string;\n  blueLightBackgroundHover: string;\n  blueLightBorder: string;\n  blueLightBorderHover: string;\n  tealDark: string;\n  tealDarkHover: string;\n  tealDarkBackground: string;\n  tealDarkBackgroundHover: string;\n  tealDarkBorder: string;\n  tealDarkBorderHover: string;\n  teal: string;\n  tealHover: string;\n  tealBackground: string;\n  tealBackgroundHover: string;\n  tealBorder: string;\n  tealBorderHover: string;\n  tealLight: string;\n  tealLightHover: string;\n  tealLightBackground: string;\n  tealLightBackgroundHover: string;\n  tealLightBorder: string;\n  tealLightBorderHover: string;\n  greenDark: string;\n  greenDarkHover: string;\n  greenDarkBackground: string;\n  greenDarkBackgroundHover: string;\n  greenDarkBorder: string;\n  greenDarkBorderHover: string;\n  green: string;\n  greenHover: string;\n  greenBackground: string;\n  greenBackgroundHover: string;\n  greenBorder: string;\n  greenBorderHover: string;\n  greenLight: string;\n  greenLightHover: string;\n  greenLightBackground: string;\n  greenLightBackgroundHover: string;\n  greenLightBorder: string;\n  greenLightBorderHover: string;\n}\n\nexport const ColorClassNames: IColorClassNames = {} as IColorClassNames;\n\nfor (const colorName in DefaultPalette) {\n  if (DefaultPalette.hasOwnProperty(colorName)) {\n    // Foreground color\n    _defineGetter(ColorClassNames, colorName, '', false, 'color');\n\n    // Hover color\n    _defineGetter(ColorClassNames, colorName, 'Hover', true, 'color');\n\n    // Background color\n    _defineGetter(ColorClassNames, colorName, 'Background', false, 'background');\n\n    // Background hover\n    _defineGetter(ColorClassNames, colorName, 'BackgroundHover', true, 'background');\n\n    // Border color\n    _defineGetter(ColorClassNames, colorName, 'Border', false, 'borderColor');\n\n    // Border hover color\n    _defineGetter(ColorClassNames, colorName, 'BorderHover', true, 'borderColor');\n  }\n}\n\n/**\n * Defines a getter for the given class configuration.\n */\nfunction _defineGetter(\n  obj: IColorClassNames,\n  colorName: string,\n  suffix: string,\n  isHover: boolean,\n  cssProperty: string,\n): void {\n  Object.defineProperty(obj, colorName + suffix, {\n    get: (): string => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const style: IRawStyle = { [cssProperty]: (getTheme().palette as any)[colorName] };\n\n      return mergeStyles(isHover ? { selectors: { ':hover': style } } : style).toString();\n    },\n    enumerable: true,\n    configurable: true,\n  });\n}\n", "export const FLUENT_CDN_BASE_URL = 'https://res.cdn.office.net/files/fabric-cdn-prod_20230524.001';\n", "// Do not modify this file; it is generated as part of publish.\n// The checked in version is a placeholder only and will not be updated.\nimport { setVersion } from '@fluentui/set-version';\nsetVersion('@fluentui/style-utilities', '8.9.14');", "export * from './classNames/index';\nexport * from './styles/index';\nexport * from './utilities/index';\nexport * from './interfaces/index';\nexport * from './MergeStyles';\nexport * from './cdn';\n\nimport './version';\n\n// Ensure theme is initialized when this package is referenced.\nimport { initializeThemeInCustomizations } from './styles/theme';\ninitializeThemeInCustomizations();\n", "import { HighContrastSelector, focusClear, getGlobalClassNames, ZIndexes } from '../../Styling';\nimport type { IRawStyle } from '../../Styling';\nimport type { ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\n\nfunction getBeakStyle(beakWidth?: number): IRawStyle {\n  return {\n    height: beakWidth,\n    width: beakWidth,\n  };\n}\n\nconst GlobalClassNames = {\n  container: 'ms-Callout-container',\n  root: 'ms-Callout',\n  beak: 'ms-Callout-beak',\n  beakCurtain: 'ms-Callout-beakCurtain',\n  calloutMain: 'ms-Callout-main',\n};\n\nexport const getStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n  const {\n    theme,\n    className,\n    overflowYHidden,\n    calloutWidth,\n    beakWidth,\n    backgroundColor,\n    calloutMaxWidth,\n    calloutMinWidth,\n    doNotLayer,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const { semanticColors, effects } = theme;\n\n  return {\n    container: [\n      classNames.container,\n      {\n        position: 'relative',\n      },\n    ],\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        position: 'absolute',\n        display: 'flex',\n        zIndex: doNotLayer ? ZIndexes.Layer : undefined,\n        boxSizing: 'border-box',\n        borderRadius: effects.roundedCorner2,\n        boxShadow: effects.elevation16,\n        selectors: {\n          [HighContrastSelector]: {\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: 'WindowText',\n          },\n        },\n      },\n      focusClear(),\n      className,\n      !!calloutWidth && { width: calloutWidth },\n      !!calloutMaxWidth && { maxWidth: calloutMaxWidth },\n      !!calloutMinWidth && { minWidth: calloutMinWidth },\n    ],\n    beak: [\n      classNames.beak,\n      {\n        position: 'absolute',\n        backgroundColor: semanticColors.menuBackground,\n        boxShadow: 'inherit',\n        border: 'inherit',\n        boxSizing: 'border-box',\n        transform: 'rotate(45deg)',\n      },\n      getBeakStyle(beakWidth),\n      backgroundColor && {\n        backgroundColor,\n      },\n    ],\n    beakCurtain: [\n      classNames.beakCurtain,\n      {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        backgroundColor: semanticColors.menuBackground,\n        borderRadius: effects.roundedCorner2,\n      },\n    ],\n    calloutMain: [\n      classNames.calloutMain,\n      {\n        backgroundColor: semanticColors.menuBackground,\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        position: 'relative',\n        width: '100%',\n        borderRadius: effects.roundedCorner2,\n      },\n      overflowYHidden && {\n        overflowY: 'hidden',\n      },\n      backgroundColor && {\n        backgroundColor,\n      },\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { CalloutContentBase } from './CalloutContent.base';\nimport { getStyles } from './CalloutContent.styles';\nimport type { ICalloutProps } from './Callout.types';\n\nexport const CalloutContent: React.FunctionComponent<ICalloutProps> = styled(CalloutContentBase, getStyles, undefined, {\n  scope: 'CalloutContent',\n});\n", "import * as React from 'react';\nimport type { RegisterPortalFn } from './types';\n\nconst PortalCompatContext = React.createContext<RegisterPortalFn | undefined>(\n  undefined,\n) as React.Context<RegisterPortalFn>;\n\nconst portalCompatContextDefaultValue = () => () => undefined;\n\nexport const PortalCompatContextProvider = PortalCompatContext.Provider;\n\nexport function usePortalCompat() {\n  return React.useContext(PortalCompatContext) ?? portalCompatContextDefaultValue;\n}\n", "// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \"react-portal-compat-context\" uses v9 configs via path aliases\nimport { usePortalCompat } from '@fluentui/react-portal-compat-context';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Fabric } from '../../Fabric';\nimport {\n  classNamesFunction,\n  css,\n  getDocument,\n  setPortalAttribute,\n  setVirtualParent,\n  FocusRectsProvider,\n  FocusRectsContext,\n  IsFocusVisibleClassName,\n} from '../../Utilities';\nimport {\n  registerLayer,\n  getDefaultTarget,\n  unregisterLayer,\n  getLayerHost,\n  createDefaultLayerHost,\n} from './Layer.notification';\nimport { useIsomorphicLayoutEffect, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport type { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\n\nconst getClassNames = classNamesFunction<ILayerStyleProps, ILayerStyles>();\n\nconst getFocusVisibility = (providerRef?: React.RefObject<HTMLElement>) => {\n  if (providerRef?.current) {\n    return providerRef.current.classList.contains(IsFocusVisibleClassName);\n  }\n\n  return false;\n};\n\nexport const LayerBase: React.FunctionComponent<ILayerProps> = React.forwardRef<HTMLDivElement, ILayerProps>(\n  (props, ref) => {\n    const registerPortalEl = usePortalCompat();\n\n    const rootRef = React.useRef<HTMLSpanElement>(null);\n    const mergedRef = useMergedRefs(rootRef, ref);\n    const layerRef = React.useRef<HTMLDivElement>();\n    const fabricElementRef = React.useRef<HTMLDivElement>(null);\n    const focusContext = React.useContext(FocusRectsContext);\n\n    // Tracks if the layer mount events need to be raised.\n    // Required to allow the DOM to render after the layer element is added.\n    const [needRaiseLayerMount, setNeedRaiseLayerMount] = React.useState(false);\n\n    // Sets the focus visible className when the FocusRectsProvider for the layer is rendered\n    // This allows the current focus visibility style to be carried over to the layer content\n    const focusRectsRef = React.useCallback(\n      el => {\n        const isFocusVisible = getFocusVisibility(focusContext?.providerRef);\n        if (el && isFocusVisible) {\n          el.classList.add(IsFocusVisibleClassName);\n        }\n      },\n      [focusContext],\n    );\n\n    const {\n      children,\n      className,\n      eventBubblingEnabled,\n      fabricProps,\n      hostId,\n      insertFirst,\n      onLayerDidMount = () => undefined,\n      // eslint-disable-next-line deprecation/deprecation\n      onLayerMounted = () => undefined,\n      onLayerWillUnmount,\n      styles,\n      theme,\n    } = props;\n\n    const fabricRef = useMergedRefs(fabricElementRef, fabricProps?.ref, focusRectsRef);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isNotHost: !hostId,\n    });\n\n    // Returns the user provided hostId props element, the default target selector,\n    // or undefined if document doesn't exist.\n    const getHost = (doc: Document): Node | null => {\n      if (hostId) {\n        const layerHost = getLayerHost(hostId);\n\n        if (layerHost) {\n          return layerHost.rootRef.current ?? null;\n        }\n\n        return doc.getElementById(hostId) ?? null;\n      } else {\n        const defaultHostSelector = getDefaultTarget();\n\n        // Find the host.\n        let host: Node | null = defaultHostSelector ? (doc.querySelector(defaultHostSelector) as Node) : null;\n\n        // If no host is available, create a container for injecting layers in.\n        // Having a container scopes layout computation.\n        if (!host) {\n          host = createDefaultLayerHost(doc);\n        }\n\n        return host;\n      }\n    };\n\n    // Removes the current layer element's parentNode and runs onLayerWillUnmount prop if provided.\n    const removeLayerElement = (): void => {\n      onLayerWillUnmount?.();\n\n      const elem = layerRef.current;\n\n      // Clear ref before removing from the DOM\n      layerRef.current = undefined;\n\n      if (elem && elem.parentNode) {\n        elem.parentNode.removeChild(elem);\n      }\n    };\n\n    // If a doc or host exists, it will remove and update layer parentNodes.\n    const createLayerElement = () => {\n      const doc = getDocument(rootRef.current);\n\n      if (!doc) {\n        return;\n      }\n\n      const host = getHost(doc);\n\n      if (!host) {\n        return;\n      }\n\n      // Remove and re-create any previous existing layer elements.\n      removeLayerElement();\n\n      const el = (host.ownerDocument ?? doc).createElement('div');\n\n      el.className = classNames.root!;\n      setPortalAttribute(el);\n      setVirtualParent(el, rootRef.current!);\n\n      insertFirst ? host.insertBefore(el, host.firstChild) : host.appendChild(el);\n      layerRef.current = el;\n      setNeedRaiseLayerMount(true);\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      createLayerElement();\n      // Check if the user provided a hostId prop and register the layer with the ID.\n      if (hostId) {\n        registerLayer(hostId, createLayerElement);\n      }\n\n      const unregisterPortalEl = layerRef.current ? registerPortalEl(layerRef.current) : undefined;\n\n      return () => {\n        if (unregisterPortalEl) {\n          unregisterPortalEl();\n        }\n\n        removeLayerElement();\n\n        if (hostId) {\n          unregisterLayer(hostId, createLayerElement);\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should run if the hostId updates.\n    }, [hostId]);\n\n    React.useEffect(() => {\n      if (layerRef.current && needRaiseLayerMount) {\n        onLayerMounted?.();\n        onLayerDidMount?.();\n        setNeedRaiseLayerMount(false);\n      }\n    }, [needRaiseLayerMount, onLayerMounted, onLayerDidMount]);\n\n    useDebugWarnings(props);\n\n    return (\n      <span className=\"ms-layer\" ref={mergedRef}>\n        {layerRef.current &&\n          ReactDOM.createPortal(\n            <FocusRectsProvider layerRoot providerRef={fabricRef}>\n              {/* eslint-disable deprecation/deprecation */}\n              <Fabric\n                {...(!eventBubblingEnabled && getFilteredEvents())}\n                {...fabricProps}\n                className={css(classNames.content, fabricProps?.className)}\n                ref={fabricRef}\n              >\n                {children}\n              </Fabric>\n              {/* eslint-enable deprecation/deprecation */}\n            </FocusRectsProvider>,\n            layerRef.current,\n          )}\n      </span>\n    );\n  },\n);\nLayerBase.displayName = 'LayerBase';\n\nlet filteredEventProps: { [key: string]: (ev: React.SyntheticEvent<HTMLElement, Event>) => void };\n\nconst onFilterEvent = (ev: React.SyntheticEvent<HTMLElement>): void => {\n  // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though\n  // mouseenter and mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on\n  // event name rather than ev.bubble.\n  if (\n    ev.eventPhase === Event.BUBBLING_PHASE &&\n    ev.type !== 'mouseenter' &&\n    ev.type !== 'mouseleave' &&\n    ev.type !== 'touchstart' &&\n    ev.type !== 'touchend'\n  ) {\n    ev.stopPropagation();\n  }\n};\n\nfunction getFilteredEvents() {\n  if (!filteredEventProps) {\n    filteredEventProps = {} as any;\n    [\n      'onClick',\n      'onContextMenu',\n      'onDoubleClick',\n      'onDrag',\n      'onDragEnd',\n      'onDragEnter',\n      'onDragExit',\n      'onDragLeave',\n      'onDragOver',\n      'onDragStart',\n      'onDrop',\n      'onMouseDown',\n      'onMouseEnter',\n      'onMouseLeave',\n      'onMouseMove',\n      'onMouseOver',\n      'onMouseOut',\n      'onMouseUp',\n      'onTouchMove',\n      'onTouchStart',\n      'onTouchCancel',\n      'onTouchEnd',\n      'onKeyDown',\n      'onKeyPress',\n      'onKeyUp',\n      'onFocus',\n      'onBlur',\n      'onChange',\n      'onInput',\n      'onInvalid',\n      'onSubmit',\n    ].forEach(name => (filteredEventProps[name] = onFilterEvent));\n  }\n  return filteredEventProps;\n}\n\nfunction useDebugWarnings(props: ILayerProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Layer',\n      props,\n      deprecations: { onLayerMounted: 'onLayerDidMount' },\n    });\n  }\n}\n", "import * as React from 'react';\nimport {\n  classNamesFunction,\n  divProperties,\n  getDocument,\n  getNativeProps,\n  getRTL,\n  memoizeFunction,\n  Customizer,\n  FocusRectsProvider,\n} from '../../Utilities';\nimport { createTheme } from '../../Styling';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport type { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\nimport type { IProcessedStyleSet } from '@fluentui/merge-styles';\nimport type { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\nconst getFabricTheme = memoizeFunction((theme?: ITheme, isRTL?: boolean) => createTheme({ ...theme, rtl: isRTL }));\n\nconst getDir = ({ theme, dir }: IFabricProps) => {\n  const contextDir = getRTL(theme) ? 'rtl' : 'ltr';\n  const pageDir = getRTL() ? 'rtl' : 'ltr';\n  const componentDir = dir ? dir : contextDir;\n  return {\n    // If Fabric dir !== contextDir\n    // Or If contextDir !== pageDir\n    // Then we need to set dir of the Fabric root\n    rootDir: componentDir !== contextDir || componentDir !== pageDir ? componentDir : dir,\n    // If dir !== contextDir || pageDir\n    // then set contextual theme around content\n    needsTheme: componentDir !== contextDir,\n  };\n};\n\nexport const FabricBase: React.FunctionComponent<IFabricProps> = React.forwardRef<HTMLDivElement, IFabricProps>(\n  (props, ref) => {\n    const { className, theme, applyTheme, applyThemeToBody, styles } = props;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      applyTheme: applyTheme,\n      className,\n    });\n\n    const rootElement = React.useRef<HTMLDivElement>(null);\n    useApplyThemeToBody(applyThemeToBody, classNames, rootElement);\n\n    return <>{useRenderedContent(props, classNames, rootElement, ref)}</>;\n  },\n);\nFabricBase.displayName = 'FabricBase';\n\nfunction useRenderedContent(\n  props: IFabricProps,\n  { root }: IProcessedStyleSet<IFabricStyles>,\n  rootElement: React.RefObject<HTMLDivElement>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const { as: Root = 'div', dir, theme } = props;\n  const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, ['dir']);\n\n  const { rootDir, needsTheme } = getDir(props);\n\n  let renderedContent = (\n    <FocusRectsProvider providerRef={rootElement}>\n      <Root dir={rootDir} {...divProps} className={root} ref={useMergedRefs(rootElement, ref)} />\n    </FocusRectsProvider>\n  );\n\n  // Create the contextual theme if component direction does not match parent direction.\n  if (needsTheme) {\n    // Disabling ThemeProvider here because theme doesn't need to be re-provided by ThemeProvider if dir has changed.\n    renderedContent = (\n      // eslint-disable-next-line deprecation/deprecation\n      <Customizer settings={{ theme: getFabricTheme(theme, dir === 'rtl') }}>{renderedContent}</Customizer>\n    );\n  }\n\n  return renderedContent;\n}\n\nfunction useApplyThemeToBody(\n  applyThemeToBody: boolean | undefined,\n  { bodyThemed }: IProcessedStyleSet<IFabricStyles>,\n  rootElement: React.RefObject<HTMLDivElement | undefined>,\n) {\n  React.useEffect((): void | (() => void) => {\n    if (applyThemeToBody) {\n      const currentDoc = getDocument(rootElement.current);\n      if (currentDoc) {\n        currentDoc.body.classList.add(bodyThemed);\n        return () => {\n          currentDoc.body.classList.remove(bodyThemed);\n        };\n      }\n    }\n  }, [bodyThemed, applyThemeToBody, rootElement]);\n\n  return rootElement;\n}\n", "import { getGlobalClassNames } from '../../Styling';\nimport type { IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst inheritFont = { fontFamily: 'inherit' };\n\nconst GlobalClassNames = {\n  root: 'ms-Fabric',\n  bodyThemed: 'ms-Fabric-bodyThemed',\n};\n\nexport interface IFabricClassNames {\n  root: string;\n  bodyThemed: string;\n}\n\nexport const getStyles = (props: IFabricStyleProps): IFabricStyles => {\n  const { applyTheme, className, preventBlanketFontInheritance, theme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: theme.palette.neutralPrimary,\n      },\n      !preventBlanketFontInheritance && {\n        '& button': inheritFont,\n        '& input': inheritFont,\n        '& textarea': inheritFont,\n      },\n      // apply theme to only if applyTheme is true\n      applyTheme && {\n        color: theme.semanticColors.bodyText,\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n      className,\n    ],\n    bodyThemed: [\n      {\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { FabricBase } from './Fabric.base';\nimport { getStyles } from './Fabric.styles';\nimport type { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\n/**\n * @deprecated This component is deprecated as of `@fluentui/react` version 8. Use `ThemeProvider` instead.\n */\nexport const Fabric: React.FunctionComponent<IFabricProps> = styled<IFabricProps, IFabricStyleProps, IFabricStyles>(\n  FabricBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Fabric',\n  },\n);\n", "import { ILayerHost } from './LayerHost.types';\n\nconst _layersByHostId: { [hostId: string]: (() => void)[] } = {};\nconst _layerHostsById: { [hostId: string]: ILayerHost[] } = {};\n\nconst defaultHostId = 'fluent-default-layer-host';\nlet _defaultHostSelector: string | undefined = `#${defaultHostId}`;\n\n/**\n * Register a layer for a given host id\n * @param hostId - Id of the layer host\n * @param layer - Layer instance\n */\nexport function registerLayer(hostId: string, callback: () => void) {\n  if (!_layersByHostId[hostId]) {\n    _layersByHostId[hostId] = [];\n  }\n\n  _layersByHostId[hostId].push(callback);\n\n  const layerHosts = _layerHostsById[hostId];\n\n  if (layerHosts) {\n    for (const layerHost of layerHosts) {\n      layerHost.notifyLayersChanged();\n    }\n  }\n}\n\n/**\n * Unregister a layer for a given host id\n * @param hostId - Id of the layer host\n * @param layer - Layer instance\n */\nexport function unregisterLayer(hostId: string, callback: () => void) {\n  const layers = _layersByHostId[hostId];\n\n  if (layers) {\n    const idx = layers.indexOf(callback);\n    if (idx >= 0) {\n      layers.splice(idx, 1);\n\n      if (layers.length === 0) {\n        delete _layersByHostId[hostId];\n      }\n    }\n  }\n\n  const layerHosts = _layerHostsById[hostId];\n\n  if (layerHosts) {\n    for (const layerHost of layerHosts) {\n      layerHost.notifyLayersChanged();\n    }\n  }\n}\n\n/**\n * Gets the number of layers currently registered with a host id.\n * @param hostId - Id of the layer host.\n * @returns The number of layers currently registered with the host.\n */\nexport function getLayerCount(hostId: string): number {\n  const layers = _layerHostsById[hostId];\n\n  return layers ? layers.length : 0;\n}\n\n/**\n * Gets the Layer Host instance associated with a hostId, if applicable.\n * @param hostId - Id of the layer host\n * @returns A component ref for the associated layer host.\n */\nexport function getLayerHost(hostId: string): ILayerHost | undefined {\n  const layerHosts = _layerHostsById[hostId];\n\n  return (layerHosts && layerHosts[0]) || undefined;\n}\n\n/**\n * Registers a Layer Host with an associated hostId.\n * @param hostId - Id of the layer host\n * @param layerHost - layer host instance\n */\nexport function registerLayerHost(hostId: string, layerHost: ILayerHost): void {\n  const layerHosts = _layerHostsById[hostId] || (_layerHostsById[hostId] = []);\n\n  // Insert this at the start of an array to avoid race conditions between mount and unmount.\n  // If a LayerHost is re-mounted, and mount of the new instance may occur before the unmount of the old one.\n  // Putting the new instance at the start of this array ensures that calls to `getLayerHost` will immediately\n  // get the new one even if the old one is around briefly.\n  layerHosts.unshift(layerHost);\n}\n\n/**\n * Unregisters a Layer Host from the associated hostId.\n * @param hostId - Id of the layer host\n * @param layerHost - layer host instance\n */\nexport function unregisterLayerHost(hostId: string, layerHost: ILayerHost): void {\n  const layerHosts = _layerHostsById[hostId];\n\n  if (layerHosts) {\n    const idx = layerHosts.indexOf(layerHost);\n\n    if (idx >= 0) {\n      layerHosts.splice(idx, 1);\n    }\n\n    if (layerHosts.length === 0) {\n      delete _layerHostsById[hostId];\n    }\n  }\n}\n\n/**\n * When no default layer host is provided, this function is executed to create the default host.\n */\nexport function createDefaultLayerHost(doc: Document): Node | null {\n  const host = doc.createElement('div');\n  host.setAttribute('id', defaultHostId);\n  (host as HTMLElement).style.cssText = 'position:fixed;z-index:1000000';\n\n  doc?.body.appendChild(host);\n\n  return host;\n}\n\n/**\n * This function can be optionally called to clean up the default layer host as needed.\n */\nexport function cleanupDefaultLayerHost(doc: Document) {\n  const host = doc.querySelector(`#${defaultHostId}`);\n\n  if (host) {\n    doc.removeChild(host);\n  }\n}\n\n/**\n * Used for notifying applicable Layers that a host is available/unavailable and to re-evaluate Layers that\n * care about the specific host.\n */\nexport function notifyHostChanged(id: string) {\n  if (_layersByHostId[id]) {\n    _layersByHostId[id].forEach(callback => callback());\n  }\n}\n\n/**\n * Sets the default target selector to use when determining the host in which\n * Layered content will be injected into. If not provided, an element will be\n * created at the end of the document body.\n *\n * Passing in a falsy value will clear the default target and reset back to\n * using a created element at the end of document body.\n */\nexport function setDefaultTarget(selector?: string) {\n  _defaultHostSelector = selector;\n}\n\n/**\n * Get the default target selector when determining a host\n */\nexport function getDefaultTarget(): string | undefined {\n  return _defaultHostSelector;\n}\n", "import { ZIndexes, getGlobalClassNames } from '../../Styling';\nimport type { ILayerStyleProps, ILayerStyles } from './Layer.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Layer',\n  rootNoHost: 'ms-Layer--fixed',\n  content: 'ms-Layer-content',\n};\n\nexport const getStyles = (props: ILayerStyleProps): ILayerStyles => {\n  const { className, isNotHost, theme } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isNotHost && [\n        classNames.rootNoHost,\n        {\n          position: 'fixed',\n          zIndex: ZIndexes.Layer,\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          visibility: 'hidden',\n        },\n      ],\n      className,\n    ],\n    content: [\n      classNames.content,\n      {\n        visibility: 'visible',\n      },\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { LayerBase } from './Layer.base';\nimport { getStyles } from './Layer.styles';\nimport type { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\n\nexport const Layer: React.FunctionComponent<ILayerProps> = styled<ILayerProps, ILayerStyleProps, ILayerStyles>(\n  LayerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Layer',\n    fields: ['hostId', 'theme', 'styles'],\n  },\n);\n", "import * as React from 'react';\nimport { useUnmount } from '@fluentui/react-hooks';\nimport { css, getId } from '../../Utilities';\nimport { notifyHostChanged, registerLayerHost, unregisterLayerHost } from './Layer.notification';\nimport type { ILayerHost, ILayerHostProps } from './LayerHost.types';\n\nexport const LayerHost: React.FunctionComponent<ILayerHostProps> = props => {\n  const { className } = props;\n\n  const [layerHostId] = React.useState(() => getId());\n\n  const { id: hostId = layerHostId } = props;\n\n  const layerHostRef = React.useRef<ILayerHost>({\n    hostId,\n    rootRef: React.useRef<HTMLDivElement | null>(null),\n    notifyLayersChanged: () => {\n      // Nothing, since the default implementation of Layer Host does not need to react to layer changes.\n    },\n  });\n\n  React.useImperativeHandle(props.componentRef, () => layerHostRef.current);\n\n  React.useEffect(() => {\n    registerLayerHost(hostId, layerHostRef.current);\n    notifyHostChanged(hostId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n\n  useUnmount(() => {\n    unregisterLayerHost(hostId, layerHostRef.current);\n    notifyHostChanged(hostId);\n  });\n\n  return <div {...props} className={css('ms-LayerHost', className)} ref={layerHostRef.current.rootRef} />;\n};\n", "import * as React from 'react';\n\nimport { Callout } from './Callout';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nimport type { IFocusTrapCalloutProps } from './FocusTrapCallout.types';\n\n/**\n * A special Callout that uses FocusTrapZone to trap focus\n * @param props - Props for the component\n */\nexport const FocusTrapCallout: React.FunctionComponent<IFocusTrapCalloutProps> = (\n  props: IFocusTrapCalloutProps,\n): JSX.Element => {\n  return (\n    <Callout {...props}>\n      <FocusTrapZone disabled={props.hidden} {...props.focusTrapProps}>\n        {props.children}\n      </FocusTrapZone>\n    </Callout>\n  );\n};\n", "import * as React from 'react';\nimport {\n  elementContains,\n  getNativeProps,\n  divProperties,\n  getFirstTabbable,\n  getLastTabbable,\n  getNextElement,\n  focusAsync,\n  getPropsWithDefaults,\n  modalize,\n  on,\n} from '../../Utilities';\nimport { useId, useConst, useMergedRefs, useEventCallback, usePrevious, useUnmount } from '@fluentui/react-hooks';\nimport { useDocument } from '../../WindowProvider';\nimport type { IRefObject } from '../../Utilities';\nimport type { IFocusTrapZoneProps, IFocusTrapZone } from './FocusTrapZone.types';\n\ninterface IFocusTrapZoneInternalState {\n  previouslyFocusedElementInTrapZone?: HTMLElement;\n  hasFocus: boolean;\n  /** ID tracked in focusStack. Don't respect prop updates in case the ID changes while the FTZ is active. */\n  focusStackId: string;\n}\n\nconst COMPONENT_NAME = 'FocusTrapZone';\n\nconst DEFAULT_PROPS = {\n  disabled: false,\n  disableFirstFocus: false,\n  forceFocusInsideTrap: true,\n  isClickableOutsideFocusTrap: false,\n};\n\nconst useComponentRef = (\n  componentRef: IRefObject<IFocusTrapZone> | undefined,\n  previouslyFocusedElement: HTMLElement | undefined,\n  focusFTZ: () => void,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      get previouslyFocusedElement() {\n        return previouslyFocusedElement;\n      },\n      focus: focusFTZ,\n    }),\n    [focusFTZ, previouslyFocusedElement],\n  );\n};\n\nexport const FocusTrapZone: React.FunctionComponent<IFocusTrapZoneProps> & {\n  /**\n   * Stack of active FocusTrapZone identifiers, exposed for testing purposes only.\n   * (This is always set, just marked as optional to avoid a cast in the component definition.)\n   * @internal\n   */\n  focusStack?: string[];\n} = React.forwardRef<HTMLDivElement, IFocusTrapZoneProps>((propsWithoutDefaults, ref) => {\n  const root = React.useRef<HTMLDivElement>(null);\n  const firstBumper = React.useRef<HTMLDivElement>(null);\n  const lastBumper = React.useRef<HTMLDivElement>(null);\n  const mergedRootRef = useMergedRefs(root, ref) as React.Ref<HTMLDivElement>;\n  const doc = useDocument();\n\n  const isFirstRender = usePrevious(false) ?? true;\n\n  const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n  const internalState = useConst<IFocusTrapZoneInternalState>({\n    hasFocus: false,\n    focusStackId: useId('ftz-', props.id),\n  });\n\n  const {\n    children,\n    componentRef,\n    disabled,\n    disableFirstFocus,\n    forceFocusInsideTrap,\n    focusPreviouslyFocusedInnerElement,\n    // eslint-disable-next-line deprecation/deprecation\n    firstFocusableSelector,\n    firstFocusableTarget,\n    // eslint-disable-next-line deprecation/deprecation\n    disableRestoreFocus = props.ignoreExternalFocusing,\n    isClickableOutsideFocusTrap,\n    enableAriaHiddenSiblings,\n  } = props;\n\n  const bumperProps = {\n    'aria-hidden': true,\n    style: {\n      pointerEvents: 'none',\n      position: 'fixed', // 'fixed' prevents browsers from scrolling to bumpers when viewport does not contain them\n    },\n    tabIndex: disabled ? -1 : 0, // make bumpers tabbable only when enabled\n    'data-is-visible': true,\n    'data-is-focus-trap-zone-bumper': true,\n  } as React.HTMLAttributes<HTMLDivElement>;\n\n  const focusElementAsync = React.useCallback((element: HTMLElement) => {\n    if (element !== firstBumper.current && element !== lastBumper.current) {\n      focusAsync(element);\n    }\n  }, []);\n\n  /**\n   * Callback to force focus into FTZ (named to avoid overlap with global focus() callback).\n   * useEventCallback always returns the same callback reference but updates the implementation\n   * every render to avoid stale captured values.\n   */\n  const focusFTZ = useEventCallback(() => {\n    if (!root.current) {\n      return; // not done mounting\n    }\n\n    const { previouslyFocusedElementInTrapZone } = internalState;\n    if (\n      focusPreviouslyFocusedInnerElement &&\n      previouslyFocusedElementInTrapZone &&\n      elementContains(root.current, previouslyFocusedElementInTrapZone)\n    ) {\n      // focus on the last item that had focus in the zone before we left the zone\n      focusElementAsync(previouslyFocusedElementInTrapZone);\n      return;\n    }\n\n    let firstFocusableChild: HTMLElement | null = null;\n\n    if (typeof firstFocusableTarget === 'string') {\n      firstFocusableChild = root.current.querySelector(firstFocusableTarget);\n    } else if (firstFocusableTarget) {\n      firstFocusableChild = firstFocusableTarget(root.current);\n    } else if (firstFocusableSelector) {\n      const focusSelector =\n        typeof firstFocusableSelector === 'string' ? firstFocusableSelector : firstFocusableSelector();\n      firstFocusableChild = root.current.querySelector('.' + focusSelector);\n    }\n\n    // Fall back to first element if query selector did not match any elements.\n    if (!firstFocusableChild) {\n      firstFocusableChild = getNextElement(\n        root.current,\n        root.current.firstChild as HTMLElement,\n        false,\n        false,\n        false,\n        true,\n      );\n    }\n\n    if (firstFocusableChild) {\n      focusElementAsync(firstFocusableChild);\n    }\n  });\n\n  /** Used in root div focus/blur handlers */\n  const focusBumper = (isFirstBumper: boolean) => {\n    if (disabled || !root.current) {\n      return;\n    }\n\n    const nextFocusable =\n      isFirstBumper === internalState.hasFocus\n        ? getLastTabbable(root.current, lastBumper.current!, true, false)\n        : getFirstTabbable(root.current, firstBumper.current!, true, false);\n\n    if (nextFocusable) {\n      if (nextFocusable === firstBumper.current || nextFocusable === lastBumper.current) {\n        // This can happen when FTZ contains no tabbable elements.\n        // focusFTZ() will take care of finding a focusable element in FTZ.\n        focusFTZ();\n      } else {\n        nextFocusable.focus();\n      }\n    }\n  };\n\n  /** Root div blur handler (doesn't need useCallback since it's for a native element) */\n  const onRootBlurCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    props.onBlurCapture?.(ev);\n    let relatedTarget = ev.relatedTarget;\n    if (ev.relatedTarget === null) {\n      // In IE11, due to lack of support, event.relatedTarget is always\n      // null making every onBlur call to be \"outside\" of the root\n      // even when it's not. Using document.activeElement is another way\n      // for us to be able to get what the relatedTarget without relying\n      // on the event\n      relatedTarget = doc!.activeElement as Element;\n    }\n    if (!elementContains(root.current, relatedTarget as HTMLElement)) {\n      internalState.hasFocus = false;\n    }\n  };\n\n  /** Root div focus handler (doesn't need useCallback since it's for a native element) */\n  const onRootFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    props.onFocusCapture?.(ev);\n\n    if (ev.target === firstBumper.current) {\n      focusBumper(true);\n    } else if (ev.target === lastBumper.current) {\n      focusBumper(false);\n    }\n\n    internalState.hasFocus = true;\n\n    if (ev.target !== ev.currentTarget && !(ev.target === firstBumper.current || ev.target === lastBumper.current)) {\n      // every time focus changes within the trap zone, remember the focused element so that\n      // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\n      internalState.previouslyFocusedElementInTrapZone = ev.target as HTMLElement;\n    }\n  };\n\n  /** Called to restore focus on unmount or props change. (useEventCallback ensures latest prop values are used.) */\n  const returnFocusToInitiator = useEventCallback((elementToFocusOnDismiss: HTMLElement | null) => {\n    FocusTrapZone.focusStack = FocusTrapZone.focusStack!.filter(value => internalState.focusStackId !== value);\n\n    if (!doc) {\n      return;\n    }\n\n    const activeElement = doc.activeElement as HTMLElement;\n    if (\n      !disableRestoreFocus &&\n      typeof elementToFocusOnDismiss?.focus === 'function' &&\n      // only restore focus if the current focused element is within the FTZ, or if nothing is focused\n      (elementContains(root.current, activeElement) || activeElement === doc.body)\n    ) {\n      focusElementAsync(elementToFocusOnDismiss);\n    }\n  });\n\n  /** Called in window event handlers. (useEventCallback ensures latest prop values are used.) */\n  const forceFocusOrClickInTrap = useEventCallback((ev: FocusEvent | MouseEvent): void => {\n    // be sure to use the latest values here\n    if (disabled) {\n      return;\n    }\n    if (internalState.focusStackId === FocusTrapZone.focusStack!.slice(-1)[0]) {\n      const targetElement = ev.target as HTMLElement | null;\n      if (targetElement && !elementContains(root.current, targetElement)) {\n        if (doc && doc.activeElement === doc.body) {\n          setTimeout(() => {\n            if (doc && doc.activeElement === doc.body) {\n              focusFTZ();\n              internalState.hasFocus = true; // set focus here since we stop event propagation\n            }\n          }, 0);\n        } else {\n          focusFTZ();\n          internalState.hasFocus = true; // set focus here since we stop event propagation\n        }\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  });\n\n  // Update window event handlers when relevant props change\n  React.useEffect(() => {\n    const disposables: Array<() => void> = [];\n\n    if (forceFocusInsideTrap) {\n      disposables.push(on(window, 'focus', forceFocusOrClickInTrap, true));\n    }\n    if (!isClickableOutsideFocusTrap) {\n      disposables.push(on(window, 'click', forceFocusOrClickInTrap, true));\n    }\n\n    return () => {\n      disposables.forEach(dispose => dispose());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when these two props change\n  }, [forceFocusInsideTrap, isClickableOutsideFocusTrap]);\n\n  // On prop change or first render, focus the FTZ and update focusStack if appropriate\n  React.useEffect(() => {\n    // Do nothing if disabled, or if it's a re-render and forceFocusInsideTrap is false\n    // (to match existing behavior, the FTZ handles first focus even if forceFocusInsideTrap\n    // is false, though it's debatable whether it should do this)\n    if (disabled || (!isFirstRender && !forceFocusInsideTrap) || !root.current) {\n      return;\n    }\n\n    // Transition from forceFocusInsideTrap / FTZ disabled to enabled (or initial mount)\n    FocusTrapZone.focusStack!.push(internalState.focusStackId);\n\n    const elementToFocusOnDismiss = props.elementToFocusOnDismiss || (doc!.activeElement as HTMLElement | null);\n\n    if (!disableFirstFocus && !elementContains(root.current, elementToFocusOnDismiss)) {\n      focusFTZ();\n    }\n\n    // To match existing behavior, always return focus on cleanup (even if we didn't handle\n    // initial focus), but it's debatable whether that's correct\n    return () => returnFocusToInitiator(elementToFocusOnDismiss);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when these two props change\n  }, [forceFocusInsideTrap, disabled]);\n\n  // Handle modalization separately from first focus\n  React.useEffect(() => {\n    if (!disabled && enableAriaHiddenSiblings) {\n      const unmodalize = modalize(root.current!);\n      return unmodalize;\n    }\n  }, [disabled, enableAriaHiddenSiblings, root]);\n\n  // Cleanup lifecyle method for internalState.\n  useUnmount(() => {\n    // Dispose of element references so the DOM Nodes can be garbage-collected\n    delete internalState.previouslyFocusedElementInTrapZone;\n  });\n\n  useComponentRef(componentRef, internalState.previouslyFocusedElementInTrapZone, focusFTZ);\n\n  return (\n    <div\n      // this is above the native props spread so props['aria-labelledby'] will override it if provided\n      aria-labelledby={props.ariaLabelledBy}\n      // native props include onFocus, onBlur, className\n      {...getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties)}\n      ref={mergedRootRef}\n      onFocusCapture={onRootFocusCapture}\n      onBlurCapture={onRootBlurCapture}\n    >\n      <div {...bumperProps} ref={firstBumper} />\n      {children}\n      <div {...bumperProps} ref={lastBumper} />\n    </div>\n  );\n});\n\nFocusTrapZone.displayName = COMPONENT_NAME;\nFocusTrapZone.focusStack = [];\n", "import * as React from 'react';\nimport {\n  anchorProperties,\n  assign,\n  buttonProperties,\n  createMergedRef,\n  css,\n  getId,\n  getNativeProps,\n  initializeComponentRef,\n  memoizeFunction,\n  mergeAriaAttributeValues,\n  nullRender,\n  portalContainsElement,\n  setFocusVisibility,\n  warnConditionallyRequiredProps,\n  warnDeprecations,\n  Async,\n  EventGroup,\n  FocusRects,\n  FocusRectsContext,\n  KeyCodes,\n} from '../../Utilities';\nimport { Icon, FontIcon, ImageIcon } from '../../Icon';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { ContextualMenu } from '../../ContextualMenu';\nimport { getBaseButtonClassNames } from './BaseButton.classNames';\nimport { getSplitButtonClassNames as getBaseSplitButtonClassNames } from './SplitButton/SplitButton.classNames';\nimport { KeytipData } from '../../KeytipData';\nimport type { IFocusRectsContext, IRenderFunction } from '../../Utilities';\nimport type { IContextualMenuProps } from '../../ContextualMenu';\nimport type { IButtonProps, IButton } from './Button.types';\nimport type { IButtonClassNames } from './BaseButton.classNames';\nimport type { ISplitButtonClassNames } from './SplitButton/SplitButton.classNames';\nimport type { IKeytipProps } from '../../Keytip';\nimport { composeComponentAs } from '../../Utilities';\n\n/**\n * {@docCategory Button}\n */\nexport interface IBaseButtonProps extends IButtonProps {\n  baseClassName?: string;\n  variantClassName?: string;\n}\n\n/**\n * {@docCategory Button}\n */\nexport interface IBaseButtonState {\n  menuHidden: boolean;\n}\n\nconst TouchIdleDelay = 500; /* ms */\nconst COMPONENT_NAME = 'BaseButton';\n\n/**\n * {@docCategory Button}\n */\nexport class BaseButton extends React.Component<IBaseButtonProps, IBaseButtonState> implements IButton {\n  private get _isSplitButton(): boolean {\n    return !!this.props.menuProps && !!this.props.onClick && this.props.split === true;\n  }\n\n  public static defaultProps: Partial<IBaseButtonProps> = {\n    baseClassName: 'ms-Button',\n    styles: {},\n    split: false,\n  };\n\n  // needed to access registeredProviders when manually setting focus visibility\n  public static contextType = FocusRectsContext;\n  public context: IFocusRectsContext;\n\n  private _async: Async;\n  private _events: EventGroup;\n  private _buttonElement = React.createRef<HTMLElement>();\n  private _splitButtonContainer = React.createRef<HTMLDivElement>();\n  private _mergedRef = createMergedRef<HTMLElement>();\n  private _labelId: string;\n  private _descriptionId: string;\n  private _ariaDescriptionId: string;\n  private _classNames: IButtonClassNames;\n  private _processingTouch: boolean;\n  private _lastTouchTimeoutId: number | undefined;\n  private _renderedVisibleMenu: boolean = false;\n\n  // These fields will be used to set corresponding props on the menu.\n  private _menuShouldFocusOnContainer: boolean | undefined;\n  private _menuShouldFocusOnMount: boolean | undefined;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  constructor(props: IBaseButtonProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n\n    warnConditionallyRequiredProps(COMPONENT_NAME, props, ['menuProps', 'onClick'], 'split', this.props.split!);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      rootProps: undefined,\n      description: 'secondaryText',\n      toggled: 'checked',\n    });\n    this._labelId = getId();\n    this._descriptionId = getId();\n    this._ariaDescriptionId = getId();\n\n    this.state = {\n      menuHidden: true,\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaDescription,\n      ariaLabel,\n      ariaHidden,\n      className,\n      disabled,\n      allowDisabledFocus,\n      primaryDisabled,\n      // eslint-disable-next-line deprecation/deprecation\n      secondaryText = this.props.description,\n      href,\n      iconProps,\n      menuIconProps,\n      styles,\n      checked,\n      variantClassName,\n      theme,\n      toggle,\n      getClassNames,\n      role,\n    } = this.props;\n\n    const { menuHidden } = this.state;\n\n    // Button is disabled if the whole button (in case of splitButton is disabled) or if the primary action is disabled\n    const isPrimaryButtonDisabled = disabled || primaryDisabled;\n\n    this._classNames = getClassNames\n      ? getClassNames(\n          theme!,\n          className!,\n          variantClassName!,\n          iconProps && iconProps.className,\n          menuIconProps && menuIconProps.className,\n          isPrimaryButtonDisabled!,\n          checked!,\n          !menuHidden,\n          !!this.props.menuProps,\n          this.props.split,\n          !!allowDisabledFocus,\n        )\n      : getBaseButtonClassNames(\n          theme!,\n          styles!,\n          className!,\n          variantClassName!,\n          iconProps && iconProps.className,\n          menuIconProps && menuIconProps.className,\n          isPrimaryButtonDisabled!,\n          !!this.props.menuProps,\n          checked!,\n          !menuHidden,\n          this.props.split,\n        );\n\n    const { _ariaDescriptionId, _labelId, _descriptionId } = this;\n    // Anchor tag cannot be disabled hence in disabled state rendering\n    // anchor button as normal button\n    const renderAsAnchor: boolean = !isPrimaryButtonDisabled && !!href;\n    const tag = renderAsAnchor ? 'a' : 'button';\n\n    const nativeProps = getNativeProps(\n      // eslint-disable-next-line deprecation/deprecation\n      assign(renderAsAnchor ? {} : { type: 'button' }, this.props.rootProps, this.props),\n      renderAsAnchor ? anchorProperties : buttonProperties,\n      [\n        'disabled', // let disabled buttons be focused and styled as disabled.\n      ],\n    );\n\n    // Check for ariaLabel passed in via Button props, and fall back to aria-label passed in via native props\n    const resolvedAriaLabel = ariaLabel || (nativeProps as any)['aria-label'];\n\n    // Check for ariaDescription, secondaryText or aria-describedby in the native props to determine source of\n    // aria-describedby. Otherwise default to undefined so property does not appear in output.\n    let ariaDescribedBy = undefined;\n    if (ariaDescription) {\n      ariaDescribedBy = _ariaDescriptionId;\n    } else if (secondaryText && this.props.onRenderDescription !== nullRender) {\n      // for buttons like CompoundButton with a valid onRenderDescription, we need to set an ariaDescribedBy\n      // for buttons that do not render anything (via nullRender), we should not set an ariaDescribedBy\n      ariaDescribedBy = _descriptionId;\n    } else if ((nativeProps as any)['aria-describedby']) {\n      ariaDescribedBy = (nativeProps as any)['aria-describedby'];\n    }\n\n    // If an explicit aria-labelledby is given, use that and we're done.\n    // If any kind of description is given (which will end up as an aria-describedby attribute)\n    // and no ariaLabel is specified, set the labelledby element.\n    // Otherwise, the button is labeled implicitly by the descendent text on the button (if it exists).\n    let ariaLabelledBy = undefined;\n    if ((nativeProps as any)['aria-labelledby']) {\n      ariaLabelledBy = (nativeProps as any)['aria-labelledby'];\n    } else if (ariaDescribedBy && !resolvedAriaLabel) {\n      ariaLabelledBy = this._hasText() ? _labelId : undefined;\n    }\n\n    const dataIsFocusable =\n      (this.props as any)['data-is-focusable'] === false || (disabled && !allowDisabledFocus) || this._isSplitButton\n        ? false\n        : true;\n\n    const isCheckboxTypeRole = role === 'menuitemcheckbox' || role === 'checkbox';\n    // if isCheckboxTypeRole, always return a checked value.\n    // Otherwise only return checked value if toggle is set to true.\n    // This is because role=\"checkbox\" always needs to have an aria-checked value\n    // but our checked prop only sets aria-pressed if we mark the button as a toggle=\"true\"\n    const checkedOrPressedValue = isCheckboxTypeRole ? !!checked : toggle === true ? !!checked : undefined;\n\n    const buttonProps = assign(nativeProps, {\n      className: this._classNames.root,\n      // eslint-disable-next-line deprecation/deprecation\n      ref: this._mergedRef(this.props.elementRef, this._buttonElement),\n      disabled: isPrimaryButtonDisabled && !allowDisabledFocus,\n      onKeyDown: this._onKeyDown,\n      onKeyPress: this._onKeyPress,\n      onKeyUp: this._onKeyUp,\n      onMouseDown: this._onMouseDown,\n      onMouseUp: this._onMouseUp,\n      onClick: this._onClick,\n      'aria-label': resolvedAriaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      'aria-disabled': isPrimaryButtonDisabled,\n      'data-is-focusable': dataIsFocusable,\n      // aria-pressed attribute should only be present for toggle buttons\n      // aria-checked attribute should only be present for toggle buttons with checkbox type role\n      [isCheckboxTypeRole ? 'aria-checked' : 'aria-pressed']: checkedOrPressedValue,\n    });\n\n    if (ariaHidden) {\n      buttonProps['aria-hidden'] = true;\n    }\n\n    if (this._isSplitButton) {\n      return this._onRenderSplitButtonContent(tag, buttonProps);\n    } else if (this.props.menuProps) {\n      const { id = `${this._labelId}-menu` } = this.props.menuProps;\n      assign(buttonProps, {\n        'aria-expanded': !menuHidden,\n        'aria-controls': !menuHidden ? id : null,\n        'aria-haspopup': true,\n      });\n    }\n\n    return this._onRenderContent(tag, buttonProps);\n  }\n\n  public componentDidMount() {\n    // For split buttons, touching anywhere in the button should drop the dropdown, which should contain the\n    // primary action. This gives more hit target space for touch environments. We're setting the onpointerdown here,\n    // because React does not support Pointer events yet.\n    if (this._isSplitButton && this._splitButtonContainer.current) {\n      if ('onpointerdown' in this._splitButtonContainer.current) {\n        this._events.on(this._splitButtonContainer.current, 'pointerdown', this._onPointerDown, true);\n      }\n      if ('onpointerup' in this._splitButtonContainer.current && this.props.onPointerUp) {\n        this._events.on(this._splitButtonContainer.current, 'pointerup', this.props.onPointerUp, true);\n      }\n    }\n  }\n\n  public componentDidUpdate(prevProps: IBaseButtonProps, prevState: IBaseButtonState) {\n    // If Button's menu was closed, run onAfterMenuDismiss.\n    if (this.props.onAfterMenuDismiss && !prevState.menuHidden && this.state.menuHidden) {\n      this.props.onAfterMenuDismiss();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public focus(): void {\n    if (this._isSplitButton && this._splitButtonContainer.current) {\n      setFocusVisibility(true, undefined, this.context?.registeredProviders);\n      this._splitButtonContainer.current.focus();\n    } else if (this._buttonElement.current) {\n      setFocusVisibility(true, undefined, this.context?.registeredProviders);\n      this._buttonElement.current.focus();\n    }\n  }\n\n  public dismissMenu(): void {\n    this._dismissMenu();\n  }\n\n  public openMenu(shouldFocusOnContainer?: boolean, shouldFocusOnMount?: boolean): void {\n    this._openMenu(shouldFocusOnContainer, shouldFocusOnMount);\n  }\n\n  private _onRenderContent(tag: any, buttonProps: IButtonProps): JSX.Element {\n    const props = this.props;\n    const Tag = tag;\n    const {\n      menuIconProps,\n      menuProps,\n      onRenderIcon = this._onRenderIcon,\n      onRenderAriaDescription = this._onRenderAriaDescription,\n      onRenderChildren = this._onRenderChildren,\n      // eslint-disable-next-line deprecation/deprecation\n      onRenderMenu = this._onRenderMenu,\n      onRenderMenuIcon = this._onRenderMenuIcon,\n      disabled,\n    } = props;\n    let { keytipProps } = props;\n    if (keytipProps && menuProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    const Button = (keytipAttributes?: any): JSX.Element => (\n      <Tag {...buttonProps} {...keytipAttributes}>\n        <span className={this._classNames.flexContainer} data-automationid=\"splitbuttonprimary\">\n          {onRenderIcon(props, this._onRenderIcon)}\n          {this._onRenderTextContents()}\n          {onRenderAriaDescription(props, this._onRenderAriaDescription)}\n          {onRenderChildren(props, this._onRenderChildren)}\n          {!this._isSplitButton &&\n            (menuProps || menuIconProps || this.props.onRenderMenuIcon) &&\n            onRenderMenuIcon(this.props, this._onRenderMenuIcon)}\n          {menuProps &&\n            !menuProps.doNotLayer &&\n            this._shouldRenderMenu() &&\n            onRenderMenu(this._getMenuProps(menuProps), this._onRenderMenu)}\n        </span>\n      </Tag>\n    );\n\n    const Content = keytipProps ? (\n      // If we're making a split button, we won't put the keytip here\n      <KeytipData\n        keytipProps={!this._isSplitButton ? keytipProps : undefined}\n        ariaDescribedBy={(buttonProps as any)['aria-describedby']}\n        disabled={disabled}\n      >\n        {(keytipAttributes: any): JSX.Element => Button(keytipAttributes)}\n      </KeytipData>\n    ) : (\n      Button()\n    );\n\n    if (menuProps && menuProps.doNotLayer) {\n      return (\n        <>\n          {Content}\n          {this._shouldRenderMenu() && onRenderMenu(this._getMenuProps(menuProps), this._onRenderMenu)}\n        </>\n      );\n    }\n\n    return (\n      <>\n        {Content}\n        <FocusRects />\n      </>\n    );\n  }\n\n  /**\n   * Method to help determine if the menu's component tree should\n   * be rendered. It takes into account whether the menu is expanded,\n   * whether it is a persisted menu and whether it has been shown to the user.\n   */\n  private _shouldRenderMenu() {\n    const { menuHidden } = this.state;\n    // eslint-disable-next-line deprecation/deprecation\n    const { persistMenu, renderPersistedMenuHiddenOnMount } = this.props;\n\n    if (!menuHidden) {\n      // Always should render a menu when it is expanded\n      return true;\n    } else if (persistMenu && (this._renderedVisibleMenu || renderPersistedMenuHiddenOnMount)) {\n      // _renderedVisibleMenu ensures that the first rendering of\n      // the menu happens on-screen, as edge's scrollbar calculations are off if done while hidden.\n      return true;\n    }\n\n    return false;\n  }\n\n  private _onRenderIcon = (\n    buttonProps?: IButtonProps,\n    defaultRender?: IRenderFunction<IButtonProps>,\n  ): JSX.Element | null => {\n    const { iconProps } = this.props;\n\n    if (iconProps && (iconProps.iconName !== undefined || iconProps.imageProps)) {\n      const { className, imageProps, ...rest } = iconProps;\n\n      // If the styles prop is specified as part of iconProps, fall back to regular Icon as FontIcon and ImageIcon\n      // do not have this prop.\n      if (iconProps.styles) {\n        return <Icon className={css(this._classNames.icon, className)} imageProps={imageProps} {...rest} />;\n      }\n      if (iconProps.iconName) {\n        return <FontIcon className={css(this._classNames.icon, className)} {...rest} />;\n      }\n      if (imageProps) {\n        return <ImageIcon className={css(this._classNames.icon, className)} imageProps={imageProps} {...rest} />;\n      }\n    }\n    return null;\n  };\n\n  private _onRenderTextContents = (): JSX.Element | (JSX.Element | null)[] => {\n    const {\n      text,\n      children,\n      // eslint-disable-next-line deprecation/deprecation\n      secondaryText = this.props.description,\n      onRenderText = this._onRenderText,\n      onRenderDescription = this._onRenderDescription,\n    } = this.props;\n\n    if (text || typeof children === 'string' || secondaryText) {\n      return (\n        <span className={this._classNames.textContainer}>\n          {onRenderText(this.props, this._onRenderText)}\n          {onRenderDescription(this.props, this._onRenderDescription)}\n        </span>\n      );\n    }\n    return [onRenderText(this.props, this._onRenderText), onRenderDescription(this.props, this._onRenderDescription)];\n  };\n\n  private _onRenderText = (): JSX.Element | null => {\n    let { text } = this.props;\n    const { children } = this.props;\n\n    // For backwards compat, we should continue to take in the text content from children.\n    if (text === undefined && typeof children === 'string') {\n      text = children;\n    }\n\n    if (this._hasText()) {\n      return (\n        <span key={this._labelId} className={this._classNames.label} id={this._labelId}>\n          {text}\n        </span>\n      );\n    }\n\n    return null;\n  };\n\n  private _hasText(): boolean {\n    // _onRenderTextContents and _onRenderText do not perform the same checks. Below is parity with what _onRenderText\n    // used to have before the refactor that introduced this function. _onRenderTextContents does not require props.\n    // text to be undefined in order for props.children to be used as a fallback.\n    // Purely a code maintainability/reuse issue, but logged as Issue #4979.\n    return this.props.text !== null && (this.props.text !== undefined || typeof this.props.children === 'string');\n  }\n\n  private _onRenderChildren = (): JSX.Element | null => {\n    const { children } = this.props;\n\n    // If children is just a string, either it or the text will be rendered via onRenderLabel\n    // If children is another component, it will be rendered after text\n    if (typeof children === 'string') {\n      return null;\n    }\n\n    return children as any;\n  };\n\n  private _onRenderDescription = (props: IButtonProps) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { secondaryText = this.props.description } = props;\n\n    // ms-Button-description is only shown when the button type is compound.\n    // In other cases it will not be displayed.\n    return secondaryText ? (\n      <span key={this._descriptionId} className={this._classNames.description} id={this._descriptionId}>\n        {secondaryText}\n      </span>\n    ) : null;\n  };\n\n  private _onRenderAriaDescription = () => {\n    const { ariaDescription } = this.props;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return ariaDescription ? (\n      <span className={this._classNames.screenReaderText} id={this._ariaDescriptionId}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n\n  private _onRenderMenuIcon = (props: IButtonProps): JSX.Element | null => {\n    const { menuIconProps } = this.props;\n\n    return <FontIcon iconName=\"ChevronDown\" {...menuIconProps} className={this._classNames.menuIcon} />;\n  };\n\n  private _getMenuProps(menuProps: IContextualMenuProps): IContextualMenuProps {\n    const { persistMenu } = this.props;\n    const { menuHidden } = this.state;\n\n    // the accessible menu label (accessible name) has a relationship to the button.\n    // If the menu props do not specify an explicit value for aria-label or aria-labelledBy,\n    // AND the button has text, we'll set the menu aria-labelledBy to the text element id.\n    if (!menuProps.ariaLabel && !menuProps.labelElementId && this._hasText()) {\n      menuProps = { ...menuProps, labelElementId: this._labelId };\n    }\n\n    return {\n      id: this._labelId + '-menu',\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      ...menuProps,\n      shouldFocusOnContainer: this._menuShouldFocusOnContainer,\n      shouldFocusOnMount: this._menuShouldFocusOnMount,\n      hidden: persistMenu ? menuHidden : undefined,\n      className: css('ms-BaseButton-menuhost', menuProps.className),\n      target: this._isSplitButton ? this._splitButtonContainer.current : this._buttonElement.current,\n      onDismiss: this._onDismissMenu,\n    };\n  }\n\n  private _onRenderMenu = (menuProps: IContextualMenuProps): JSX.Element => {\n    const MenuType = this.props.menuAs ? composeComponentAs(this.props.menuAs, ContextualMenu) : ContextualMenu;\n\n    return <MenuType {...menuProps} />;\n  };\n\n  private _onDismissMenu: IContextualMenuProps['onDismiss'] = ev => {\n    const { menuProps } = this.props;\n\n    if (menuProps && menuProps.onDismiss) {\n      menuProps.onDismiss(ev);\n    }\n    if (!ev || !ev.defaultPrevented) {\n      this._dismissMenu();\n    }\n  };\n\n  private _dismissMenu = (): void => {\n    this._menuShouldFocusOnMount = undefined;\n    this._menuShouldFocusOnContainer = undefined;\n    this.setState({ menuHidden: true });\n  };\n\n  private _openMenu = (shouldFocusOnContainer?: boolean, shouldFocusOnMount: boolean = true): void => {\n    if (this.props.menuProps) {\n      this._menuShouldFocusOnContainer = shouldFocusOnContainer;\n      this._menuShouldFocusOnMount = shouldFocusOnMount;\n      this._renderedVisibleMenu = true;\n      this.setState({ menuHidden: false });\n    }\n  };\n\n  private _onToggleMenu = (shouldFocusOnContainer: boolean): void => {\n    let shouldFocusOnMount = true;\n    if (this.props.menuProps && this.props.menuProps.shouldFocusOnMount === false) {\n      shouldFocusOnMount = false;\n    }\n\n    this.state.menuHidden ? this._openMenu(shouldFocusOnContainer, shouldFocusOnMount) : this._dismissMenu();\n  };\n\n  private _onRenderSplitButtonContent(tag: any, buttonProps: IButtonProps): JSX.Element {\n    const {\n      styles = {},\n      disabled,\n      allowDisabledFocus,\n      checked,\n      getSplitButtonClassNames,\n      primaryDisabled,\n      menuProps,\n      toggle,\n      role,\n      primaryActionButtonProps,\n    } = this.props;\n    let { keytipProps } = this.props;\n    const { menuHidden } = this.state;\n\n    const classNames = getSplitButtonClassNames\n      ? getSplitButtonClassNames(!!disabled, !menuHidden, !!checked, !!allowDisabledFocus)\n      : styles && getBaseSplitButtonClassNames(styles!, !!disabled, !menuHidden, !!checked, !!primaryDisabled);\n\n    assign(buttonProps, {\n      onClick: undefined,\n      onPointerDown: undefined,\n      onPointerUp: undefined,\n      tabIndex: -1,\n      'data-is-focusable': false,\n    });\n\n    if (keytipProps && menuProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    const containerProps = getNativeProps<React.HTMLAttributes<HTMLSpanElement>>(buttonProps, [], ['disabled']);\n\n    // Add additional props to apply on primary action button\n    if (primaryActionButtonProps) {\n      assign(buttonProps, primaryActionButtonProps);\n    }\n\n    const SplitButton = (keytipAttributes?: any): JSX.Element => (\n      <div\n        {...containerProps}\n        data-ktp-target={keytipAttributes ? keytipAttributes['data-ktp-target'] : undefined}\n        role={role ? role : 'button'}\n        aria-disabled={disabled}\n        aria-haspopup={true}\n        aria-expanded={!menuHidden}\n        aria-pressed={toggle ? !!checked : undefined} // should only be present for toggle buttons\n        aria-describedby={mergeAriaAttributeValues(\n          buttonProps['aria-describedby'],\n          keytipAttributes ? keytipAttributes['aria-describedby'] : undefined,\n        )}\n        className={classNames && classNames.splitButtonContainer}\n        onKeyDown={this._onSplitButtonContainerKeyDown}\n        onTouchStart={this._onTouchStart}\n        ref={this._splitButtonContainer}\n        data-is-focusable={true}\n        onClick={!disabled && !primaryDisabled ? this._onSplitButtonPrimaryClick : undefined}\n        tabIndex={(!disabled && !primaryDisabled) || allowDisabledFocus ? 0 : undefined}\n        aria-roledescription={buttonProps['aria-roledescription']}\n        onFocusCapture={this._onSplitContainerFocusCapture}\n      >\n        <span style={{ display: 'flex', width: '100%' }}>\n          {this._onRenderContent(tag, buttonProps)}\n          {this._onRenderSplitButtonMenuButton(classNames, keytipAttributes)}\n          {this._onRenderSplitButtonDivider(classNames)}\n        </span>\n      </div>\n    );\n\n    return keytipProps ? (\n      <KeytipData keytipProps={keytipProps} disabled={disabled}>\n        {(keytipAttributes: any): JSX.Element => SplitButton(keytipAttributes)}\n      </KeytipData>\n    ) : (\n      SplitButton()\n    );\n  }\n\n  private _onSplitContainerFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    const container = this._splitButtonContainer.current;\n\n    // If the target is coming from the portal we do not need to set focus on the container.\n    if (!container || (ev.target && portalContainsElement(ev.target, container))) {\n      return;\n    }\n\n    // We should never be able to focus the individual buttons in a split button. Focus\n    // should always remain on the container.\n    container.focus();\n  };\n\n  private _onSplitButtonPrimaryClick = (ev: React.MouseEvent<HTMLDivElement>) => {\n    if (!this.state.menuHidden) {\n      this._dismissMenu();\n    }\n\n    if (!this._processingTouch && this.props.onClick) {\n      this.props.onClick(ev);\n    } else if (this._processingTouch) {\n      this._onMenuClick(ev);\n    }\n  };\n\n  private _onRenderSplitButtonDivider(classNames: ISplitButtonClassNames | undefined): JSX.Element | null {\n    if (classNames && classNames.divider) {\n      const onClick = (ev: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        ev.stopPropagation();\n      };\n      return <span className={classNames.divider} aria-hidden={true} onClick={onClick} />;\n    }\n    return null;\n  }\n\n  private _onRenderSplitButtonMenuButton(\n    classNames: ISplitButtonClassNames | undefined,\n    keytipAttributes: any,\n  ): JSX.Element {\n    const { allowDisabledFocus, checked, disabled, splitButtonMenuProps, splitButtonAriaLabel, primaryDisabled } =\n      this.props;\n    const { menuHidden } = this.state;\n    let menuIconProps = this.props.menuIconProps;\n\n    if (menuIconProps === undefined) {\n      menuIconProps = {\n        iconName: 'ChevronDown',\n      };\n    }\n\n    const splitButtonProps = {\n      ...splitButtonMenuProps,\n      styles: classNames,\n      checked,\n      disabled,\n      allowDisabledFocus,\n      onClick: this._onMenuClick,\n      menuProps: undefined,\n      iconProps: { ...menuIconProps, className: this._classNames.menuIcon },\n      ariaLabel: splitButtonAriaLabel,\n      'aria-haspopup': true,\n      'aria-expanded': !menuHidden,\n      'data-is-focusable': false,\n    };\n\n    // Add data-ktp-execute-target to the split button if the keytip is defined\n    return (\n      <BaseButton\n        {...splitButtonProps}\n        data-ktp-execute-target={keytipAttributes ? keytipAttributes['data-ktp-execute-target'] : keytipAttributes}\n        onMouseDown={this._onMouseDown}\n        tabIndex={primaryDisabled && !allowDisabledFocus ? 0 : -1}\n      />\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    // explicity cancelling event so click won't fire after this\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.props.disabled && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (!this.props.disabled) {\n      if (this.props.menuProps) {\n        this._onMenuKeyDown(ev);\n      } else if (this.props.onKeyDown !== undefined) {\n        this.props.onKeyDown(ev); // not cancelling event because it's not disabled\n      }\n    }\n  };\n\n  private _onKeyUp = (\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onKeyUp !== undefined) {\n      this.props.onKeyUp(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onKeyPress = (\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.props.disabled && this.props.onKeyPress !== undefined) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.props.onKeyPress(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onMouseUp = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onMouseUp !== undefined) {\n      this.props.onMouseUp(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onMouseDown = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onMouseDown !== undefined) {\n      this.props.onMouseDown(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onClick = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled) {\n      if (this.props.menuProps) {\n        this._onMenuClick(ev);\n      } else if (this.props.onClick !== undefined) {\n        this.props.onClick(ev); // not cancelling event because it's not disabled\n      }\n    }\n  };\n\n  private _onSplitButtonContainerKeyDown = (ev: React.KeyboardEvent<HTMLDivElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      if (this._buttonElement.current) {\n        this._buttonElement.current.click();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    } else {\n      this._onMenuKeyDown(ev);\n    }\n  };\n\n  private _onMenuKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const isUp = ev.which === KeyCodes.up;\n    // eslint-disable-next-line deprecation/deprecation\n    const isDown = ev.which === KeyCodes.down;\n\n    if (!ev.defaultPrevented && this._isValidMenuOpenKey(ev)) {\n      const { onMenuClick } = this.props;\n      if (onMenuClick) {\n        onMenuClick(ev, this.props);\n      }\n\n      this._onToggleMenu(false);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      // We manually set the focus visibility to true if opening via Enter or Space to account for the scenario where\n      // a user clicks on the button, closes the menu and then opens it via keyboard. In this scenario our default logic\n      // for setting focus visibility is not triggered since there is no keyboard navigation present beforehand.\n      setFocusVisibility(true, ev.target as Element, this.context?.registeredProviders);\n    }\n\n    if (!(ev.altKey || ev.metaKey) && (isUp || isDown)) {\n      // Suppose a menu, with shouldFocusOnMount: false, is open, and user wants to keyboard to the menu items\n      // We need to re-render the menu with shouldFocusOnMount as true.\n\n      if (!this.state.menuHidden && this.props.menuProps) {\n        const currentShouldFocusOnMount =\n          this._menuShouldFocusOnMount !== undefined\n            ? this._menuShouldFocusOnMount\n            : this.props.menuProps.shouldFocusOnMount;\n        if (!currentShouldFocusOnMount) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._menuShouldFocusOnMount = true;\n          this.forceUpdate();\n        }\n      }\n    }\n  };\n\n  private _onTouchStart: () => void = () => {\n    if (\n      this._isSplitButton &&\n      this._splitButtonContainer.current &&\n      !('onpointerdown' in this._splitButtonContainer.current)\n    ) {\n      this._handleTouchAndPointerEvent();\n    }\n  };\n\n  private _onPointerDown(\n    ev: PointerEvent &\n      React.PointerEvent<HTMLAnchorElement | HTMLButtonElement | HTMLDivElement | BaseButton | HTMLSpanElement>,\n  ) {\n    const { onPointerDown } = this.props;\n    if (onPointerDown) {\n      onPointerDown(ev);\n    }\n\n    if (ev.pointerType === 'touch') {\n      this._handleTouchAndPointerEvent();\n\n      ev.preventDefault();\n      ev.stopImmediatePropagation();\n    }\n  }\n\n  private _handleTouchAndPointerEvent() {\n    // If we already have an existing timeout from a previous touch and pointer event\n    // cancel that timeout so we can set a new one.\n    if (this._lastTouchTimeoutId !== undefined) {\n      this._async.clearTimeout(this._lastTouchTimeoutId);\n      this._lastTouchTimeoutId = undefined;\n    }\n    this._processingTouch = true;\n\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\n      this._processingTouch = false;\n      this._lastTouchTimeoutId = undefined;\n\n      // Touch and pointer events don't focus the button naturally,\n      // so adding an imperative focus call to guarantee this behavior.\n      // Only focus the button if a splitbutton menu is not open\n      if (this.state.menuHidden) {\n        this.focus();\n      }\n    }, TouchIdleDelay);\n  }\n\n  /**\n   * Returns if the user hits a valid keyboard key to open the menu\n   * @param ev - the keyboard event\n   * @returns True if user clicks on custom trigger key if enabled or alt + down arrow if not. False otherwise.\n   */\n  private _isValidMenuOpenKey(\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>,\n  ): boolean {\n    if (this.props.menuTriggerKeyCode) {\n      // eslint-disable-next-line deprecation/deprecation\n      return ev.which === this.props.menuTriggerKeyCode;\n    } else if (this.props.menuProps) {\n      // eslint-disable-next-line deprecation/deprecation\n      return ev.which === KeyCodes.down && (ev.altKey || ev.metaKey);\n    }\n\n    // Note: When enter is pressed, we will let the event continue to propagate\n    // to trigger the onClick event on the button\n    return false;\n  }\n\n  private _onMenuClick = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLAnchorElement | HTMLSpanElement>,\n  ) => {\n    const { onMenuClick, menuProps } = this.props;\n    if (onMenuClick) {\n      onMenuClick(ev, this.props);\n    }\n\n    // focus on the container by default when the menu is opened with a click event\n    // this differentiates from a keyboard interaction triggering the click event\n    const shouldFocusOnContainer =\n      typeof menuProps?.shouldFocusOnContainer === 'boolean'\n        ? menuProps.shouldFocusOnContainer\n        : (ev.nativeEvent as PointerEvent).pointerType === 'mouse';\n\n    if (!ev.defaultPrevented) {\n      this._onToggleMenu(shouldFocusOnContainer);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n}\n", "import * as React from 'react';\n\nimport { IconType } from './Icon.types';\nimport { Image } from '../Image/Image';\nimport { ImageLoadState } from '../Image/Image.types';\nimport { getNativeProps, htmlElementProperties, classNamesFunction } from '../../Utilities';\nimport { getIconContent } from './FontIcon';\nimport type { IIconProps, IIconStyleProps, IIconStyles } from './Icon.types';\nimport type { IImageProps } from '../Image/Image.types';\n\nexport interface IIconState {\n  imageLoadError: boolean;\n}\n\nconst getClassNames = classNamesFunction<IIconStyleProps, IIconStyles>({\n  // Icon is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Icon.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class IconBase extends React.Component<IIconProps, IIconState> {\n  constructor(props: IIconProps) {\n    super(props);\n    this.state = {\n      imageLoadError: false,\n    };\n  }\n\n  public render() {\n    const { children, className, styles, iconName, imageErrorAs, theme } = this.props;\n    const isPlaceholder = typeof iconName === 'string' && iconName.length === 0;\n    const isImage =\n      // eslint-disable-next-line deprecation/deprecation\n      !!this.props.imageProps || this.props.iconType === IconType.image || this.props.iconType === IconType.Image;\n    const iconContent = getIconContent(iconName) || {};\n    const { iconClassName, children: iconContentChildren, mergeImageProps } = iconContent;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      iconClassName,\n      isImage,\n      isPlaceholder,\n    });\n\n    const RootType = isImage ? 'span' : 'i';\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, htmlElementProperties, [\n      'aria-label',\n    ]);\n    const { imageLoadError } = this.state;\n    const imageProps: IImageProps = {\n      ...this.props.imageProps,\n      onLoadingStateChange: this._onImageLoadingStateChange,\n    };\n    const ImageType = (imageLoadError && imageErrorAs) || Image;\n\n    // eslint-disable-next-line deprecation/deprecation\n    const ariaLabel = this.props['aria-label'] || this.props.ariaLabel;\n    const accessibleName = imageProps.alt || ariaLabel || this.props.title;\n    const hasName = !!(\n      accessibleName ||\n      this.props['aria-labelledby'] ||\n      imageProps['aria-label'] ||\n      imageProps['aria-labelledby']\n    );\n    const containerProps = hasName\n      ? {\n          role: isImage || mergeImageProps ? undefined : 'img',\n          'aria-label': isImage || mergeImageProps ? undefined : accessibleName,\n        }\n      : {\n          'aria-hidden': true,\n        };\n\n    let finalIconContentChildren = iconContentChildren;\n\n    if (mergeImageProps && iconContentChildren && typeof iconContentChildren === 'object' && accessibleName) {\n      finalIconContentChildren = React.cloneElement(iconContentChildren, {\n        alt: accessibleName,\n      });\n    }\n\n    return (\n      <RootType\n        data-icon-name={iconName}\n        {...containerProps}\n        {...nativeProps}\n        {...(mergeImageProps\n          ? {\n              title: undefined,\n              'aria-label': undefined,\n            }\n          : {})}\n        className={classNames.root}\n      >\n        {isImage ? <ImageType {...imageProps} /> : children || finalIconContentChildren}\n      </RootType>\n    );\n  }\n\n  private _onImageLoadingStateChange = (state: ImageLoadState): void => {\n    if (this.props.imageProps && this.props.imageProps.onLoadingStateChange) {\n      this.props.imageProps.onLoadingStateChange(state);\n    }\n    if (state === ImageLoadState.error) {\n      this.setState({ imageLoadError: true });\n    }\n  };\n}\n", "import * as React from 'react';\nimport type { IImageProps } from '../Image/Image.types';\nimport type { IStyle, ITheme } from '../../Styling';\nimport type { IBaseProps, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n * {@docCategory Icon}\n */\nexport enum IconType {\n  /**\n   * Render using the fabric icon font.\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  default = 0,\n\n  /**\n   * Render using an image, where imageProps would be used.\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  image = 1,\n\n  /**\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  Default = 100000,\n\n  /**\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  Image = 100001,\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconProps extends IBaseProps, React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   * If string is empty, a placeholder icon will be rendered the same width as an icon.\n   */\n  iconName?: string;\n\n  /**\n   * The aria label of the icon for the benefit of screen readers.\n   * @deprecated Use the native prop `aria-label`\n   */\n  ariaLabel?: string;\n\n  /**\n   * The type of icon to render (image or icon font).\n   * @deprecated Inferred based on the presence of `imageProps`\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  iconType?: IconType;\n\n  /**\n   * If rendering an image icon, these props will be passed to the Image component.\n   */\n  imageProps?: IImageProps;\n\n  /**\n   * If rendering an image icon, this component will be rendered in the event that loading the image fails.\n   */\n  imageErrorAs?: React.ComponentType<IImageProps>;\n\n  /**\n   * Gets the styles for an Icon.\n   */\n  styles?: IStyleFunctionOrObject<IIconStyleProps, IIconStyles>;\n  theme?: ITheme;\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconStyleProps {\n  className?: string;\n  iconClassName?: string;\n  isPlaceholder: boolean;\n  isImage: boolean;\n  styles?: Partial<IIconStyles>;\n  theme?: ITheme;\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconStyles {\n  root?: IStyle;\n\n  /**\n   * @deprecated Use `root`.\n   */\n  imageContainer?: IStyle;\n}\n\n/**\n * Props for a basic icon component which only supports font glyphs and can't be targeted by customizations.\n * {@docCategory Icon}\n */\nexport interface IFontIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   * If string is empty, a placeholder icon will be rendered the same width as an icon.\n   */\n  iconName?: string;\n\n  /**\n   * Custom class to style the icon.\n   */\n  className?: string;\n}\n\n/**\n * Props for a basic image icon component which doesn't directly provide image load error handling\n * and can't be targeted by customizations.\n * {@docCategory Icon}\n */\nexport interface IImageIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Props passed to the Image component.\n   */\n  imageProps: IImageProps;\n\n  /**\n   * Custom class to style the icon.\n   */\n  className?: string;\n}\n", "import * as React from 'react';\nimport { classNamesFunction, getNativeProps, imgProperties } from '../../Utilities';\nimport { ImageCoverStyle, ImageFit, ImageLoadState } from './Image.types';\nimport { useIsomorphicLayoutEffect, useMergedRefs } from '@fluentui/react-hooks';\nimport type { IImageProps, IImageStyleProps, IImageStyles } from './Image.types';\n\nconst getClassNames = classNamesFunction<IImageStyleProps, IImageStyles>();\n\nexport interface IImageState {\n  loadState?: ImageLoadState;\n}\n\nconst SVG_REGEX = /\\.svg$/i;\nconst KEY_PREFIX = 'fabricImage';\n\nfunction useLoadState(\n  props: IImageProps,\n  imageElement: React.RefObject<HTMLImageElement>,\n): readonly [\n  ImageLoadState,\n  /* onImageLoad */ (ev: React.SyntheticEvent<HTMLImageElement>) => void,\n  /* onImageError */ (ev: React.SyntheticEvent<HTMLImageElement>) => void,\n] {\n  const { onLoadingStateChange, onLoad, onError, src } = props;\n\n  const [loadState, setLoadState] = React.useState<ImageLoadState>(ImageLoadState.notLoaded);\n\n  useIsomorphicLayoutEffect(() => {\n    // If the src property changes, reset the load state\n    // (does nothing if the load state is already notLoaded)\n    setLoadState(ImageLoadState.notLoaded);\n  }, [src]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- intended to run every render\n  React.useEffect(() => {\n    if (loadState === ImageLoadState.notLoaded) {\n      // testing if naturalWidth and naturalHeight are greater than zero is better than checking\n      // .complete, because .complete will also be set to true if the image breaks. However,\n      // for some browsers, SVG images do not have a naturalWidth or naturalHeight, so fall back\n      // to checking .complete for these images.\n      const isLoaded: boolean = imageElement.current\n        ? (src && imageElement.current.naturalWidth > 0 && imageElement.current.naturalHeight > 0) ||\n          (imageElement.current.complete && SVG_REGEX.test(src!))\n        : false;\n\n      if (isLoaded) {\n        setLoadState(ImageLoadState.loaded);\n      }\n    }\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChange?.(loadState);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when loadState changes\n  }, [loadState]);\n\n  const onImageLoaded = React.useCallback(\n    (ev: React.SyntheticEvent<HTMLImageElement>) => {\n      onLoad?.(ev);\n      if (src) {\n        setLoadState(ImageLoadState.loaded);\n      }\n    },\n    [src, onLoad],\n  );\n\n  const onImageError = React.useCallback(\n    (ev: React.SyntheticEvent<HTMLImageElement>) => {\n      onError?.(ev);\n      setLoadState(ImageLoadState.error);\n    },\n    [onError],\n  );\n\n  return [loadState, onImageLoaded, onImageError] as const;\n}\n\nexport const ImageBase: React.FunctionComponent<IImageProps> = React.forwardRef<HTMLImageElement, IImageProps>(\n  (props, forwardedRef) => {\n    const frameElement = React.useRef<HTMLDivElement>() as React.RefObject<HTMLDivElement>;\n    const imageElement = React.useRef<HTMLImageElement>() as React.RefObject<HTMLImageElement>;\n    const [loadState, onImageLoaded, onImageError] = useLoadState(props, imageElement);\n\n    const imageProps = getNativeProps<React.ImgHTMLAttributes<HTMLImageElement>>(props, imgProperties, [\n      'width',\n      'height',\n    ]);\n    const {\n      src,\n      alt,\n      width,\n      height,\n      shouldFadeIn = true,\n      shouldStartVisible,\n      className,\n      imageFit,\n      role,\n      maximizeFrame,\n      styles,\n      theme,\n      loading,\n    } = props;\n    const coverStyle = useCoverStyle(props, loadState, imageElement, frameElement);\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      width,\n      height,\n      maximizeFrame,\n      shouldFadeIn,\n      shouldStartVisible,\n      isLoaded:\n        loadState === ImageLoadState.loaded || (loadState === ImageLoadState.notLoaded && props.shouldStartVisible),\n      isLandscape: coverStyle === ImageCoverStyle.landscape,\n      isCenter: imageFit === ImageFit.center,\n      isCenterContain: imageFit === ImageFit.centerContain,\n      isCenterCover: imageFit === ImageFit.centerCover,\n      isContain: imageFit === ImageFit.contain,\n      isCover: imageFit === ImageFit.cover,\n      isNone: imageFit === ImageFit.none,\n      isError: loadState === ImageLoadState.error,\n      isNotImageFit: imageFit === undefined,\n    });\n\n    // If image dimensions aren't specified, the natural size of the image is used.\n    return (\n      <div className={classNames.root} style={{ width: width, height: height }} ref={frameElement}>\n        <img\n          {...imageProps}\n          onLoad={onImageLoaded}\n          onError={onImageError}\n          key={KEY_PREFIX + props.src || ''}\n          className={classNames.image}\n          ref={useMergedRefs(imageElement, forwardedRef)}\n          src={src}\n          alt={alt}\n          role={role}\n          loading={loading}\n        />\n      </div>\n    );\n  },\n);\nImageBase.displayName = 'ImageBase';\n\nfunction useCoverStyle(\n  props: IImageProps,\n  loadState: ImageLoadState,\n  imageElement: React.RefObject<HTMLImageElement>,\n  frameElement: React.RefObject<HTMLDivElement>,\n) {\n  const previousLoadState = React.useRef(loadState);\n  const coverStyle = React.useRef<ImageCoverStyle | undefined>();\n\n  if (\n    coverStyle === undefined ||\n    (previousLoadState.current === ImageLoadState.notLoaded && loadState === ImageLoadState.loaded)\n  ) {\n    coverStyle.current = computeCoverStyle(props, loadState, imageElement, frameElement);\n  }\n\n  previousLoadState.current = loadState;\n\n  return coverStyle.current!;\n}\n\nfunction computeCoverStyle(\n  props: IImageProps,\n  loadState: ImageLoadState,\n  imageElement: React.RefObject<HTMLImageElement>,\n  frameElement: React.RefObject<HTMLDivElement>,\n): ImageCoverStyle {\n  const { imageFit, width, height } = props;\n\n  // Do not compute cover style if it was already specified in props\n  if (props.coverStyle !== undefined) {\n    return props.coverStyle;\n  } else if (\n    loadState === ImageLoadState.loaded &&\n    (imageFit === ImageFit.cover ||\n      imageFit === ImageFit.contain ||\n      imageFit === ImageFit.centerContain ||\n      imageFit === ImageFit.centerCover) &&\n    imageElement.current &&\n    frameElement.current\n  ) {\n    // Determine the desired ratio using the width and height props.\n    // If those props aren't available, measure measure the frame.\n    let desiredRatio;\n    if (\n      typeof width === 'number' &&\n      typeof height === 'number' &&\n      imageFit !== ImageFit.centerContain &&\n      imageFit !== ImageFit.centerCover\n    ) {\n      desiredRatio = width / height;\n    } else {\n      desiredRatio = frameElement.current.clientWidth / frameElement.current.clientHeight;\n    }\n\n    // Examine the source image to determine its original ratio.\n    const naturalRatio = imageElement.current.naturalWidth / imageElement.current.naturalHeight;\n\n    // Should we crop from the top or the sides?\n    if (naturalRatio > desiredRatio) {\n      return ImageCoverStyle.landscape;\n    }\n  }\n  return ImageCoverStyle.portrait;\n}\n", "import * as React from 'react';\nimport type { IStyle, ITheme } from '../../Styling';\nimport type { IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory Image}\n */\nexport interface IImage {}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageProps extends React.ImgHTMLAttributes<HTMLImageElement>, React.RefAttributes<HTMLImageElement> {\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IImageStyleProps, IImageStyles>;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional css class to apply to the Component\n   * @defaultvalue undefined\n   */\n  className?: string;\n\n  /**\n   * If true, fades the image in when loaded.\n   * @defaultvalue true\n   */\n  shouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables shouldFadeIn.\n   * @defaultvalue false;\n   */\n  shouldStartVisible?: boolean;\n\n  /**\n   * Used to determine how the image is scaled and cropped to fit the frame.\n   *\n   * @defaultvalue If both dimensions are provided, then the image is fit using `ImageFit.scale`.\n   * Otherwise, the image won't be scaled or cropped.\n   */\n  imageFit?: ImageFit;\n\n  /**\n   * @deprecated Not used. Use `onLoadingStateChange` and re-render the Image with a different src.\n   */\n  errorSrc?: string;\n\n  /**\n   * If true, the image frame will expand to fill its parent container.\n   */\n  maximizeFrame?: boolean;\n\n  /**\n   * Optional callback method for when the image load state has changed.\n   * The 'loadState' parameter indicates the current state of the Image.\n   */\n  onLoadingStateChange?: (loadState: ImageLoadState) => void;\n\n  /**\n   * Specifies the cover style to be used for this image. If not\n   * specified, this will be dynamically calculated based on the\n   * aspect ratio for the image.\n   */\n  coverStyle?: ImageCoverStyle;\n\n  /**\n   * Allows for browser-level image lazy-loading.\n   */\n  loading?: 'lazy' | 'eager';\n}\n\n/**\n * The possible methods that can be used to fit the image.\n * {@docCategory Image}\n */\nexport enum ImageFit {\n  /**\n   * The image is not scaled. The image is centered and cropped within the content box.\n   */\n  center = 0,\n\n  /**\n   * The image is scaled to maintain its aspect ratio while being fully contained within the frame. The image will\n   * be centered horizontally and vertically within the frame. The space in the top and bottom or in the sides of\n   * the frame will be empty depending on the difference in aspect ratio between the image and the frame.\n   */\n  contain = 1,\n\n  /**\n   * The image is scaled to maintain its aspect ratio while filling the frame. Portions of the image will be cropped\n   * from the top and bottom, or the sides, depending on the difference in aspect ratio between the image and the frame.\n   */\n  cover = 2,\n\n  /**\n   * Neither the image nor the frame are scaled. If their sizes do not match, the image will either be cropped or the\n   * frame will have empty space.\n   */\n  none = 3,\n\n  /**\n   * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n   * behave as ImageFit.center if the image's natural height or width is less than the Image frame's height or width,\n   * but if both natural height and width are larger than the frame it will behave as ImageFit.cover.\n   */\n  centerCover = 4,\n\n  /**\n   * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n   * behave as ImageFit.center if the image's natural height and width is less than the Image frame's height and width,\n   * but if either natural height or width are larger than the frame it will behave as ImageFit.contain.\n   */\n  centerContain = 5,\n}\n\n/**\n * The cover style to be used on the image\n * {@docCategory Image}\n */\nexport enum ImageCoverStyle {\n  /**\n   * The image will be shown at 100% height of container and the width will be scaled accordingly\n   */\n  landscape = 0,\n\n  /**\n   * The image will be shown at 100% width of container and the height will be scaled accordingly\n   */\n  portrait = 1,\n}\n\n/**\n * {@docCategory Image}\n */\nexport enum ImageLoadState {\n  /**\n   * The image has not yet been loaded, and there is no error yet.\n   */\n  notLoaded = 0,\n\n  /**\n   * The image has been loaded successfully.\n   */\n  loaded = 1,\n\n  /**\n   * An error has been encountered while loading the image.\n   */\n  error = 2,\n\n  /**\n   * @deprecated Not used. Use `onLoadingStateChange` and re-render the Image with a different src.\n   */\n  errorLoaded = 3,\n}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageStyleProps {\n  /**\n   * Accept theme prop.\n   */\n  theme: ITheme;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  /**\n   * If true, the image frame will expand to fill its parent container.\n   */\n  maximizeFrame?: boolean;\n\n  /**\n   * If true, the image is loaded\n   */\n  isLoaded?: boolean;\n\n  /**\n   * If true, fades the image in when loaded.\n   * @defaultvalue true\n   */\n  shouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables shouldFadeIn.\n   * @defaultvalue false;\n   */\n  shouldStartVisible?: boolean;\n\n  /**\n   * If true the image is coverStyle landscape instead of portrait\n   */\n  isLandscape?: boolean;\n\n  /**\n   * ImageFit booleans for center, cover, contain, centerContain, centerCover, none\n   */\n  isCenter?: boolean;\n  isContain?: boolean;\n  isCover?: boolean;\n  isCenterContain?: boolean;\n  isCenterCover?: boolean;\n  isNone?: boolean;\n\n  /**\n   * if true image load is in error\n   */\n  isError?: boolean;\n\n  /**\n   * if true, imageFit is undefined\n   */\n  isNotImageFit?: boolean;\n\n  /**\n   * Image width value\n   */\n  width?: number | string;\n\n  /**\n   * Image height value\n   */\n  height?: number | string;\n}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageStyles {\n  /**\n   * Style set for the root div element.\n   */\n  root: IStyle;\n  /**\n   * Style set for the img element.\n   */\n  image: IStyle;\n}\n", "import { AnimationClassNames, getGlobalClassNames } from '../../Styling';\nimport { getWindow } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { IImageStyleProps, IImageStyles } from './Image.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait',\n};\n\nexport const getStyles = (props: IImageStyleProps): IImageStyles => {\n  const {\n    className,\n    width,\n    height,\n    maximizeFrame,\n    isLoaded,\n    shouldFadeIn,\n    shouldStartVisible,\n    isLandscape,\n    isCenter,\n    isContain,\n    isCover,\n    isCenterContain,\n    isCenterCover,\n    isNone,\n    isError,\n    isNotImageFit,\n    theme,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ImageFitStyles: IStyle = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)', // @todo test RTL renders transform: translate(50%,-50%);\n  };\n\n  // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n  const window: Window | undefined = getWindow();\n  const supportsObjectFit: boolean =\n    window !== undefined &&\n    // eslint-disable-next-line @fluentui/max-len\n    // cast needed as vendor prefixed `msMaxTouchPoints` api is no longer part of TS lib declaration - introduced with TS 4.4\n    (window.navigator as { msMaxTouchPoints?: Window['navigator']['maxTouchPoints'] }).msMaxTouchPoints === undefined;\n  const fallbackObjectFitStyles =\n    (isContain && isLandscape) || (isCover && !isLandscape)\n      ? { width: '100%', height: 'auto' }\n      : { width: 'auto', height: '100%' };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        overflow: 'hidden',\n      },\n      maximizeFrame && [\n        classNames.rootMaximizeFrame,\n        {\n          height: '100%',\n          width: '100%',\n        },\n      ],\n      isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400,\n      (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n        position: 'relative',\n      },\n      className,\n    ],\n    image: [\n      classNames.image,\n      {\n        display: 'block',\n        opacity: 0,\n      },\n      isLoaded && [\n        'is-loaded',\n        {\n          opacity: 1,\n        },\n      ],\n      isCenter && [classNames.imageCenter, ImageFitStyles],\n      isContain && [\n        classNames.imageContain,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        !supportsObjectFit && ImageFitStyles,\n      ],\n      isCover && [\n        classNames.imageCover,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        !supportsObjectFit && ImageFitStyles,\n      ],\n      isCenterContain && [\n        classNames.imageCenterContain,\n        isLandscape && {\n          maxWidth: '100%',\n        },\n        !isLandscape && {\n          maxHeight: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isCenterCover && [\n        classNames.imageCenterCover,\n        isLandscape && {\n          maxHeight: '100%',\n        },\n        !isLandscape && {\n          maxWidth: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isNone && [\n        classNames.imageNone,\n        {\n          width: 'auto',\n          height: 'auto',\n        },\n      ],\n      isNotImageFit && [\n        !!width &&\n          !height && {\n            height: 'auto',\n            width: '100%',\n          },\n        !width &&\n          !!height && {\n            height: '100%',\n            width: 'auto',\n          },\n        !!width &&\n          !!height && {\n            height: '100%',\n            width: '100%',\n          },\n      ],\n      isLandscape && classNames.imageLandscape,\n      !isLandscape && classNames.imagePortrait,\n      !isLoaded && 'is-notLoaded',\n      shouldFadeIn && 'is-fadeIn',\n      isError && 'is-error',\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ImageBase } from './Image.base';\nimport { getStyles } from './Image.styles';\nimport type { IImageProps, IImageStyleProps, IImageStyles } from './Image.types';\n\nexport const Image: React.FunctionComponent<IImageProps> = styled<IImageProps, IImageStyleProps, IImageStyles>(\n  ImageBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Image',\n  },\n  true,\n);\nImage.displayName = 'Image';\n", "import * as React from 'react';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport { css, getNativeProps, htmlElementProperties, memoizeFunction } from '../../Utilities';\nimport { getIcon } from '../../Styling';\nimport type { IFontIconProps } from './Icon.types';\nimport type { IIconRecord, IIconSubsetRecord } from '../../Styling';\n\nexport interface IIconContent {\n  children?: string | JSX.Element;\n  iconClassName?: string;\n  fontFamily?: string;\n  mergeImageProps?: boolean;\n}\n\nexport const getIconContent = memoizeFunction(\n  (iconName?: string): IIconContent | null => {\n    const { code, subset }: Pick<IIconRecord, 'code'> & { subset: Partial<IIconSubsetRecord> } = getIcon(iconName) || {\n      subset: {},\n      code: undefined,\n    };\n\n    if (!code) {\n      return null;\n    }\n\n    return {\n      children: code,\n      iconClassName: subset.className,\n      fontFamily: subset.fontFace && subset.fontFace.fontFamily,\n      mergeImageProps: subset.mergeImageProps,\n    };\n  },\n  undefined,\n  true /*ignoreNullOrUndefinedResult */,\n);\n\n/**\n * Fast icon component which only supports font glyphs (not images) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const FontIcon: React.FunctionComponent<IFontIconProps> = props => {\n  const { iconName, className, style = {} } = props;\n  const iconContent = getIconContent(iconName) || {};\n  const { iconClassName, children, fontFamily, mergeImageProps } = iconContent;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLElement>>(props, htmlElementProperties);\n  const accessibleName = props['aria-label'] || props.title;\n  const containerProps =\n    props['aria-label'] || props['aria-labelledby'] || props.title\n      ? {\n          role: mergeImageProps ? undefined : 'img',\n        }\n      : {\n          'aria-hidden': true,\n        };\n\n  let finalChildren = children;\n\n  if (mergeImageProps) {\n    if (typeof children === 'object' && typeof children.props === 'object' && accessibleName) {\n      finalChildren = React.cloneElement(children, { alt: accessibleName });\n    }\n  }\n\n  return (\n    <i\n      data-icon-name={iconName}\n      {...containerProps}\n      {...nativeProps}\n      {...(mergeImageProps\n        ? {\n            title: undefined,\n            'aria-label': undefined,\n          }\n        : {})}\n      className={css(MS_ICON, classNames.root, iconClassName, !iconName && classNames.placeholder, className)}\n      // Apply the font family this way to ensure it doesn't get overridden by Fabric Core ms-Icon styles\n      // https://github.com/microsoft/fluentui/issues/10449\n      style={{ fontFamily, ...style }}\n    >\n      {finalChildren}\n    </i>\n  );\n};\n\n/**\n * Memoized helper for rendering a FontIcon.\n * @param iconName - The name of the icon to use from the icon font.\n * @param className - Class name for styling the icon.\n * @param ariaLabel - Label for the icon for the benefit of screen readers.\n * {@docCategory Icon}\n */\nexport const getFontIcon = memoizeFunction((iconName: string, className?: string, ariaLabel?: string) => {\n  return FontIcon({ iconName, className, 'aria-label': ariaLabel });\n});\n", "import { mergeStyleSets } from '../../Styling';\nimport type { IIconStyleProps, IIconStyles } from './Icon.types';\n\n/** Class names used in themeable and non-themeable Icon components */\nexport const classNames = mergeStyleSets({\n  root: {\n    display: 'inline-block',\n  },\n  placeholder: [\n    'ms-Icon-placeHolder',\n    {\n      width: '1em',\n    },\n  ],\n  image: [\n    'ms-Icon-imageContainer',\n    {\n      overflow: 'hidden',\n    },\n  ],\n});\n/** Class name used only in non-themeable Icon components */\nexport const MS_ICON = 'ms-Icon';\n\nexport const getStyles = (props: IIconStyleProps): IIconStyles => {\n  const { className, iconClassName, isPlaceholder, isImage, styles } = props;\n\n  return {\n    root: [\n      isPlaceholder && classNames.placeholder,\n      classNames.root,\n      isImage && classNames.image,\n      iconClassName,\n      className,\n      styles && styles.root,\n      // eslint-disable-next-line deprecation/deprecation\n      styles && styles.imageContainer,\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IconBase } from './Icon.base';\nimport { getStyles } from './Icon.styles';\nimport type { IIconProps, IIconStyleProps, IIconStyles } from './Icon.types';\n\n/**\n * Legacy Icon component which can be targeted by customization. It's recommended to use `FontIcon`\n * or `ImageIcon` instead, especially in scenarios where rendering performance is important.\n * {@docCategory Icon}\n */\nexport const Icon: React.FunctionComponent<IIconProps> = styled<IIconProps, IIconStyleProps, IIconStyles>(\n  IconBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Icon',\n  },\n  true,\n);\nIcon.displayName = 'Icon';\n", "import * as React from 'react';\nimport { Image } from '../Image/Image';\nimport { css, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport type { IImageIconProps } from './Icon.types';\n\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const ImageIcon: React.FunctionComponent<IImageIconProps> = props => {\n  const { className, imageProps } = props;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, htmlElementProperties, [\n    'aria-label',\n    'aria-labelledby',\n    'title',\n    'aria-describedby',\n  ]);\n  const altText = imageProps.alt || props['aria-label'];\n  const hasName =\n    altText ||\n    props['aria-labelledby'] ||\n    props.title ||\n    imageProps['aria-label'] ||\n    imageProps['aria-labelledby'] ||\n    imageProps.title;\n\n  // move naming or describing attributes from the container (where they are invalid) to the image\n  const imageNameProps = {\n    'aria-labelledby': props['aria-labelledby'],\n    'aria-describedby': props['aria-describedby'],\n    title: props.title,\n  };\n\n  const containerProps = hasName\n    ? {}\n    : {\n        'aria-hidden': true,\n      };\n\n  return (\n    <div {...containerProps} {...nativeProps} className={css(MS_ICON, classNames.root, classNames.image, className)}>\n      <Image {...imageNameProps} {...imageProps} alt={hasName ? altText : ''} />\n    </div>\n  );\n};\n", "import * as React from 'react';\nimport { styled, composeRenderFunction } from '../../Utilities';\nimport { ContextualMenuBase } from './ContextualMenu.base';\nimport { getStyles } from './ContextualMenu.styles';\nimport type { IContextualMenuProps, IContextualMenuStyleProps, IContextualMenuStyles } from './ContextualMenu.types';\n\nfunction onRenderSubMenu(subMenuProps: IContextualMenuProps) {\n  return <LocalContextualMenu {...subMenuProps} />;\n}\n\n// This is to prevent cyclic import with ContextualMenu.base.tsx.\nconst LocalContextualMenu: React.FunctionComponent<IContextualMenuProps> = styled<\n  IContextualMenuProps,\n  IContextualMenuStyleProps,\n  IContextualMenuStyles\n>(\n  ContextualMenuBase,\n  getStyles,\n  (props: IContextualMenuProps) => ({\n    onRenderSubMenu: props.onRenderSubMenu\n      ? composeRenderFunction(props.onRenderSubMenu, onRenderSubMenu)\n      : onRenderSubMenu,\n  }),\n  { scope: 'ContextualMenu' },\n);\n\n/**\n * ContextualMenu description\n */\nexport const ContextualMenu: React.FunctionComponent<IContextualMenuProps> = LocalContextualMenu;\nContextualMenu.displayName = 'ContextualMenu';\n", "import * as React from 'react';\nimport { ContextualMenuItemType } from './ContextualMenu.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { FocusZone, FocusZoneDirection, FocusZoneTabbableElements } from '../../FocusZone';\nimport {\n  divProperties,\n  getNativeProps,\n  shallowCompare,\n  Async,\n  assign,\n  classNamesFunction,\n  css,\n  getFirstFocusable,\n  getLastFocusable,\n  getRTL,\n  KeyCodes,\n  shouldWrapFocus,\n  isIOS,\n  isMac,\n  memoizeFunction,\n  getPropsWithDefaults,\n  getDocument,\n  FocusRects,\n} from '../../Utilities';\nimport { hasSubmenu, getIsChecked, isItemDisabled } from '../../utilities/contextualMenu/index';\nimport { Callout } from '../../Callout';\nimport { ContextualMenuItem } from './ContextualMenuItem';\nimport {\n  ContextualMenuSplitButton,\n  ContextualMenuButton,\n  ContextualMenuAnchor,\n} from './ContextualMenuItemWrapper/index';\nimport { concatStyleSetsWithProps } from '../../Styling';\nimport { getItemStyles } from './ContextualMenu.classNames';\nimport {\n  useTarget,\n  usePrevious,\n  useAsync,\n  useWarnings,\n  useId,\n  Target,\n  useIsomorphicLayoutEffect,\n} from '@fluentui/react-hooks';\nimport { useResponsiveMode, ResponsiveMode } from '../../ResponsiveMode';\nimport { MenuContext } from '../../utilities/MenuContext/index';\nimport type {\n  IContextualMenuProps,\n  IContextualMenuItem,\n  IContextualMenuListProps,\n  IContextualMenuStyleProps,\n  IContextualMenuStyles,\n  IContextualMenuItemRenderProps,\n} from './ContextualMenu.types';\nimport type { IFocusZoneProps } from '../../FocusZone';\nimport type { IMenuItemClassNames, IContextualMenuClassNames } from './ContextualMenu.classNames';\nimport type { IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport type { ICalloutContentStyleProps, ICalloutContentStyles } from '../../Callout';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IContextualMenuItemStyleProps, IContextualMenuItemStyles } from './ContextualMenuItem.types';\nimport type { IPopupRestoreFocusParams } from '../../Popup';\n\nconst getClassNames = classNamesFunction<IContextualMenuStyleProps, IContextualMenuStyles>();\nconst getContextualMenuItemClassNames = classNamesFunction<IContextualMenuItemStyleProps, IContextualMenuItemStyles>();\n\n// The default ContextualMenu properties have no items and beak, the default submenu direction is right and top.\nconst DEFAULT_PROPS: Partial<IContextualMenuProps> = {\n  items: [],\n  shouldFocusOnMount: true,\n  gapSpace: 0,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n  beakWidth: 16,\n};\n\n/* return number of menu items, excluding headers and dividers */\nfunction getItemCount(items: IContextualMenuItem[]): number {\n  let totalItemCount = 0;\n  for (const item of items) {\n    if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n      const itemCount = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n      totalItemCount += itemCount;\n    }\n  }\n  return totalItemCount;\n}\n\nexport function getSubmenuItems(\n  item: IContextualMenuItem,\n  options?: {\n    target?: Target;\n  },\n): IContextualMenuItem[] | undefined {\n  const target = options?.target;\n\n  // eslint-disable-next-line deprecation/deprecation\n  const items = item.subMenuProps ? item.subMenuProps.items : item.items;\n\n  if (items) {\n    const overrideItems: typeof items = [];\n\n    for (const subItem of items) {\n      if (subItem.preferMenuTargetAsEventTarget) {\n        // For sub-items which need an overridden target, intercept `onClick`\n        const { onClick, ...contextItem } = subItem;\n\n        overrideItems.push({\n          ...contextItem,\n          onClick: getOnClickWithOverrideTarget(onClick, target),\n        });\n      } else {\n        overrideItems.push(subItem);\n      }\n    }\n\n    return overrideItems;\n  }\n}\n\n/**\n * Returns true if a list of menu items can contain a checkbox\n */\nexport function canAnyMenuItemsCheck(items: IContextualMenuItem[]): boolean {\n  return items.some(item => {\n    if (item.canCheck) {\n      return true;\n    }\n\n    // If the item is a section, check if any of the items in the section can check.\n    if (item.sectionProps && item.sectionProps.items.some(submenuItem => submenuItem.canCheck === true)) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst NavigationIdleDelay = 250; /* ms */\n\nconst COMPONENT_NAME = 'ContextualMenu';\n\nconst _getMenuItemStylesFunction = memoizeFunction(\n  (\n    ...styles: (IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles> | undefined)[]\n  ): IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles> => {\n    return (styleProps: IContextualMenuItemStyleProps) =>\n      concatStyleSetsWithProps(styleProps, getItemStyles, ...styles);\n  },\n);\n\n//#region Custom hooks\nfunction useVisibility(props: IContextualMenuProps, targetWindow: Window | undefined) {\n  const { hidden = false, onMenuDismissed, onMenuOpened } = props;\n  const previousHidden = usePrevious(hidden);\n\n  const onMenuOpenedRef = React.useRef(onMenuOpened);\n  const onMenuClosedRef = React.useRef(onMenuDismissed);\n  const propsRef = React.useRef(props);\n\n  onMenuOpenedRef.current = onMenuOpened;\n  onMenuClosedRef.current = onMenuDismissed;\n  propsRef.current = props;\n\n  React.useEffect(() => {\n    // Don't issue dismissed callbacks on initial mount\n    if (hidden && previousHidden === false) {\n      onMenuClosedRef.current?.(propsRef.current);\n    } else if (!hidden && previousHidden !== false) {\n      onMenuOpenedRef.current?.(propsRef.current);\n    }\n  }, [hidden, previousHidden]);\n\n  // Issue onDismissedCallback on unmount\n  React.useEffect(() => () => onMenuClosedRef.current?.(propsRef.current), []);\n}\n\nfunction useSubMenuState(\n  { hidden, items, theme, className, id, target: menuTarget }: IContextualMenuProps,\n  dismiss: () => void,\n) {\n  const [expandedMenuItemKey, setExpandedMenuItemKey] = React.useState<string>();\n  const [submenuTarget, setSubmenuTarget] = React.useState<HTMLElement>();\n  /** True if the menu was expanded by mouse click OR hover (as opposed to by keyboard) */\n  const [shouldFocusOnContainer, setShouldFocusOnContainer] = React.useState<boolean>();\n  const subMenuId = useId(COMPONENT_NAME, id);\n\n  const closeSubMenu = React.useCallback(() => {\n    setShouldFocusOnContainer(undefined);\n    setExpandedMenuItemKey(undefined);\n    setSubmenuTarget(undefined);\n  }, []);\n\n  const openSubMenu = React.useCallback(\n    ({ key: submenuItemKey }: IContextualMenuItem, target: HTMLElement, focusContainer?: boolean) => {\n      if (expandedMenuItemKey === submenuItemKey) {\n        return;\n      }\n\n      target.focus();\n      setShouldFocusOnContainer(focusContainer);\n      setExpandedMenuItemKey(submenuItemKey);\n      setSubmenuTarget(target);\n    },\n    [expandedMenuItemKey],\n  );\n\n  React.useEffect(() => {\n    if (hidden) {\n      closeSubMenu();\n    }\n  }, [hidden, closeSubMenu]);\n\n  const onSubMenuDismiss = useOnSubmenuDismiss(dismiss, closeSubMenu);\n\n  const getSubmenuProps = (): IContextualMenuProps | null => {\n    const item = findItemByKeyFromItems(expandedMenuItemKey!, items);\n    let submenuProps: IContextualMenuProps | null = null;\n\n    if (item) {\n      submenuProps = {\n        items: getSubmenuItems(item, { target: menuTarget })!,\n        target: submenuTarget,\n        onDismiss: onSubMenuDismiss,\n        isSubMenu: true,\n        id: subMenuId,\n        shouldFocusOnMount: true,\n        shouldFocusOnContainer,\n        directionalHint: getRTL(theme) ? DirectionalHint.leftTopEdge : DirectionalHint.rightTopEdge,\n        className,\n        gapSpace: 0,\n        isBeakVisible: false,\n      };\n\n      if (item.subMenuProps) {\n        assign(submenuProps, item.subMenuProps);\n      }\n\n      if (item.preferMenuTargetAsEventTarget) {\n        const { onItemClick } = item;\n\n        submenuProps.onItemClick = getOnClickWithOverrideTarget(onItemClick, menuTarget);\n      }\n    }\n    return submenuProps;\n  };\n\n  return [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss] as const;\n}\n\nfunction useShouldUpdateFocusOnMouseMove({ delayUpdateFocusOnHover, hidden }: IContextualMenuProps) {\n  const shouldUpdateFocusOnMouseEvent = React.useRef<boolean>(!delayUpdateFocusOnHover);\n  const gotMouseMove = React.useRef<boolean>(false);\n\n  React.useEffect(() => {\n    shouldUpdateFocusOnMouseEvent.current = !delayUpdateFocusOnHover;\n    gotMouseMove.current = hidden ? false : !delayUpdateFocusOnHover && gotMouseMove.current;\n  }, [delayUpdateFocusOnHover, hidden]);\n\n  const onMenuFocusCapture = React.useCallback(() => {\n    if (delayUpdateFocusOnHover) {\n      shouldUpdateFocusOnMouseEvent.current = false;\n    }\n  }, [delayUpdateFocusOnHover]);\n\n  return [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture] as const;\n}\n\nfunction usePreviousActiveElement(\n  { hidden, onRestoreFocus }: IContextualMenuProps,\n  targetWindow: Window | undefined,\n  hostElement: any,\n) {\n  const previousActiveElement = React.useRef<undefined | HTMLElement>();\n\n  const tryFocusPreviousActiveElement = React.useCallback(\n    (options: IPopupRestoreFocusParams) => {\n      if (onRestoreFocus) {\n        onRestoreFocus(options);\n      } else if (options?.documentContainsFocus) {\n        // Make sure that the focus method actually exists\n        // In some cases the object might exist but not be a real element.\n        // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n        previousActiveElement.current?.focus?.();\n      }\n    },\n    [onRestoreFocus],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (!hidden) {\n      const newElement = targetWindow?.document.activeElement as HTMLElement;\n      if (!hostElement.current?.contains(newElement) && newElement.tagName !== 'BODY') {\n        previousActiveElement.current = newElement;\n      }\n    } else if (previousActiveElement.current) {\n      tryFocusPreviousActiveElement({\n        originalElement: previousActiveElement.current,\n        containsFocus: true,\n        documentContainsFocus: getDocument()?.hasFocus() || false,\n      });\n\n      previousActiveElement.current = undefined;\n    }\n  }, [hidden, targetWindow?.document.activeElement, tryFocusPreviousActiveElement, hostElement]);\n\n  return [tryFocusPreviousActiveElement] as const;\n}\n\nfunction useKeyHandlers(\n  {\n    theme,\n    isSubMenu,\n    focusZoneProps: { checkForNoWrap, direction: focusZoneDirection = FocusZoneDirection.vertical } = {},\n  }: IContextualMenuProps,\n  dismiss: (ev?: any, dismissAll?: boolean | undefined) => void | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  openSubMenu: (submenuItemKey: IContextualMenuItem, target: HTMLElement) => void,\n) {\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n  const lastKeyDownWasAltOrMeta = React.useRef<boolean | undefined>();\n\n  /**\n   * Calls `shouldHandleKey` to determine whether the keyboard event should be handled;\n   * if so, stops event propagation and dismisses menu(s).\n   * @param ev - The keyboard event.\n   * @param shouldHandleKey - Returns whether we should handle this keyboard event.\n   * @param dismissAllMenus - If true, dismiss all menus. Otherwise, dismiss only the current menu.\n   * Only does anything if `shouldHandleKey` returns true.\n   * @returns Whether the event was handled.\n   */\n  const keyHandler = (\n    ev: React.KeyboardEvent<HTMLElement>,\n    shouldHandleKey: (ev: React.KeyboardEvent<HTMLElement>) => boolean,\n    dismissAllMenus?: boolean,\n  ): boolean => {\n    let handled = false;\n\n    if (shouldHandleKey(ev)) {\n      dismiss(ev, dismissAllMenus);\n      ev.preventDefault();\n      ev.stopPropagation();\n      handled = true;\n    }\n\n    return handled;\n  };\n\n  /**\n   * Checks if the submenu should be closed\n   */\n  const shouldCloseSubMenu = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    const submenuCloseKey = getRTL(theme) ? KeyCodes.right : KeyCodes.left;\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which !== submenuCloseKey || !isSubMenu) {\n      return false;\n    }\n\n    return !!(\n      focusZoneDirection === FocusZoneDirection.vertical ||\n      (checkForNoWrap && !shouldWrapFocus(ev.target as HTMLElement, 'data-no-horizontal-wrap'))\n    );\n  };\n\n  const shouldHandleKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    return (\n      // eslint-disable-next-line deprecation/deprecation\n      ev.which === KeyCodes.escape ||\n      shouldCloseSubMenu(ev) ||\n      // eslint-disable-next-line deprecation/deprecation\n      (ev.which === KeyCodes.up && (ev.altKey || ev.metaKey))\n    );\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in shouldHandleKeyUp for reasoning.\n    lastKeyDownWasAltOrMeta.current = isAltOrMeta(ev);\n\n    // On Mac, pressing escape dismisses all levels of native context menus\n    // eslint-disable-next-line deprecation/deprecation\n    const dismissAllMenus = ev.which === KeyCodes.escape && (isMac() || isIOS());\n\n    return keyHandler(ev, shouldHandleKeyDown, dismissAllMenus);\n  };\n\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n  const shouldHandleKeyUp = (ev: React.KeyboardEvent<HTMLElement>) => {\n    const keyPressIsAltOrMetaAlone = lastKeyDownWasAltOrMeta.current && isAltOrMeta(ev);\n    lastKeyDownWasAltOrMeta.current = false;\n    return !!keyPressIsAltOrMetaAlone && !(isIOS() || isMac());\n  };\n\n  const onKeyUp = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    return keyHandler(ev, shouldHandleKeyUp, true /* dismissAllMenus */);\n  };\n\n  const onMenuKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // Mark as handled if onKeyDown returns true (for handling collapse cases)\n    // or if we are attempting to expand a submenu\n    const handled = onKeyDown(ev);\n\n    if (handled || !hostElement.current) {\n      return;\n    }\n\n    // If we have a modifier key being pressed, we do not want to move focus.\n    // Otherwise, handle up and down keys.\n    const hasModifier = !!(ev.altKey || ev.metaKey);\n    // eslint-disable-next-line deprecation/deprecation\n    const isUp = ev.which === KeyCodes.up;\n    // eslint-disable-next-line deprecation/deprecation\n    const isDown = ev.which === KeyCodes.down;\n    if (!hasModifier && (isUp || isDown)) {\n      const elementToFocus = isUp\n        ? getLastFocusable(hostElement.current, hostElement.current.lastChild as HTMLElement, true)\n        : getFirstFocusable(hostElement.current, hostElement.current.firstChild as HTMLElement, true);\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  const onItemKeyDown = (item: any, ev: React.KeyboardEvent<HTMLElement>): void => {\n    const openKey = getRTL(theme) ? KeyCodes.left : KeyCodes.right;\n\n    if (\n      !item.disabled &&\n      // eslint-disable-next-line deprecation/deprecation\n      (ev.which === openKey || ev.which === KeyCodes.enter || (ev.which === KeyCodes.down && (ev.altKey || ev.metaKey)))\n    ) {\n      openSubMenu(item, ev.currentTarget as HTMLElement);\n      ev.preventDefault();\n    }\n  };\n\n  return [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown] as const;\n}\n\nfunction useScrollHandler(asyncTracker: Async) {\n  const isScrollIdle = React.useRef<boolean>(true);\n  const scrollIdleTimeoutId = React.useRef<number | undefined>();\n\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n  const onScroll = (): void => {\n    if (!isScrollIdle.current && scrollIdleTimeoutId.current !== undefined) {\n      asyncTracker.clearTimeout(scrollIdleTimeoutId.current);\n      scrollIdleTimeoutId.current = undefined;\n    } else {\n      isScrollIdle.current = false;\n    }\n\n    scrollIdleTimeoutId.current = asyncTracker.setTimeout(() => {\n      isScrollIdle.current = true;\n    }, NavigationIdleDelay);\n  };\n\n  return [onScroll, isScrollIdle] as const;\n}\n\nfunction useOnSubmenuDismiss(dismiss: (ev?: any, dismissAll?: boolean) => void, closeSubMenu: () => void) {\n  const isMountedRef = React.useRef(false);\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  /**\n   * This function is called ASYNCHRONOUSLY, and so there is a chance it is called\n   * after the component is unmounted. The isMountedRef is added to prevent\n   * from calling setState() after unmount. Do NOT copy this pattern in synchronous\n   * code.\n   */\n  const onSubMenuDismiss = (ev?: any, dismissAll?: boolean): void => {\n    if (dismissAll) {\n      dismiss(ev, dismissAll);\n    } else if (isMountedRef.current) {\n      closeSubMenu();\n    }\n  };\n\n  return onSubMenuDismiss;\n}\n\nfunction useSubmenuEnterTimer({ subMenuHoverDelay = NavigationIdleDelay }: IContextualMenuProps, asyncTracker: Async) {\n  const enterTimerRef = React.useRef<number | undefined>(undefined);\n\n  const cancelSubMenuTimer = () => {\n    if (enterTimerRef.current !== undefined) {\n      asyncTracker.clearTimeout(enterTimerRef.current);\n      enterTimerRef.current = undefined;\n    }\n  };\n\n  const startSubmenuTimer = (onTimerExpired: () => void) => {\n    enterTimerRef.current = asyncTracker.setTimeout(() => {\n      onTimerExpired();\n      cancelSubMenuTimer();\n    }, subMenuHoverDelay);\n  };\n\n  return [cancelSubMenuTimer, startSubmenuTimer, enterTimerRef as React.RefObject<number | undefined>] as const;\n}\n\nfunction useMouseHandlers(\n  props: IContextualMenuProps,\n  isScrollIdle: React.MutableRefObject<boolean>,\n  subMenuEntryTimer: React.RefObject<number | undefined>,\n  targetWindow: Window | undefined,\n  shouldUpdateFocusOnMouseEvent: React.MutableRefObject<boolean>,\n  gotMouseMove: React.MutableRefObject<boolean>,\n  expandedMenuItemKey: string | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  startSubmenuTimer: (onTimerExpired: () => void) => void,\n  cancelSubMenuTimer: () => void,\n  openSubMenu: (submenuItemKey: IContextualMenuItem, target: HTMLElement, openedByMouseClick?: boolean) => void,\n  onSubMenuDismiss: (ev?: any, dismissAll?: boolean) => void,\n  dismiss: (ev?: any, dismissAll?: boolean) => void,\n) {\n  const { target: menuTarget } = props;\n\n  const onItemMouseEnterBase = (item: any, ev: React.MouseEvent<HTMLElement>, target?: HTMLElement): void => {\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    }\n\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  const onItemMouseMoveBase = (item: any, ev: React.MouseEvent<HTMLElement>, target: HTMLElement): void => {\n    const targetElement = ev.currentTarget as HTMLElement;\n\n    // Always do this check to make sure we record a mouseMove if needed (even if we are timed out)\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    } else {\n      return;\n    }\n\n    if (\n      !isScrollIdle.current ||\n      subMenuEntryTimer.current !== undefined ||\n      targetElement === (targetWindow?.document.activeElement as HTMLElement)\n    ) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  const shouldIgnoreMouseEvent = (): boolean => {\n    return !isScrollIdle.current || !gotMouseMove.current;\n  };\n\n  const onMouseItemLeave = (item: any, ev: React.MouseEvent<HTMLElement>): void => {\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    cancelSubMenuTimer();\n\n    if (expandedMenuItemKey !== undefined) {\n      return;\n    }\n\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n    if ((hostElement.current as any).setActive) {\n      try {\n        (hostElement.current as any).setActive();\n      } catch (e) {\n        /* no-op */\n      }\n    } else {\n      hostElement.current?.focus();\n    }\n  };\n\n  /**\n   * Handles updating focus when mouseEnter or mouseMove fire.\n   * As part of updating focus, This function will also update\n   * the expand/collapse state accordingly.\n   */\n  const updateFocusOnMouseEvent = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement>,\n    target?: HTMLElement,\n  ) => {\n    const targetElement = target ? target : (ev.currentTarget as HTMLElement);\n\n    if (item.key === expandedMenuItemKey) {\n      return;\n    }\n\n    cancelSubMenuTimer();\n\n    // If the menu is not expanded we can update focus without any delay\n    if (expandedMenuItemKey === undefined) {\n      targetElement.focus();\n    }\n\n    // Delay updating expanding/dismissing the submenu\n    // and only set focus if we have not already done so\n    if (hasSubmenu(item)) {\n      ev.stopPropagation();\n      startSubmenuTimer(() => {\n        targetElement.focus();\n        openSubMenu(item, targetElement, true);\n      });\n    } else {\n      startSubmenuTimer(() => {\n        onSubMenuDismiss(ev);\n        targetElement.focus();\n      });\n    }\n  };\n\n  const onItemClick = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ): void => {\n    onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n  };\n\n  const onItemClickBase = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    target: HTMLElement,\n  ): void => {\n    const items = getSubmenuItems(item, { target: menuTarget });\n\n    // Cancel an async menu item hover timeout action from being taken and instead\n    // just trigger the click event instead.\n    cancelSubMenuTimer();\n\n    if (!hasSubmenu(item) && (!items || !items.length)) {\n      // This is an item without a menu. Click it.\n      executeItemClick(item, ev);\n    } else {\n      if (item.key !== expandedMenuItemKey) {\n        // This has a collapsed sub menu. Expand it.\n\n        // focus on the container by default when the menu is opened with a click event\n        // this differentiates from a keyboard interaction triggering the click event\n        const shouldFocusOnContainer =\n          typeof props.shouldFocusOnContainer === 'boolean'\n            ? props.shouldFocusOnContainer\n            : (ev.nativeEvent as PointerEvent).pointerType === 'mouse';\n        openSubMenu(item, target, shouldFocusOnContainer);\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  const onAnchorClick = (item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>) => {\n    executeItemClick(item, ev);\n    ev.stopPropagation();\n  };\n\n  const executeItemClick = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ): void => {\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (item.preferMenuTargetAsEventTarget) {\n      overrideTarget(ev, menuTarget);\n    }\n\n    let shouldDismiss = false;\n    if (item.onClick) {\n      shouldDismiss = !!item.onClick(ev, item);\n    } else if (props.onItemClick) {\n      shouldDismiss = !!props.onItemClick(ev, item);\n    }\n\n    if (shouldDismiss || !ev.defaultPrevented) {\n      dismiss(ev, true);\n    }\n  };\n\n  return [\n    onItemMouseEnterBase,\n    onItemMouseMoveBase,\n    onMouseItemLeave,\n    onItemClick,\n    onAnchorClick,\n    executeItemClick,\n    onItemClickBase,\n  ] as const;\n}\n//#endregion\n\nexport const ContextualMenuBase: React.FunctionComponent<IContextualMenuProps> = React.memo(\n  React.forwardRef<HTMLDivElement, IContextualMenuProps>((propsWithoutDefaults, forwardedRef) => {\n    const { ref, ...props } = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    const hostElement = React.useRef<HTMLDivElement>(null);\n    const asyncTracker = useAsync();\n    const menuId = useId(COMPONENT_NAME, props.id);\n\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: {\n        getMenuClassNames: 'styles',\n      },\n    });\n\n    const dismiss = (ev?: any, dismissAll?: boolean) => props.onDismiss?.(ev, dismissAll);\n    const [targetRef, targetWindow] = useTarget(props.target, hostElement);\n    const [tryFocusPreviousActiveElement] = usePreviousActiveElement(props, targetWindow, hostElement);\n    const [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss] = useSubMenuState(props, dismiss);\n    const [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture] = useShouldUpdateFocusOnMouseMove(props);\n    const [onScroll, isScrollIdle] = useScrollHandler(asyncTracker);\n    const [cancelSubMenuTimer, startSubmenuTimer, subMenuEntryTimer] = useSubmenuEnterTimer(props, asyncTracker);\n\n    const responsiveMode = useResponsiveMode(hostElement, props.responsiveMode);\n\n    useVisibility(props, targetWindow);\n\n    const [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown] = useKeyHandlers(props, dismiss, hostElement, openSubMenu);\n    const [\n      onItemMouseEnterBase,\n      onItemMouseMoveBase,\n      onMouseItemLeave,\n      onItemClick,\n      onAnchorClick,\n      executeItemClick,\n      onItemClickBase,\n    ] = useMouseHandlers(\n      props,\n      isScrollIdle,\n      subMenuEntryTimer,\n      targetWindow,\n      shouldUpdateFocusOnMouseEvent,\n      gotMouseMove,\n      expandedMenuItemKey,\n      hostElement,\n      startSubmenuTimer,\n      cancelSubMenuTimer,\n      openSubMenu,\n      onSubMenuDismiss,\n      dismiss,\n    );\n\n    //#region Render helpers\n\n    const onDefaultRenderMenuList = (\n      menuListProps: IContextualMenuListProps,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      defaultRender?: IRenderFunction<IContextualMenuListProps>,\n    ): JSX.Element => {\n      let indexCorrection = 0;\n      const { items, totalItemCount, hasCheckmarks, hasIcons } = menuListProps;\n\n      return (\n        <ul className={menuClassNames.list} onKeyDown={onKeyDown} onKeyUp={onKeyUp} role={'presentation'}>\n          {items.map((item, index) => {\n            const menuItem = renderMenuItem(\n              item,\n              index,\n              indexCorrection,\n              totalItemCount,\n              hasCheckmarks,\n              hasIcons,\n              menuClassNames,\n            );\n            if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n              const indexIncrease = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n              indexCorrection += indexIncrease;\n            }\n            return menuItem;\n          })}\n        </ul>\n      );\n    };\n\n    const renderFocusZone = (children: JSX.Element | null, adjustedFocusZoneProps: IFocusZoneProps): JSX.Element => {\n      const { focusZoneAs: ChildrenRenderer = FocusZone } = props;\n      return <ChildrenRenderer {...adjustedFocusZoneProps}>{children}</ChildrenRenderer>;\n    };\n\n    /**\n     * !!!IMPORTANT!!! Avoid mutating `item: IContextualMenuItem` argument. It will\n     * cause the menu items to always re-render because the component update is based on shallow comparison.\n     */\n    const renderMenuItem = (\n      item: IContextualMenuItem,\n      index: number,\n      focusableElementIndex: number,\n      totalItemCount: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n    ): JSX.Element => {\n      const renderedItems: React.ReactNode[] = [];\n      const iconProps = item.iconProps || { iconName: 'None' };\n      const {\n        getItemClassNames, // eslint-disable-line deprecation/deprecation\n        itemProps,\n      } = item;\n      const styles = itemProps ? itemProps.styles : undefined;\n\n      // We only send a dividerClassName when the item to be rendered is a divider.\n      // For all other cases, the default divider style is used.\n      const dividerClassName = item.itemType === ContextualMenuItemType.Divider ? item.className : undefined;\n      const subMenuIconClassName = item.submenuIconProps ? item.submenuIconProps.className : '';\n\n      // eslint-disable-next-line deprecation/deprecation\n      let itemClassNames: IMenuItemClassNames;\n\n      // IContextualMenuItem#getItemClassNames for backwards compatibility\n      // otherwise uses mergeStyles for class names.\n      if (getItemClassNames) {\n        itemClassNames = getItemClassNames(\n          props.theme!,\n          isItemDisabled(item),\n          expandedMenuItemKey === item.key,\n          !!getIsChecked(item),\n          !!item.href,\n          iconProps.iconName !== 'None',\n          item.className,\n          dividerClassName,\n          iconProps.className,\n          subMenuIconClassName,\n          item.primaryDisabled,\n        );\n      } else {\n        const itemStyleProps: IContextualMenuItemStyleProps = {\n          theme: props.theme!,\n          disabled: isItemDisabled(item),\n          expanded: expandedMenuItemKey === item.key,\n          checked: !!getIsChecked(item),\n          isAnchorLink: !!item.href,\n          knownIcon: iconProps.iconName !== 'None',\n          itemClassName: item.className,\n          dividerClassName,\n          iconClassName: iconProps.className,\n          subMenuClassName: subMenuIconClassName,\n          primaryDisabled: item.primaryDisabled,\n        };\n\n        // We need to generate default styles then override if styles are provided\n        // since the ContextualMenu currently handles item classNames.\n        itemClassNames = getContextualMenuItemClassNames(\n          _getMenuItemStylesFunction(menuClassNames.subComponentStyles?.menuItem, styles),\n          itemStyleProps,\n        );\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      if (item.text === '-' || item.name === '-') {\n        item.itemType = ContextualMenuItemType.Divider;\n      }\n      switch (item.itemType) {\n        case ContextualMenuItemType.Divider:\n          renderedItems.push(renderSeparator(index, itemClassNames));\n          break;\n        case ContextualMenuItemType.Header:\n          renderedItems.push(renderSeparator(index, itemClassNames));\n          const headerItem = renderHeaderMenuItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons);\n          renderedItems.push(renderListItem(headerItem, item.key || index, itemClassNames, item.title));\n          break;\n        case ContextualMenuItemType.Section:\n          renderedItems.push(renderSectionItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons));\n          break;\n        default:\n          const defaultRenderNormalItem = () =>\n            renderNormalItem(\n              item,\n              itemClassNames,\n              index,\n              focusableElementIndex,\n              totalItemCount,\n              hasCheckmarks,\n              hasIcons,\n            ) as JSX.Element;\n\n          const menuItem = props.onRenderContextualMenuItem\n            ? props.onRenderContextualMenuItem(item, defaultRenderNormalItem)\n            : defaultRenderNormalItem();\n          renderedItems.push(renderListItem(menuItem, item.key || index, itemClassNames, item.title));\n          break;\n      }\n\n      // Since multiple nodes *could* be rendered, wrap them all in a fragment with this item's key.\n      // This ensures the reconciler handles multi-item output per-node correctly and does not re-mount content.\n      return <React.Fragment key={item.key}>{renderedItems}</React.Fragment>;\n    };\n\n    const defaultMenuItemRenderer = (\n      item: IContextualMenuItemRenderProps,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n    ): React.ReactNode => {\n      const { index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons } = item;\n      return renderMenuItem(\n        item,\n        index,\n        focusableElementIndex,\n        totalItemCount,\n        hasCheckmarks,\n        hasIcons,\n        menuClassNames,\n      );\n    };\n\n    const renderSectionItem = (\n      sectionItem: IContextualMenuItem,\n      // eslint-disable-next-line deprecation/deprecation\n      itemClassNames: IMenuItemClassNames,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      index: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ) => {\n      const sectionProps = sectionItem.sectionProps;\n      if (!sectionProps) {\n        return;\n      }\n\n      let headerItem;\n      let groupProps;\n      if (sectionProps.title) {\n        let headerContextualMenuItem: IContextualMenuItem | undefined = undefined;\n        let ariaLabelledby = '';\n        if (typeof sectionProps.title === 'string') {\n          // Since title is a user-facing string, it needs to be stripped\n          // of whitespace in order to build a valid element ID\n          const id = menuId + sectionProps.title.replace(/\\s/g, '');\n          headerContextualMenuItem = {\n            key: `section-${sectionProps.title}-title`,\n            itemType: ContextualMenuItemType.Header,\n            text: sectionProps.title,\n            id,\n          };\n          ariaLabelledby = id;\n        } else {\n          const id = sectionProps.title.id || menuId + sectionProps.title.key.replace(/\\s/g, '');\n          headerContextualMenuItem = { ...sectionProps.title, id };\n          ariaLabelledby = id;\n        }\n\n        if (headerContextualMenuItem) {\n          groupProps = {\n            role: 'group',\n            'aria-labelledby': ariaLabelledby,\n          };\n          headerItem = renderHeaderMenuItem(\n            headerContextualMenuItem,\n            itemClassNames,\n            menuClassNames,\n            index,\n            hasCheckmarks,\n            hasIcons,\n          );\n        }\n      }\n\n      if (sectionProps.items && sectionProps.items.length > 0) {\n        let correctedIndex = 0;\n        return (\n          <li role=\"presentation\" key={sectionProps.key || sectionItem.key || `section-${index}`}>\n            <div {...groupProps}>\n              <ul className={menuClassNames.list} role=\"presentation\">\n                {sectionProps.topDivider && renderSeparator(index, itemClassNames, true, true)}\n                {headerItem && renderListItem(headerItem, sectionItem.key || index, itemClassNames, sectionItem.title)}\n                {sectionProps.items.map((contextualMenuItem, itemsIndex) => {\n                  const menuItem = renderMenuItem(\n                    contextualMenuItem,\n                    itemsIndex,\n                    correctedIndex,\n                    getItemCount(sectionProps.items),\n                    hasCheckmarks,\n                    hasIcons,\n                    menuClassNames,\n                  );\n                  if (\n                    contextualMenuItem.itemType !== ContextualMenuItemType.Divider &&\n                    contextualMenuItem.itemType !== ContextualMenuItemType.Header\n                  ) {\n                    const indexIncrease = contextualMenuItem.customOnRenderListLength\n                      ? contextualMenuItem.customOnRenderListLength\n                      : 1;\n                    correctedIndex += indexIncrease;\n                  }\n                  return menuItem;\n                })}\n                {sectionProps.bottomDivider && renderSeparator(index, itemClassNames, false, true)}\n              </ul>\n            </div>\n          </li>\n        );\n      }\n    };\n\n    const renderListItem = (\n      content: React.ReactNode,\n      key: string | number,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      title?: string,\n    ) => {\n      return (\n        <li role=\"presentation\" title={title} key={key} className={classNames.item}>\n          {content}\n        </li>\n      );\n    };\n\n    const renderSeparator = (\n      index: number,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      top?: boolean,\n      fromSection?: boolean,\n    ): React.ReactNode => {\n      if (fromSection || index > 0) {\n        return (\n          <li\n            role=\"separator\"\n            key={'separator-' + index + (top === undefined ? '' : top ? '-top' : '-bottom')}\n            className={classNames.divider}\n            aria-hidden=\"true\"\n          />\n        );\n      }\n      return null;\n    };\n\n    const renderNormalItem = (\n      item: IContextualMenuItem,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      index: number,\n      focusableElementIndex: number,\n      totalItemCount: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ): React.ReactNode => {\n      if (item.onRender) {\n        return item.onRender(\n          { 'aria-posinset': focusableElementIndex + 1, 'aria-setsize': totalItemCount, ...item },\n          dismiss,\n        );\n      }\n\n      const { contextualMenuItemAs } = props;\n\n      const commonProps = {\n        item,\n        classNames,\n        index,\n        focusableElementIndex,\n        totalItemCount,\n        hasCheckmarks,\n        hasIcons,\n        contextualMenuItemAs,\n        onItemMouseEnter: onItemMouseEnterBase,\n        onItemMouseLeave: onMouseItemLeave,\n        onItemMouseMove: onItemMouseMoveBase,\n        onItemMouseDown,\n        executeItemClick,\n        onItemKeyDown,\n        expandedMenuItemKey,\n        openSubMenu,\n        dismissSubMenu: onSubMenuDismiss,\n        dismissMenu: dismiss,\n      } as const;\n\n      if (item.href) {\n        return <ContextualMenuAnchor {...commonProps} onItemClick={onAnchorClick} />;\n      }\n\n      if (item.split && hasSubmenu(item)) {\n        return (\n          <ContextualMenuSplitButton\n            {...commonProps}\n            onItemClick={onItemClick}\n            onItemClickBase={onItemClickBase}\n            onTap={cancelSubMenuTimer}\n          />\n        );\n      }\n\n      return <ContextualMenuButton {...commonProps} onItemClick={onItemClick} onItemClickBase={onItemClickBase} />;\n    };\n\n    const renderHeaderMenuItem = (\n      item: IContextualMenuItem,\n      // eslint-disable-next-line deprecation/deprecation\n      itemClassNames: IMenuItemClassNames,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      index: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ): React.ReactNode => {\n      const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem } = props;\n      const { itemProps, id } = item;\n      const divHtmlProperties =\n        itemProps && getNativeProps<React.HTMLAttributes<HTMLDivElement>>(itemProps, divProperties);\n      return (\n        // eslint-disable-next-line deprecation/deprecation\n        <div id={id} className={menuClassNames.header} {...divHtmlProperties} style={item.style}>\n          <ChildrenRenderer\n            item={item}\n            classNames={itemClassNames}\n            index={index}\n            onCheckmarkClick={hasCheckmarks ? onItemClick : undefined}\n            hasIcons={hasIcons}\n            {...itemProps}\n          />\n        </div>\n      );\n    };\n    //#endregion\n\n    //#region Main render\n    let { isBeakVisible } = props;\n\n    const {\n      items,\n      labelElementId,\n      id,\n      className,\n      beakWidth,\n      directionalHint,\n      directionalHintForRTL,\n      alignTargetEdge,\n      gapSpace,\n      coverTarget,\n      ariaLabel,\n      doNotLayer,\n      target,\n      bounds,\n      useTargetWidth,\n      useTargetAsMinWidth,\n      directionalHintFixed,\n      shouldFocusOnMount,\n      shouldFocusOnContainer,\n      title,\n      styles,\n      theme,\n      calloutProps,\n      onRenderSubMenu = onDefaultRenderSubMenu,\n      onRenderMenuList = (\n        menuListProps: IContextualMenuListProps,\n        defaultRender?: IRenderFunction<IContextualMenuListProps>,\n      ) => onDefaultRenderMenuList(menuListProps, classNames, defaultRender),\n      focusZoneProps,\n      // eslint-disable-next-line deprecation/deprecation\n      getMenuClassNames,\n    } = props;\n\n    const classNames = getMenuClassNames\n      ? getMenuClassNames(theme!, className)\n      : getClassNames(styles, {\n          theme: theme!,\n          className,\n        });\n\n    const hasIcons = itemsHaveIcons(items);\n\n    function itemsHaveIcons(contextualMenuItems: IContextualMenuItem[]): boolean {\n      for (const item of contextualMenuItems) {\n        if (item.iconProps) {\n          return true;\n        }\n\n        if (\n          item.itemType === ContextualMenuItemType.Section &&\n          item.sectionProps &&\n          itemsHaveIcons(item.sectionProps.items)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    const adjustedFocusZoneProps = {\n      direction: FocusZoneDirection.vertical,\n      handleTabKey: FocusZoneTabbableElements.all,\n      isCircularNavigation: true,\n      ...focusZoneProps,\n      className: css(classNames.root, props.focusZoneProps?.className),\n    };\n\n    const hasCheckmarks = canAnyMenuItemsCheck(items);\n    const submenuProps = expandedMenuItemKey && props.hidden !== true ? getSubmenuProps() : null;\n\n    isBeakVisible = isBeakVisible === undefined ? responsiveMode! <= ResponsiveMode.medium : isBeakVisible;\n    /**\n     * When useTargetWidth is true, get the width of the target element and apply it for the context menu container\n     */\n    let contextMenuStyle: React.CSSProperties;\n    const targetAsHtmlElement = targetRef.current as HTMLElement;\n    if ((useTargetWidth || useTargetAsMinWidth) && targetAsHtmlElement && targetAsHtmlElement.offsetWidth) {\n      const targetBoundingRect = targetAsHtmlElement.getBoundingClientRect();\n      const targetWidth = targetBoundingRect.width - 2; /* Accounts for 1px border */\n\n      if (useTargetWidth) {\n        contextMenuStyle = {\n          width: targetWidth,\n        };\n      } else if (useTargetAsMinWidth) {\n        contextMenuStyle = {\n          minWidth: targetWidth,\n        };\n      }\n    }\n\n    // The menu should only return if items were provided, if no items were provided then it should not appear.\n    if (items && items.length > 0) {\n      const totalItemCount = getItemCount(items);\n\n      const calloutStyles = classNames.subComponentStyles\n        ? (classNames.subComponentStyles.callout as IStyleFunctionOrObject<\n            ICalloutContentStyleProps,\n            ICalloutContentStyles\n          >)\n        : undefined;\n\n      return (\n        <MenuContext.Consumer>\n          {menuContext => (\n            <Callout\n              styles={calloutStyles}\n              onRestoreFocus={tryFocusPreviousActiveElement}\n              {...calloutProps}\n              target={target || (menuContext.target as IContextualMenuProps['target'])}\n              isBeakVisible={isBeakVisible}\n              beakWidth={beakWidth}\n              directionalHint={directionalHint}\n              directionalHintForRTL={directionalHintForRTL}\n              gapSpace={gapSpace}\n              coverTarget={coverTarget}\n              doNotLayer={doNotLayer}\n              className={css('ms-ContextualMenu-Callout', calloutProps && calloutProps.className)}\n              setInitialFocus={shouldFocusOnMount}\n              onDismiss={props.onDismiss || menuContext.onDismiss}\n              onScroll={onScroll}\n              bounds={bounds}\n              directionalHintFixed={directionalHintFixed}\n              alignTargetEdge={alignTargetEdge}\n              hidden={props.hidden || menuContext.hidden}\n              ref={forwardedRef}\n            >\n              <div\n                style={contextMenuStyle}\n                ref={hostElement}\n                id={id}\n                className={classNames.container}\n                tabIndex={shouldFocusOnContainer ? 0 : -1}\n                onKeyDown={onMenuKeyDown}\n                onKeyUp={onKeyUp}\n                onFocusCapture={onMenuFocusCapture}\n                aria-label={ariaLabel}\n                aria-labelledby={labelElementId}\n                role={'menu'}\n              >\n                {title && <div className={classNames.title}> {title} </div>}\n                {items && items.length\n                  ? renderFocusZone(\n                      onRenderMenuList(\n                        {\n                          ariaLabel,\n                          items,\n                          totalItemCount,\n                          hasCheckmarks,\n                          hasIcons,\n                          defaultMenuItemRenderer: (item: IContextualMenuItemRenderProps) =>\n                            defaultMenuItemRenderer(item, classNames),\n                          labelElementId,\n                        },\n                        (\n                          menuListProps: IContextualMenuListProps,\n                          defaultRender?: IRenderFunction<IContextualMenuListProps>,\n                        ) => onDefaultRenderMenuList(menuListProps, classNames, defaultRender),\n                      ),\n                      adjustedFocusZoneProps,\n                    )\n                  : null}\n                {submenuProps && onRenderSubMenu(submenuProps, onDefaultRenderSubMenu)}\n              </div>\n              <FocusRects />\n            </Callout>\n          )}\n        </MenuContext.Consumer>\n      );\n    } else {\n      return null;\n    }\n    //#endregion\n  }),\n  (prevProps, newProps) => {\n    if (!newProps.shouldUpdateWhenHidden && prevProps.hidden && newProps.hidden) {\n      // Do not update when hidden.\n      return true;\n    }\n\n    return shallowCompare(prevProps, newProps);\n  },\n);\nContextualMenuBase.displayName = 'ContextualMenuBase';\n\n/**\n * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n */\nfunction isAltOrMeta(ev: React.KeyboardEvent<HTMLElement>): boolean {\n  // eslint-disable-next-line deprecation/deprecation\n  return ev.which === KeyCodes.alt || ev.key === 'Meta';\n}\n\nfunction onItemMouseDown(item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>): void {\n  item.onMouseDown?.(item, ev);\n}\n\nfunction onDefaultRenderSubMenu(\n  subMenuProps: IContextualMenuProps,\n  defaultRender?: IRenderFunction<IContextualMenuProps>,\n): JSX.Element {\n  throw Error(\n    'ContextualMenuBase: onRenderSubMenu callback is null or undefined. ' +\n      'Please ensure to set `onRenderSubMenu` property either manually or with `styled` helper.',\n  );\n}\n\n/**\n * Returns the item that matches a given key if any.\n * @param key - The key of the item to match\n * @param items - The items to look for the key\n */\nfunction findItemByKeyFromItems(key: string, items: IContextualMenuItem[]): IContextualMenuItem | undefined {\n  for (const item of items) {\n    if (item.itemType === ContextualMenuItemType.Section && item.sectionProps) {\n      const match = findItemByKeyFromItems(key, item.sectionProps.items);\n      if (match) {\n        return match;\n      }\n    } else if (item.key && item.key === key) {\n      return item;\n    }\n  }\n}\n\nfunction getOnClickWithOverrideTarget(\n  onClick:\n    | ((\n        ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n        item?: IContextualMenuItem | undefined,\n      ) => boolean | void)\n    | undefined,\n  target: Target | undefined,\n) {\n  return onClick\n    ? (\n        ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n        item?: IContextualMenuItem | undefined,\n      ) => {\n        overrideTarget(ev, target);\n\n        return onClick(ev, item);\n      }\n    : onClick;\n}\n\nfunction overrideTarget(\n  ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n  target?: Target,\n): void {\n  if (ev && target) {\n    ev.persist();\n\n    if (target instanceof Event) {\n      ev.target = target.target as HTMLElement;\n    } else if (target instanceof Element) {\n      ev.target = target;\n    }\n  }\n}\n", "import * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport type { IFocusZoneProps } from '../../FocusZone';\nimport type { IIconProps } from '../../Icon';\nimport type { ICalloutProps, ICalloutContentStyleProps } from '../../Callout';\nimport type { ITheme, IStyle } from '../../Styling';\nimport type { IButtonStyles } from '../../Button';\nimport type { IRefObject, IBaseProps, IRectangle, IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IWithResponsiveModeState } from '../../ResponsiveMode';\nimport type { IContextualMenuClassNames, IMenuItemClassNames } from './ContextualMenu.classNames';\nimport type { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport type {\n  IContextualMenuItemProps,\n  IContextualMenuRenderItem,\n  IContextualMenuItemStyleProps,\n  IContextualMenuItemRenderFunctions,\n} from './ContextualMenuItem.types';\nimport type { IKeytipProps } from '../../Keytip';\nimport type { Target } from '@fluentui/react-hooks';\nimport type { IPopupRestoreFocusParams } from '../../Popup';\n\nexport { DirectionalHint } from '../../common/DirectionalHint';\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport enum ContextualMenuItemType {\n  Normal = 0,\n  Divider = 1,\n  Header = 2,\n  Section = 3,\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenu {}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuProps\n  extends IBaseProps<IContextualMenu>,\n    React.RefAttributes<HTMLDivElement>,\n    // eslint-disable-next-line deprecation/deprecation\n    IWithResponsiveModeState {\n  /**\n   * Optional callback to access the IContextualMenu interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   * @deprecated ContextualMenu has no imperative methods, so componentRef no longer returns a ref\n   */\n  componentRef?: IRefObject<IContextualMenu>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IContextualMenuStyleProps, IContextualMenuStyles>;\n\n  /**\n   * Theme provided by higher-order component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional CSS class to apply to the ContextualMenu.\n   */\n  className?: string;\n\n  /**\n   * The target that the ContextualMenu should try to position itself based on.\n   * It can be either an element, a query selector string resolving to a valid element,\n   * or a MouseEvent. If a MouseEvent is given, the origin point of the event will be used.\n   */\n  target?: Target;\n\n  /**\n   * How the menu should be positioned\n   * @defaultvalue DirectionalHint.bottomAutoEdge\n   */\n  directionalHint?: DirectionalHint;\n\n  /**\n   * How the menu should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used.\n   */\n  directionalHintForRTL?: DirectionalHint;\n\n  /**\n   * The gap between the ContextualMenu and the target\n   * @defaultvalue 0\n   */\n  gapSpace?: number;\n\n  /**\n   * The width of the beak.\n   * @defaultvalue 16\n   */\n  beakWidth?: number;\n\n  /**\n   * If true the context menu will render as the same width as the target element\n   * @defaultvalue false\n   */\n  useTargetWidth?: boolean;\n\n  /**\n   * If true the context menu will have a minimum width equal to the width of the target element\n   * @defaultvalue false\n   */\n  useTargetAsMinWidth?: boolean;\n\n  /**\n   * The bounding rectangle (or callback that returns a rectangle) which the contextual menu can appear in.\n   */\n  bounds?: IRectangle | ((target?: Target, targetWindow?: Window) => IRectangle | undefined);\n\n  /**\n   * If true then the beak is visible. If false it will not be shown.\n   */\n  isBeakVisible?: boolean;\n\n  /**\n   * If true, the menu will be positioned to cover the target.\n   * If false, it will be positioned next to the target.\n   * @defaultvalue false\n   */\n  coverTarget?: boolean;\n\n  /**\n   * If true the positioning logic will prefer to flip edges rather than to nudge the rectangle to fit within bounds,\n   * thus making sure the element aligns perfectly with target's alignment edge\n   */\n  alignTargetEdge?: boolean;\n\n  /**\n   * Menu items to display.\n   */\n  items: IContextualMenuItem[];\n\n  /**\n   * Used as `aria-labelledby` for the menu element inside the callout.\n   */\n  labelElementId?: string;\n\n  /**\n   * Whether to focus on the menu when mounted.\n   * @defaultvalue true\n   */\n  shouldFocusOnMount?: boolean;\n\n  /**\n   * Whether to focus on the contextual menu container (as opposed to the first menu item).\n   *\n   * Avoid using as it breaks the default focus behaviour when using assistive technologies.\n   */\n  shouldFocusOnContainer?: boolean;\n\n  /**\n   * Callback when the ContextualMenu tries to close. If `dismissAll` is true then all\n   * submenus will be dismissed.\n   */\n  onDismiss?: (ev?: Event | React.MouseEvent | React.KeyboardEvent, dismissAll?: boolean) => void;\n\n  /**\n   * Click handler which is invoked if `onClick` is not passed for individual contextual\n   * menu item.\n   * Returning true will dismiss the menu even if `ev.preventDefault()` was called.\n   */\n  onItemClick?: (\n    ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    item?: IContextualMenuItem,\n  ) => boolean | void;\n\n  /**\n   * Whether this menu is a submenu of another menu.\n   */\n  isSubMenu?: boolean;\n\n  /**\n   * ID for the ContextualMenu's root element (inside the callout).\n   * Should be used for `aria-owns` and other such uses, rather than direct reference for programmatic purposes.\n   */\n  id?: string;\n\n  /**\n   * Accessible label for the ContextualMenu's root element (inside the callout).\n   */\n  ariaLabel?: string;\n\n  /**\n   * If true do not render on a new layer. If false render on a new layer.\n   * @defaultvalue false\n   */\n  doNotLayer?: boolean;\n\n  /**\n   * If true the position will not change sides in an attempt to fit the ContextualMenu within bounds.\n   * It will still attempt to align it to whatever bounds are given.\n   * @defaultvalue false\n   */\n  directionalHintFixed?: boolean;\n\n  /**\n   * Callback for when the menu has been opened.\n   */\n  onMenuOpened?: (contextualMenu?: IContextualMenuProps) => void;\n\n  /**\n   * Callback for when the menu is being closed (removing from the DOM).\n   */\n  onMenuDismissed?: (contextualMenu?: IContextualMenuProps) => void;\n\n  /**\n   * Additional custom props for the Callout.\n   */\n  calloutProps?: ICalloutProps;\n\n  /**\n   * Title to be displayed at the top of the menu, above the items.\n   */\n  title?: string;\n\n  /**\n   * Method to provide the classnames to style the contextual menu.\n   * @deprecated Use `styles` instead to leverage mergeStyles API.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getMenuClassNames?: (theme: ITheme, className?: string) => IContextualMenuClassNames;\n\n  /** Custom render function for a submenu. */\n  onRenderSubMenu?: IRenderFunction<IContextualMenuProps>;\n\n  /**\n   * Method to override the render of the list of menu items.\n   */\n  onRenderMenuList?: IRenderFunction<IContextualMenuListProps>;\n\n  /**\n   * Method to wrap menu items. Gives the ability to wrap a custom\n   * tooltip to each menu item button.\n   */\n  onRenderContextualMenuItem?: IRenderFunction<IContextualMenuItem>;\n\n  /**\n   * Delay (in milliseconds) to wait before expanding / dismissing a submenu on mouseEnter or mouseLeave\n   */\n  subMenuHoverDelay?: number;\n\n  /**\n   * Custom component to use for rendering individual menu items.\n   * @defaultvalue ContextualMenuItem\n   */\n  contextualMenuItemAs?:\n    | React.ComponentClass<IContextualMenuItemProps>\n    | React.FunctionComponent<IContextualMenuItemProps>;\n\n  /**\n   * Props to pass down to the FocusZone.\n   * NOTE: the default FocusZoneDirection will be used unless a direction\n   * is specified in the focusZoneProps (even if other focusZoneProps are defined)\n   * @defaultvalue \\{ direction: FocusZoneDirection.vertical \\}\n   */\n  focusZoneProps?: IFocusZoneProps;\n\n  /**\n   * Custom component to use for rendering the focus zone (the root).\n   * @defaultValue FocusZone\n   */\n  focusZoneAs?: React.ComponentClass<IFocusZoneProps> | React.FunctionComponent<IFocusZoneProps>;\n\n  /**\n   * If true, renders the ContextualMenu in a hidden state.\n   * Use this flag, rather than rendering a ContextualMenu conditionally based on visibility,\n   * to improve rendering performance when it becomes visible.\n   * Note: When ContextualMenu is hidden its content will not be rendered. It will only render\n   * once the ContextualMenu is visible.\n   */\n  hidden?: boolean;\n\n  /**\n   * If true, the menu will be updated even when `hidden=true`. Note that this will consume\n   * resources to update even when nothing is being shown to the user. This might be helpful if\n   * your updates are small and you want the menu to display quickly when `hidden` is set to false.\n   */\n  shouldUpdateWhenHidden?: boolean;\n\n  /**\n   * If true, the contextual menu will not be updated until focus enters the menu via other means.\n   * This will only result in different behavior when `shouldFocusOnMount = false`.\n   */\n  delayUpdateFocusOnHover?: boolean;\n\n  /**\n   * Called when the component is unmounting, and focus needs to be restored. If this is provided,\n   * focus will not be restored automatically, and you'll need to call `params.originalElement.focus()`.\n   */\n  onRestoreFocus?: (params: IPopupRestoreFocusParams) => void;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuItemRenderProps extends IContextualMenuItem {\n  index: number;\n  focusableElementIndex: number;\n  totalItemCount: number;\n  hasCheckmarks: boolean;\n  hasIcons: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuListProps {\n  items: IContextualMenuItem[];\n  totalItemCount: number;\n  hasCheckmarks: boolean;\n  hasIcons: boolean;\n  defaultMenuItemRenderer: (item: IContextualMenuItemRenderProps) => React.ReactNode;\n  ariaLabel?: string;\n  labelElementId?: string;\n  role?: string;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuItem {\n  /**\n   * Optional callback to access the IContextualMenuRenderItem interface.\n   * This will get passed down to ContextualMenuItem.\n   */\n  componentRef?: IRefObject<IContextualMenuRenderItem>;\n\n  /**\n   * Unique id to identify the item\n   */\n  key: string;\n\n  /**\n   * Text of the menu item.\n   * If a standard hyphen (-) is passed in, then the item will be rendered as a divider.\n   * If a dash must appear as text, use an emdash (—), figuredash (‒), or minus symbol (−) instead.\n   */\n  text?: string;\n\n  /**\n   * Secondary description for the menu item to display\n   */\n  secondaryText?: string;\n\n  itemType?: ContextualMenuItemType;\n\n  /**\n   * Props for an icon to display next to the item.\n   */\n  iconProps?: IIconProps;\n\n  /**\n   * Custom render function for the menu item icon.\n   * iconProps must be present on at least one item for onRenderIcon to be called.\n   */\n  onRenderIcon?: IRenderFunction<IContextualMenuItemProps>;\n\n  /**\n   * Props for the Icon used for the chevron.\n   */\n  submenuIconProps?: IIconProps;\n\n  /**\n   * Whether the menu item is disabled\n   * @defaultvalue false\n   */\n  disabled?: boolean;\n\n  /**\n   * If the menu item is a split button, this prop disables purely the primary action of the button.\n   * @defaultvalue false\n   */\n  primaryDisabled?: boolean;\n\n  /**\n   * @deprecated Not used\n   */\n  shortCut?: string;\n\n  /**\n   * Whether or not this menu item can be checked\n   * @defaultvalue false\n   */\n  canCheck?: boolean;\n\n  /**\n   * Whether or not this menu item is currently checked.\n   * @defaultvalue false\n   */\n  checked?: boolean;\n\n  /**\n   * Whether or not this menu item is a splitButton.\n   * @defaultvalue false\n   */\n  split?: boolean;\n\n  /**\n   * Any custom data the developer wishes to associate with the menu item.\n   */\n  data?: any;\n\n  /**\n   * Callback for when the menu item is invoked. If `ev.preventDefault()` is called in `onClick`,\n   * the click will not close the menu.\n   *\n   * Only for ContextualMenu items, returning true will dismiss the menu even if `ev.preventDefault()`\n   * was called (does not apply for button or CommandBar sub-menu items).\n   */\n  onClick?: (\n    ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    item?: IContextualMenuItem,\n  ) => boolean | void;\n\n  /**\n   * Navigate to this URL when the menu item is clicked.\n   */\n  href?: string;\n\n  /**\n   * Target window when using `href`.\n   */\n  target?: string;\n\n  /**\n   * Link relation setting when using `href`.\n   * If `target` is `_blank`, `rel` is defaulted to a value to prevent clickjacking.\n   */\n  rel?: string;\n\n  /**\n   * Properties to apply to a submenu to this item.\n   *\n   * The ContextualMenu will provide default values for `target`, `onDismiss`, `isSubMenu`,\n   * `id`, `shouldFocusOnMount`, `directionalHint`, `className`, and `gapSpace`, all of which\n   * can be overridden.\n   */\n  subMenuProps?: IContextualMenuProps;\n\n  /**\n   * Method to provide the classnames to style the individual items inside a menu.\n   * @deprecated Use `styles` prop of `IContextualMenuItemProps` to leverage mergeStyles API.\n   */\n  getItemClassNames?: (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n  ) => // eslint-disable-next-line deprecation/deprecation\n  IMenuItemClassNames;\n\n  /**\n   * Optional IContextualMenuItemProps overrides to customize behaviors such as item styling via `styles`.\n   */\n  itemProps?: Partial<IContextualMenuItemProps>;\n\n  /**\n   * Method to provide the classnames to style the Vertical Divider of a split button inside a menu.\n   * Default value is the `getSplitButtonVerticalDividerClassNames` func defined in `ContextualMenu.classnames.ts`.\n   * @defaultvalue getSplitButtonVerticalDividerClassNames\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getSplitButtonVerticalDividerClassNames?: (theme: ITheme) => IVerticalDividerClassNames;\n\n  /**\n   * Properties to apply to render this item as a section.\n   * This prop is mutually exclusive with `subMenuProps`.\n   */\n  sectionProps?: IContextualMenuSection;\n\n  /**\n   * Additional CSS class to apply to the menu item.\n   */\n  className?: string;\n\n  /**\n   * Additional styles to apply to the menu item\n   * @deprecated Use `styles` instead to leverage mergeStyles API.\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Custom accessible label for the element.\n   * If no override is specified, the `aria-label` attribute will contain the item name.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Title (tooltip) text displayed when hovering over an item.\n   */\n  title?: string;\n\n  /**\n   * Method to custom render this menu item.\n   * For keyboard accessibility, the top-level rendered item should be a focusable element\n   * (like an anchor or a button) or have the `data-is-focusable` property set to true.\n   *\n   * @param item - Item to render. Will typically be of type `IContextualMenuItem`.\n   * (When rendering a command bar item, will be `ICommandBarItemProps`.)\n   * @param dismissMenu - Function to dismiss the menu. Can be used to ensure that a custom menu\n   * item click dismisses the menu. (Will be undefined if rendering a command bar item.)\n   */\n  onRender?: (item: any, dismissMenu: (ev?: any, dismissAll?: boolean) => void) => React.ReactNode;\n\n  /**\n   * Method to customize sub-components rendering of this menu item.\n   *\n   * @param props - Props used to pass into render functions\n   * @param defaultRenders - Default render functions that renders default sub-components\n   */\n  onRenderContent?: (\n    props: IContextualMenuItemProps,\n    defaultRenders: IContextualMenuItemRenderFunctions,\n  ) => React.ReactNode;\n\n  /**\n   * A function to be executed on mouse down. This is executed before an `onClick` event and can\n   * be used to interrupt native on click events as well. The click event should still handle\n   * the commands. This should only be used in special cases when react and non-react are mixed.\n   */\n  onMouseDown?: (item: IContextualMenuItem, event: React.MouseEvent<HTMLElement>) => void;\n\n  /**\n   * Optional override for the menu button's role.\n   * @default `menuitem` or `menuitemcheckbox`\n   */\n  role?: string;\n\n  /**\n   * When rendering a custom menu component that is passed in, the component might also be a list of\n   * elements. We want to keep track of the correct index our menu is using based off of\n   * the length of the custom list. It is up to the user to increment the count for their list.\n   */\n  customOnRenderListLength?: number;\n\n  /**\n   * Keytip for this contextual menu item\n   */\n  keytipProps?: IKeytipProps;\n\n  /**\n   * @deprecated Use subMenuProps.items instead.\n   */\n  items?: IContextualMenuItem[];\n\n  /**\n   * Any additional properties to use when custom rendering menu items.\n   */\n  [propertyName: string]: any;\n\n  /**\n   * Detailed description of the menu item for the benefit of screen readers.\n   */\n  ariaDescription?: string;\n\n  /**\n   * ID of the element that contains additional detailed descriptive information for screen readers\n   */\n  ariaDescribedBy?: string;\n\n  /**\n   * @deprecated No longer used. All contextual menu items are now focusable when disabled.\n   */\n  inactive?: boolean;\n\n  /**\n   * Text of the menu item.\n   * @deprecated Use `text` instead.\n   */\n  name?: string;\n\n  /**\n   * Flag which indicates that, when the item is clicked, the 'target' for the click event should be\n   * overridden to reflect the launch target from the root menu.\n   * This avoids a situation where the 'target' of the event may wind up detached from the DOM\n   * when the menu is dismissed in response to the click.\n   */\n  preferMenuTargetAsEventTarget?: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuSection extends React.ClassAttributes<any> {\n  /**\n   * The items to include inside the section.\n   */\n  items: IContextualMenuItem[];\n\n  /**\n   * The optional section title.\n   */\n  title?: string | IContextualMenuItem;\n\n  /**\n   * If set to true, the section will display a divider at the top of the section.\n   */\n  topDivider?: boolean;\n\n  /**\n   * If set to true, the section will display a divider at the bottom of the section.\n   */\n  bottomDivider?: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IMenuItemStyles extends IButtonStyles {\n  /**\n   * Styles for a menu item that is an anchor link.\n   */\n  item?: IStyle;\n\n  /**\n   * Styles for the content inside the button/link of the menuItem.\n   */\n  linkContent?: IStyle;\n\n  /**\n   * Styles for a menu item that is an anchor link.\n   */\n  anchorLink?: IStyle;\n\n  /**\n   * Default icon color style for known icons.\n   */\n  iconColor?: IStyle;\n\n  /**\n   * Default style for checkmark icons.\n   */\n  checkmarkIcon?: IStyle;\n\n  /**\n   * Styles for the submenu icon of a menu item.\n   */\n  subMenuIcon?: IStyle;\n\n  /**\n   * Styles for a divider item of a ContextualMenu.\n   */\n  divider?: IStyle;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuStyleProps {\n  theme: ITheme;\n\n  className?: string;\n\n  // Insert ContextualMenu style props below\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuStyles {\n  /**\n   * Style override for the contextual menu title.\n   */\n  title: IStyle;\n\n  /**\n   * Style for the container which parents all menu items.\n   */\n  container: IStyle;\n\n  /**\n   * Base styles for the root element of all ContextualMenus.\n   */\n  root: IStyle;\n\n  /**\n   * Styles for the header item of a ContextualMenu\n   */\n  header: IStyle;\n\n  /**\n   * Styles for the list that contains all menuItems.\n   */\n  list: IStyle;\n\n  /**\n   * SubComponent styles.\n   */\n  subComponentStyles: IContextualMenuSubComponentStyles;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuSubComponentStyles {\n  /** Styles for the callout that hosts the ContextualMenu options. */\n  callout: IStyleFunctionOrObject<ICalloutContentStyleProps, any>;\n\n  /** Styles for each menu item. */\n  menuItem: IStyleFunctionOrObject<IContextualMenuItemStyleProps, any>;\n}\n", "// Do not modify this file; it is generated as part of publish.\n// The checked in version is a placeholder only and will not be updated.\nimport { setVersion } from '@fluentui/set-version';\nsetVersion('@fluentui/react-focus', '8.8.28');", "import * as React from 'react';\nimport { FocusZoneDirection, FocusZoneTabbableElements } from './FocusZone.types';\nimport {\n  KeyCodes,\n  css,\n  elementContains,\n  getDocument,\n  getElementIndexPath,\n  getFocusableByIndexPath,\n  getId,\n  getNativeProps,\n  getNextElement,\n  getParent,\n  getPreviousElement,\n  getRTL,\n  htmlElementProperties,\n  initializeComponentRef,\n  isElementFocusSubZone,\n  isElementFocusZone,\n  isElementTabbable,\n  shouldWrapFocus,\n  warnDeprecations,\n  portalContainsElement,\n  findScrollableParent,\n  createMergedRef,\n  isElementVisibleAndNotHidden,\n} from '@fluentui/utilities';\nimport { mergeStyles } from '@fluentui/merge-styles';\nimport { getTheme } from '@fluentui/style-utilities';\nimport type { IFocusZone, IFocusZoneProps } from './FocusZone.types';\nimport type { Point } from '@fluentui/utilities';\nimport type { ITheme } from '@fluentui/style-utilities';\n\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\nconst IS_ENTER_DISABLED_ATTRIBUTE = 'data-disable-click-on-enter';\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\nconst TABINDEX = 'tabindex';\nconst NO_VERTICAL_WRAP = 'data-no-vertical-wrap';\nconst NO_HORIZONTAL_WRAP = 'data-no-horizontal-wrap';\nconst LARGE_DISTANCE_FROM_CENTER = 999999999;\nconst LARGE_NEGATIVE_DISTANCE_FROM_CENTER = -999999999;\n\nlet focusZoneStyles: string;\n\nconst focusZoneClass: string = 'ms-FocusZone';\n\n/**\n * Raises a click on a target element based on a keyboard event.\n */\nfunction raiseClickFromKeyboardEvent(target: Element, ev?: React.KeyboardEvent<HTMLElement>): void {\n  let event;\n  if (typeof MouseEvent === 'function') {\n    event = new MouseEvent('click', {\n      ctrlKey: ev?.ctrlKey,\n      metaKey: ev?.metaKey,\n      shiftKey: ev?.shiftKey,\n      altKey: ev?.altKey,\n      bubbles: ev?.bubbles,\n      cancelable: ev?.cancelable,\n    });\n  } else {\n    event = document.createEvent('MouseEvents');\n    // eslint-disable-next-line deprecation/deprecation\n    event.initMouseEvent(\n      'click',\n      ev ? ev.bubbles : false,\n      ev ? ev.cancelable : false,\n      window, // not using getWindow() since this can only be run client side\n      0, // detail\n      0, // screen x\n      0, // screen y\n      0, // client x\n      0, // client y\n      ev ? ev.ctrlKey : false,\n      ev ? ev.altKey : false,\n      ev ? ev.shiftKey : false,\n      ev ? ev.metaKey : false,\n      0, // button\n      null, // relatedTarget\n    );\n  }\n\n  target.dispatchEvent(event);\n}\n\n// Helper function that will return a class for when the root is focused\nfunction getRootClass(): string {\n  if (!focusZoneStyles) {\n    focusZoneStyles = mergeStyles(\n      {\n        selectors: {\n          ':focus': {\n            outline: 'none',\n          },\n        },\n      },\n      focusZoneClass,\n    );\n  }\n  return focusZoneStyles;\n}\n\nconst _allInstances: {\n  [key: string]: FocusZone;\n} = {};\nconst _outerZones: Set<FocusZone> = new Set();\n\nconst ALLOWED_INPUT_TYPES = ['text', 'number', 'password', 'email', 'tel', 'url', 'search', 'textarea'];\n\nconst ALLOW_VIRTUAL_ELEMENTS = false;\n\nexport class FocusZone extends React.Component<IFocusZoneProps> implements IFocusZone {\n  public static defaultProps: IFocusZoneProps = {\n    isCircularNavigation: false,\n    direction: FocusZoneDirection.bidirectional,\n    shouldRaiseClicks: true,\n  };\n\n  private _root: React.RefObject<HTMLElement> = React.createRef();\n  private _mergedRef = createMergedRef<HTMLElement>();\n\n  private _id: string;\n\n  /** The most recently focused child element. */\n  private _activeElement: HTMLElement | null;\n\n  /**\n   * The index path to the last focused child element.\n   */\n  private _lastIndexPath: number[] | undefined;\n\n  /**\n   * Flag to define when we've intentionally parked focus on the root element to temporarily\n   * hold focus until items appear within the zone.\n   */\n  private _isParked: boolean;\n\n  /** The child element with tabindex=0. */\n  private _defaultFocusElement: HTMLElement | null;\n  private _focusAlignment: Point;\n  private _isInnerZone: boolean;\n  private _parkedTabIndex: string | null | undefined;\n\n  /** Used to allow moving to next focusable element even when we're focusing on a input element when pressing tab */\n  private _processingTabKey: boolean;\n\n  /** Provides granular control over `shouldRaiseClicks` and should be preferred over `props.shouldRaiseClicks`. */\n  private _shouldRaiseClicksOnEnter: boolean;\n  private _shouldRaiseClicksOnSpace: boolean;\n\n  /** Used for testing purposes only. */\n  public static getOuterZones(): number {\n    return _outerZones.size;\n  }\n\n  /**\n   * Handle global tab presses so that we can patch tabindexes on the fly.\n   * HEADS UP: This must not be an arrow function in order to be referentially equal among instances\n   * for ref counting to work correctly!\n   */\n  private static _onKeyDownCapture(ev: KeyboardEvent): void {\n    // eslint-disable-next-line deprecation/deprecation, @fluentui/deprecated-keyboard-event-props\n    if (ev.which === KeyCodes.tab) {\n      _outerZones.forEach((zone: FocusZone) => zone._updateTabIndexes());\n    }\n  }\n\n  constructor(props: IFocusZoneProps) {\n    super(props);\n    // Manage componentRef resolution.\n    initializeComponentRef(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('FocusZone', props, {\n        rootProps: undefined,\n        allowTabKey: 'handleTabKey',\n        elementType: 'as',\n        ariaDescribedBy: 'aria-describedby',\n        ariaLabelledBy: 'aria-labelledby',\n      });\n    }\n\n    this._id = getId('FocusZone');\n\n    this._focusAlignment = {\n      left: 0,\n      top: 0,\n    };\n\n    this._processingTabKey = false;\n\n    const shouldRaiseClicksFallback = props.shouldRaiseClicks ?? FocusZone.defaultProps.shouldRaiseClicks ?? true;\n    this._shouldRaiseClicksOnEnter = props.shouldRaiseClicksOnEnter ?? shouldRaiseClicksFallback;\n    this._shouldRaiseClicksOnSpace = props.shouldRaiseClicksOnSpace ?? shouldRaiseClicksFallback;\n  }\n\n  public componentDidMount(): void {\n    const { current: root } = this._root;\n\n    _allInstances[this._id] = this;\n\n    if (root) {\n      let parentElement = getParent(root, ALLOW_VIRTUAL_ELEMENTS);\n\n      while (parentElement && parentElement !== this._getDocument().body && parentElement.nodeType === 1) {\n        if (isElementFocusZone(parentElement)) {\n          this._isInnerZone = true;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n      }\n\n      if (!this._isInnerZone) {\n        _outerZones.add(this);\n\n        this._root.current && this._root.current.addEventListener('keydown', FocusZone._onKeyDownCapture, true);\n      }\n\n      this._root.current && this._root.current.addEventListener('blur', this._onBlur, true);\n\n      // Assign initial tab indexes so that we can set initial focus as appropriate.\n      this._updateTabIndexes();\n\n      if (this.props.defaultTabbableElement && typeof this.props.defaultTabbableElement === 'string') {\n        this._activeElement = this._getDocument().querySelector(this.props.defaultTabbableElement) as HTMLElement;\n        // eslint-disable-next-line deprecation/deprecation\n      } else if (this.props.defaultActiveElement) {\n        // eslint-disable-next-line deprecation/deprecation\n        this._activeElement = this._getDocument().querySelector(this.props.defaultActiveElement) as HTMLElement;\n      }\n\n      if (this.props.shouldFocusOnMount) {\n        this.focus();\n      }\n    }\n  }\n\n  public componentDidUpdate(): void {\n    const { current: root } = this._root;\n    const doc = this._getDocument();\n\n    // If either _activeElement or _defaultFocusElement are no longer contained by _root,\n    // reset those variables (and update tab indexes) to avoid memory leaks\n    if (\n      (this._activeElement && !elementContains(this._root.current, this._activeElement, ALLOW_VIRTUAL_ELEMENTS)) ||\n      (this._defaultFocusElement &&\n        !elementContains(this._root.current, this._defaultFocusElement, ALLOW_VIRTUAL_ELEMENTS))\n    ) {\n      this._activeElement = null;\n      this._defaultFocusElement = null;\n      this._updateTabIndexes();\n    }\n\n    if (\n      !this.props.preventFocusRestoration &&\n      doc &&\n      this._lastIndexPath &&\n      (doc.activeElement === doc.body || doc.activeElement === null || doc.activeElement === root)\n    ) {\n      // The element has been removed after the render, attempt to restore focus.\n      const elementToFocus = getFocusableByIndexPath(root as HTMLElement, this._lastIndexPath);\n\n      if (elementToFocus) {\n        this._setActiveElement(elementToFocus, true);\n        elementToFocus.focus();\n        this._setParkedFocus(false);\n      } else {\n        // We had a focus path to restore, but now that path is unresolvable. Park focus\n        // on the container until we can try again.\n        this._setParkedFocus(true);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    delete _allInstances[this._id];\n\n    if (!this._isInnerZone) {\n      _outerZones.delete(this);\n\n      this._root.current && this._root.current.removeEventListener('keydown', FocusZone._onKeyDownCapture, true);\n    }\n\n    if (this._root.current) {\n      this._root.current.removeEventListener('blur', this._onBlur, true);\n    }\n\n    this._activeElement = null;\n    this._defaultFocusElement = null;\n  }\n\n  public render(): React.ReactNode {\n    // eslint-disable-next-line deprecation/deprecation\n    const { as: tag, elementType, rootProps, ariaDescribedBy, ariaLabelledBy, className } = this.props;\n    const divProps = getNativeProps(this.props, htmlElementProperties);\n\n    const Tag = tag || elementType || 'div';\n\n    // Note, right before rendering/reconciling proceeds, we need to record if focus\n    // was in the zone before the update. This helper will track this and, if focus\n    // was actually in the zone, what the index path to the element is at this time.\n    // Then, later in componentDidUpdate, we can evaluate if we need to restore it in\n    // the case the element was removed.\n    this._evaluateFocusBeforeRender();\n\n    // Only support RTL defined in global theme, not contextual theme/RTL.\n    const theme: ITheme = getTheme();\n\n    return (\n      <Tag\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        {...divProps}\n        {\n          // root props has been deprecated and should get removed.\n          // it needs to be marked as \"any\" since root props expects a div element, but really Tag can\n          // be any native element so typescript rightly flags this as a problem.\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(rootProps as any)\n        }\n        // Once the getClassName correctly memoizes inputs this should\n        // be replaced so that className is passed to getRootClass and is included there so\n        // the class names will always be in the same order.\n        className={css(getRootClass(), className)}\n        // eslint-disable-next-line deprecation/deprecation\n        ref={this._mergedRef(this.props.elementRef, this._root)}\n        data-focuszone-id={this._id}\n        // eslint-disable-next-line react/jsx-no-bind\n        onKeyDown={(ev: React.KeyboardEvent<HTMLElement>) => this._onKeyDown(ev, theme)}\n        onFocus={this._onFocus}\n        onMouseDownCapture={this._onMouseDown}\n      >\n        {this.props.children}\n      </Tag>\n    );\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @param bypassHiddenElements - If true, focus will be not be set on hidden elements.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focus(forceIntoFirstElement: boolean = false, bypassHiddenElements: boolean = false): boolean {\n    if (this._root.current) {\n      if (\n        !forceIntoFirstElement &&\n        this._root.current.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        this._isInnerZone\n      ) {\n        const ownerZoneElement = this._getOwnerZone(this._root.current) as HTMLElement;\n\n        if (ownerZoneElement !== this._root.current) {\n          const ownerZone = _allInstances[ownerZoneElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n\n          return !!ownerZone && ownerZone.focusElement(this._root.current);\n        }\n\n        return false;\n      } else if (\n        !forceIntoFirstElement &&\n        this._activeElement &&\n        elementContains(this._root.current, this._activeElement) &&\n        isElementTabbable(this._activeElement) &&\n        (!bypassHiddenElements || isElementVisibleAndNotHidden(this._activeElement))\n      ) {\n        this._activeElement.focus();\n        return true;\n      } else {\n        const firstChild = this._root.current.firstChild as HTMLElement;\n\n        return this.focusElement(\n          getNextElement(\n            this._root.current,\n            firstChild,\n            true,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            bypassHiddenElements,\n          ) as HTMLElement,\n        );\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Sets focus to the last tabbable item in the zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focusLast(): boolean {\n    if (this._root.current) {\n      const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n\n      return this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement);\n    }\n\n    return false;\n  }\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * shouldReceiveFocus to create delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param element - The child element within the zone to focus.\n   * @param forceAlignment - If true, focus alignment will be set according to the element provided.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focusElement(element: HTMLElement, forceAlignment?: boolean): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const { onBeforeFocus, shouldReceiveFocus } = this.props;\n\n    if ((shouldReceiveFocus && !shouldReceiveFocus(element)) || (onBeforeFocus && !onBeforeFocus(element))) {\n      return false;\n    }\n\n    if (element) {\n      // when we set focus to a specific child, we should recalculate the alignment depending on its position.\n      this._setActiveElement(element, forceAlignment);\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Forces horizontal alignment in the context of vertical arrowing to use specific point as the reference,\n   * rather than a center based on the last horizontal motion.\n   * @param point - the new reference point.\n   */\n  public setFocusAlignment(point: Point): void {\n    this._focusAlignment = point;\n  }\n\n  public get defaultFocusElement() {\n    return this._defaultFocusElement;\n  }\n\n  public get activeElement() {\n    return this._activeElement;\n  }\n\n  private _evaluateFocusBeforeRender(): void {\n    const { current: root } = this._root;\n\n    const doc = this._getDocument();\n    if (doc) {\n      const focusedElement = doc.activeElement as HTMLElement;\n\n      // Only update the index path if we are not parked on the root.\n      if (focusedElement !== root) {\n        const shouldRestoreFocus = elementContains(root, focusedElement, false);\n        this._lastIndexPath = shouldRestoreFocus ? getElementIndexPath(root as HTMLElement, focusedElement) : undefined;\n      }\n    }\n  }\n\n  private _onFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    const {\n      onActiveElementChanged,\n      // eslint-disable-next-line deprecation/deprecation\n      doNotAllowFocusEventToPropagate,\n      stopFocusPropagation,\n      // eslint-disable-next-line deprecation/deprecation\n      onFocusNotification,\n      onFocus,\n      shouldFocusInnerElementWhenReceivedFocus,\n      defaultTabbableElement,\n    } = this.props;\n    const isImmediateDescendant = this._isImmediateDescendantOfZone(ev.target as HTMLElement);\n    let newActiveElement: HTMLElement | null | undefined;\n\n    if (isImmediateDescendant) {\n      newActiveElement = ev.target as HTMLElement;\n    } else {\n      let parentElement = ev.target as HTMLElement;\n\n      while (parentElement && parentElement !== this._root.current) {\n        if (isElementTabbable(parentElement) && this._isImmediateDescendantOfZone(parentElement)) {\n          newActiveElement = parentElement;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n      }\n    }\n\n    // If an inner focusable element should be focused when FocusZone container receives focus\n    if (shouldFocusInnerElementWhenReceivedFocus && ev.target === this._root.current) {\n      const maybeElementToFocus =\n        defaultTabbableElement &&\n        typeof defaultTabbableElement === 'function' &&\n        this._root.current &&\n        defaultTabbableElement(this._root.current);\n\n      // try to focus defaultTabbable element\n      if (maybeElementToFocus && isElementTabbable(maybeElementToFocus)) {\n        newActiveElement = maybeElementToFocus;\n        maybeElementToFocus.focus();\n      } else {\n        // force focus on first focusable element\n        this.focus(true);\n        if (this._activeElement) {\n          // set to null as new active element was handled in method above\n          newActiveElement = null;\n        }\n      }\n    }\n\n    const initialElementFocused = !this._activeElement;\n\n    // If the new active element is a child of this zone and received focus,\n    // update alignment an immediate descendant\n    if (newActiveElement && newActiveElement !== this._activeElement) {\n      if (isImmediateDescendant || initialElementFocused) {\n        this._setFocusAlignment(newActiveElement, true, true);\n      }\n\n      this._activeElement = newActiveElement;\n\n      if (initialElementFocused) {\n        this._updateTabIndexes();\n      }\n    }\n\n    if (onActiveElementChanged) {\n      onActiveElementChanged(this._activeElement as HTMLElement, ev);\n    }\n\n    if (stopFocusPropagation || doNotAllowFocusEventToPropagate) {\n      ev.stopPropagation();\n    }\n\n    if (onFocus) {\n      onFocus(ev);\n    } else if (onFocusNotification) {\n      onFocusNotification();\n    }\n  };\n\n  /**\n   * When focus is in the zone at render time but then all focusable elements are removed,\n   * we \"park\" focus temporarily on the root. Once we update with focusable children, we restore\n   * focus to the closest path from previous. If the user tabs away from the parked container,\n   * we restore focusability to the pre-parked state.\n   */\n  private _setParkedFocus(isParked: boolean): void {\n    const { current: root } = this._root;\n\n    if (root && this._isParked !== isParked) {\n      this._isParked = isParked;\n\n      if (isParked) {\n        if (!this.props.allowFocusRoot) {\n          this._parkedTabIndex = root.getAttribute('tabindex');\n          root.setAttribute('tabindex', '-1');\n        }\n        root.focus();\n      } else if (!this.props.allowFocusRoot) {\n        if (this._parkedTabIndex) {\n          root.setAttribute('tabindex', this._parkedTabIndex);\n          this._parkedTabIndex = undefined;\n        } else {\n          root.removeAttribute('tabindex');\n        }\n      }\n    }\n  }\n\n  private _onBlur = (): void => {\n    this._setParkedFocus(false);\n  };\n\n  private _onMouseDown = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    const { disabled } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    let target = ev.target as HTMLElement;\n    const path = [];\n\n    while (target && target !== this._root.current) {\n      path.push(target);\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    }\n\n    while (path.length) {\n      target = path.pop() as HTMLElement;\n\n      if (target && isElementTabbable(target)) {\n        this._setActiveElement(target, true);\n      }\n\n      if (isElementFocusZone(target)) {\n        // Stop here since the focus zone will take care of its own children.\n        break;\n      }\n    }\n  };\n\n  private _setActiveElement(element: HTMLElement, forceAlignment?: boolean): void {\n    const previousActiveElement = this._activeElement;\n\n    this._activeElement = element;\n\n    if (previousActiveElement) {\n      if (isElementFocusZone(previousActiveElement)) {\n        this._updateTabIndexes(previousActiveElement);\n      }\n\n      previousActiveElement.tabIndex = -1;\n    }\n\n    if (this._activeElement) {\n      if (!this._focusAlignment || forceAlignment) {\n        this._setFocusAlignment(element, true, true);\n      }\n\n      this._activeElement.tabIndex = 0;\n    }\n  }\n\n  private _preventDefaultWhenHandled(ev: React.KeyboardEvent<HTMLElement>): void {\n    this.props.preventDefaultWhenHandled && ev.preventDefault();\n  }\n\n  /**\n   * Handle the keystrokes.\n   */\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>, theme: ITheme): boolean | undefined => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const { direction, disabled, isInnerZoneKeystroke, pagingSupportDisabled, shouldEnterInnerZone } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // If the default has been prevented, do not process keyboard events.\n    if (ev.isDefaultPrevented()) {\n      return;\n    }\n\n    if (this._getDocument().activeElement === this._root.current && this._isInnerZone) {\n      // If this element has focus, it is being controlled by a parent.\n      // Ignore the keystroke.\n      return;\n    }\n\n    if (\n      ((shouldEnterInnerZone && shouldEnterInnerZone(ev)) || (isInnerZoneKeystroke && isInnerZoneKeystroke(ev))) &&\n      this._isImmediateDescendantOfZone(ev.target as HTMLElement)\n    ) {\n      // Try to focus\n      const innerZone = this._getFirstInnerZone();\n\n      if (innerZone) {\n        if (!innerZone.focus(true)) {\n          return;\n        }\n      } else if (isElementFocusSubZone(ev.target as HTMLElement)) {\n        if (\n          !this.focusElement(\n            getNextElement(\n              ev.target as HTMLElement,\n              (ev.target as HTMLElement).firstChild as HTMLElement,\n              true,\n            ) as HTMLElement,\n          )\n        ) {\n          return;\n        }\n      } else {\n        return;\n      }\n    } else if (ev.altKey) {\n      return;\n    } else {\n      // eslint-disable-next-line @fluentui/deprecated-keyboard-event-props, deprecation/deprecation\n      switch (ev.which) {\n        case KeyCodes.space:\n          if (this._shouldRaiseClicksOnSpace && this._tryInvokeClickForFocusable(ev.target as HTMLElement, ev)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.left:\n          if (direction !== FocusZoneDirection.vertical) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusLeft(theme)) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.right:\n          if (direction !== FocusZoneDirection.vertical) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusRight(theme)) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.up:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusUp()) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.down:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusDown()) {\n              break;\n            }\n          }\n          return;\n        case KeyCodes.pageDown:\n          if (!pagingSupportDisabled && this._moveFocusPaging(true)) {\n            break;\n          }\n          return;\n        case KeyCodes.pageUp:\n          if (!pagingSupportDisabled && this._moveFocusPaging(false)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.tab:\n          if (\n            // eslint-disable-next-line deprecation/deprecation\n            this.props.allowTabKey ||\n            this.props.handleTabKey === FocusZoneTabbableElements.all ||\n            (this.props.handleTabKey === FocusZoneTabbableElements.inputOnly &&\n              this._isElementInput(ev.target as HTMLElement))\n          ) {\n            let focusChanged = false;\n            this._processingTabKey = true;\n            if (\n              direction === FocusZoneDirection.vertical ||\n              !this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP)\n            ) {\n              focusChanged = ev.shiftKey ? this._moveFocusUp() : this._moveFocusDown();\n            } else {\n              const tabWithDirection = getRTL(theme) ? !ev.shiftKey : ev.shiftKey;\n              focusChanged = tabWithDirection ? this._moveFocusLeft(theme) : this._moveFocusRight(theme);\n            }\n            this._processingTabKey = false;\n            if (focusChanged) {\n              break;\n            } else if (this.props.shouldResetActiveElementWhenTabFromZone) {\n              this._activeElement = null;\n            }\n          }\n          return;\n\n        case KeyCodes.home:\n          if (\n            this._isContentEditableElement(ev.target as HTMLElement) ||\n            (this._isElementInput(ev.target as HTMLElement) &&\n              !this._shouldInputLoseFocus(ev.target as HTMLInputElement, false))\n          ) {\n            return false;\n          }\n          const firstChild = this._root.current && (this._root.current.firstChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            firstChild &&\n            this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return;\n\n        case KeyCodes.end:\n          if (\n            this._isContentEditableElement(ev.target as HTMLElement) ||\n            (this._isElementInput(ev.target as HTMLElement) &&\n              !this._shouldInputLoseFocus(ev.target as HTMLInputElement, true))\n          ) {\n            return false;\n          }\n\n          const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return;\n\n        case KeyCodes.enter:\n          if (this._shouldRaiseClicksOnEnter && this._tryInvokeClickForFocusable(ev.target as HTMLElement, ev)) {\n            break;\n          }\n          return;\n\n        default:\n          return;\n      }\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  /**\n   * Walk up the dom try to find a focusable element.\n   */\n  private _tryInvokeClickForFocusable(targetElement: HTMLElement, ev?: React.KeyboardEvent<HTMLElement>): boolean {\n    let target = targetElement;\n    if (target === this._root.current) {\n      return false;\n    }\n\n    do {\n      if (\n        target.tagName === 'BUTTON' ||\n        target.tagName === 'A' ||\n        target.tagName === 'INPUT' ||\n        target.tagName === 'TEXTAREA' ||\n        target.tagName === 'SUMMARY'\n      ) {\n        return false;\n      }\n\n      if (\n        this._isImmediateDescendantOfZone(target) &&\n        target.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        target.getAttribute(IS_ENTER_DISABLED_ATTRIBUTE) !== 'true'\n      ) {\n        raiseClickFromKeyboardEvent(target, ev);\n        return true;\n      }\n\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    } while (target !== this._root.current);\n\n    return false;\n  }\n\n  /**\n   * Traverse to find first child zone.\n   */\n  private _getFirstInnerZone(rootElement?: HTMLElement | null): FocusZone | null {\n    rootElement = rootElement || this._activeElement || this._root.current;\n\n    if (!rootElement) {\n      return null;\n    }\n\n    if (isElementFocusZone(rootElement)) {\n      return _allInstances[rootElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n    }\n\n    let child = rootElement.firstElementChild as HTMLElement | null;\n\n    while (child) {\n      if (isElementFocusZone(child)) {\n        return _allInstances[child.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n      }\n      const match = this._getFirstInnerZone(child);\n\n      if (match) {\n        return match;\n      }\n\n      child = child.nextElementSibling as HTMLElement | null;\n    }\n\n    return null;\n  }\n\n  private _moveFocus(\n    isForward: boolean,\n    // eslint-disable-next-line deprecation/deprecation\n    getDistanceFromCenter: (activeRect: ClientRect, targetRect: ClientRect) => number,\n    ev?: Event,\n    useDefaultWrap: boolean = true,\n  ): boolean {\n    let element = this._activeElement;\n    let candidateDistance = -1;\n    let candidateElement: HTMLElement | undefined = undefined;\n    let changedFocus = false;\n    const isBidirectional = this.props.direction === FocusZoneDirection.bidirectional;\n\n    if (!element || !this._root.current) {\n      return false;\n    }\n\n    if (this._isElementInput(element)) {\n      if (!this._shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n\n    const activeRect = isBidirectional ? element.getBoundingClientRect() : null;\n\n    do {\n      element = (\n        isForward ? getNextElement(this._root.current, element) : getPreviousElement(this._root.current, element)\n      ) as HTMLElement;\n\n      if (isBidirectional) {\n        if (element) {\n          const targetRect = element.getBoundingClientRect();\n          // eslint-disable-next-line deprecation/deprecation\n          const elementDistance = getDistanceFromCenter(activeRect as ClientRect, targetRect);\n\n          if (elementDistance === -1 && candidateDistance === -1) {\n            candidateElement = element;\n            break;\n          }\n\n          if (elementDistance > -1 && (candidateDistance === -1 || elementDistance < candidateDistance)) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n\n          if (candidateDistance >= 0 && elementDistance < 0) {\n            break;\n          }\n        }\n      } else {\n        candidateElement = element;\n        break;\n      }\n    } while (element);\n\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      } else {\n        return this.focusElement(\n          getPreviousElement(\n            this._root.current,\n            this._root.current.lastElementChild as HTMLElement,\n            true,\n            true,\n            true,\n          ) as HTMLElement,\n        );\n      }\n    }\n\n    return changedFocus;\n  }\n\n  private _moveFocusDown(): boolean {\n    let targetTop = -1;\n    // eslint-disable-next-line deprecation/deprecation\n    const leftAlignment = this._focusAlignment.left || this._focusAlignment.x || 0;\n\n    if (\n      // eslint-disable-next-line deprecation/deprecation\n      this._moveFocus(true, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n\n        if (targetRectTop < activeRectBottom) {\n          if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectTop >= activeRectBottom) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, false, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusUp(): boolean {\n    let targetTop = -1;\n    // eslint-disable-next-line deprecation/deprecation\n    const leftAlignment = this._focusAlignment.left || this._focusAlignment.x || 0;\n\n    if (\n      // eslint-disable-next-line deprecation/deprecation\n      this._moveFocus(false, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectTop = Math.floor(activeRect.top);\n\n        if (targetRectBottom > activeRectTop) {\n          if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectBottom <= activeRectTop) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, false, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusLeft(theme: ITheme): boolean {\n    const shouldWrap = this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this._moveFocus(\n        getRTL(theme),\n        // eslint-disable-next-line deprecation/deprecation\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (getRTL(theme)) {\n            // When in RTL, this comparison should be the same as the one in _moveFocusRight for LTR.\n            // Going left at a leftmost rectangle will go down a line instead of up a line like in LTR.\n            // This is important, because we want to be comparing the top of the target rect\n            // with the bottom of the active rect.\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.right <= activeRect.right &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = activeRect.right - targetRect.right;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /*ev*/,\n        shouldWrap,\n      )\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusRight(theme: ITheme): boolean {\n    const shouldWrap = this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this._moveFocus(\n        !getRTL(theme),\n        // eslint-disable-next-line deprecation/deprecation\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (getRTL(theme)) {\n            // When in RTL, this comparison should be the same as the one in _moveFocusLeft for LTR.\n            // Going right at a rightmost rectangle will go up a line instead of down a line like in LTR.\n            // This is important, because we want to be comparing the bottom of the target rect\n            // with the top of the active rect.\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.left >= activeRect.left &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = targetRect.left - activeRect.left;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /*ev*/,\n        shouldWrap,\n      )\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getHorizontalDistanceFromCenter = (\n    isForward: boolean,\n    // eslint-disable-next-line deprecation/deprecation\n    activeRect: ClientRect,\n    // eslint-disable-next-line deprecation/deprecation\n    targetRect: ClientRect,\n  ): number => {\n    // eslint-disable-next-line deprecation/deprecation\n    const leftAlignment = this._focusAlignment.left || this._focusAlignment.x || 0;\n    // ClientRect values can be floats that differ by very small fractions of a decimal.\n    // If the difference between top and bottom are within a pixel then we should treat\n    // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n    // but without Math.Floor they will be handled incorrectly.\n    const targetRectTop = Math.floor(targetRect.top);\n    const activeRectBottom = Math.floor(activeRect.bottom);\n    const targetRectBottom = Math.floor(targetRect.bottom);\n    const activeRectTop = Math.floor(activeRect.top);\n    const isValidCandidateOnpagingDown = isForward && targetRectTop > activeRectBottom;\n    const isValidCandidateOnpagingUp = !isForward && targetRectBottom < activeRectTop;\n\n    if (isValidCandidateOnpagingDown || isValidCandidateOnpagingUp) {\n      if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n        return 0;\n      }\n      return Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n    }\n\n    if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n      return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n    }\n    return LARGE_DISTANCE_FROM_CENTER;\n  };\n\n  private _moveFocusPaging(isForward: boolean, useDefaultWrap: boolean = true): boolean {\n    let element = this._activeElement;\n    if (!element || !this._root.current) {\n      return false;\n    }\n    if (this._isElementInput(element)) {\n      if (!this._shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n    const scrollableParent = findScrollableParent(element);\n    if (!scrollableParent) {\n      return false;\n    }\n    let candidateDistance = -1;\n    let candidateElement = undefined;\n    let targetTop = -1;\n    let targetBottom = -1;\n    const pagesize = (scrollableParent as HTMLElement).clientHeight;\n    const activeRect = element.getBoundingClientRect();\n    do {\n      element = isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element);\n      if (element) {\n        const targetRect = element.getBoundingClientRect();\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const activeRectTop = Math.floor(activeRect.top);\n        const elementDistance = this._getHorizontalDistanceFromCenter(isForward, activeRect, targetRect);\n        const isElementPassedPageSizeOnPagingDown = isForward && targetRectTop > activeRectBottom + pagesize;\n        const isElementPassedPageSizeOnPagingUp = !isForward && targetRectBottom < activeRectTop - pagesize;\n\n        if (isElementPassedPageSizeOnPagingDown || isElementPassedPageSizeOnPagingUp) {\n          break;\n        }\n        if (elementDistance > -1) {\n          // for paging down\n          if (isForward && targetRectTop > targetTop) {\n            targetTop = targetRectTop;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (!isForward && targetRectBottom < targetBottom) {\n            // for paging up\n            targetBottom = targetRectBottom;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (candidateDistance === -1 || elementDistance <= candidateDistance) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n        }\n      }\n    } while (element);\n\n    let changedFocus = false;\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n      this._setFocusAlignment(candidateElement as HTMLElement, false, true);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n    return changedFocus;\n  }\n\n  private _setFocusAlignment(element: HTMLElement, isHorizontal?: boolean, isVertical?: boolean): void {\n    if (\n      this.props.direction === FocusZoneDirection.bidirectional &&\n      (!this._focusAlignment || isHorizontal || isVertical)\n    ) {\n      const rect = element.getBoundingClientRect();\n      const left = rect.left + rect.width / 2;\n      const top = rect.top + rect.height / 2;\n\n      if (!this._focusAlignment) {\n        this._focusAlignment = { left, top };\n      }\n\n      if (isHorizontal) {\n        this._focusAlignment.left = left;\n      }\n\n      if (isVertical) {\n        this._focusAlignment.top = top;\n      }\n    }\n  }\n\n  private _isImmediateDescendantOfZone(element?: HTMLElement): boolean {\n    return this._getOwnerZone(element) === this._root.current;\n  }\n\n  private _getOwnerZone(element?: HTMLElement): HTMLElement | null {\n    let parentElement = getParent(element as HTMLElement, ALLOW_VIRTUAL_ELEMENTS);\n\n    while (parentElement && parentElement !== this._root.current && parentElement !== this._getDocument().body) {\n      if (isElementFocusZone(parentElement)) {\n        return parentElement;\n      }\n\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    return parentElement;\n  }\n\n  private _updateTabIndexes(element?: HTMLElement): void {\n    if (\n      !this._activeElement &&\n      this.props.defaultTabbableElement &&\n      typeof this.props.defaultTabbableElement === 'function'\n    ) {\n      this._activeElement = this.props.defaultTabbableElement(this._root.current as HTMLElement);\n    }\n\n    if (!element && this._root.current) {\n      this._defaultFocusElement = null;\n      element = this._root.current;\n      if (this._activeElement && !elementContains(element, this._activeElement)) {\n        this._activeElement = null;\n      }\n    }\n\n    // If active element changes state to disabled, set it to null.\n    // Otherwise, we lose keyboard accessibility to other elements in focus zone.\n    if (this._activeElement && !isElementTabbable(this._activeElement)) {\n      this._activeElement = null;\n    }\n\n    const childNodes = element && element.children;\n\n    for (let childIndex = 0; childNodes && childIndex < childNodes.length; childIndex++) {\n      const child = childNodes[childIndex] as HTMLElement;\n\n      if (!isElementFocusZone(child)) {\n        // If the item is explicitly set to not be focusable then TABINDEX needs to be set to -1.\n        if (child.getAttribute && child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'false') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n\n        if (isElementTabbable(child)) {\n          if (this.props.disabled) {\n            child.setAttribute(TABINDEX, '-1');\n          } else if (\n            !this._isInnerZone &&\n            ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n          ) {\n            this._defaultFocusElement = child;\n            if (child.getAttribute(TABINDEX) !== '0') {\n              child.setAttribute(TABINDEX, '0');\n            }\n          } else if (child.getAttribute(TABINDEX) !== '-1') {\n            child.setAttribute(TABINDEX, '-1');\n          }\n        } else if (child.tagName === 'svg' && child.getAttribute('focusable') !== 'false') {\n          // Disgusting IE hack. Sad face.\n          child.setAttribute('focusable', 'false');\n        }\n      } else if (child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true') {\n        if (\n          !this._isInnerZone &&\n          ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n        ) {\n          this._defaultFocusElement = child;\n          if (child.getAttribute(TABINDEX) !== '0') {\n            child.setAttribute(TABINDEX, '0');\n          }\n        } else if (child.getAttribute(TABINDEX) !== '-1') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n      }\n\n      this._updateTabIndexes(child);\n    }\n  }\n\n  private _isContentEditableElement(element: HTMLElement): boolean {\n    return element && element.getAttribute('contenteditable') === 'true';\n  }\n\n  private _isElementInput(element: HTMLElement): boolean {\n    if (\n      element &&\n      element.tagName &&\n      (element.tagName.toLowerCase() === 'input' || element.tagName.toLowerCase() === 'textarea')\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private _shouldInputLoseFocus(element: HTMLInputElement | HTMLTextAreaElement, isForward?: boolean): boolean {\n    // If a tab was used, we want to focus on the next element.\n    if (\n      !this._processingTabKey &&\n      element &&\n      element.type &&\n      ALLOWED_INPUT_TYPES.indexOf(element.type.toLowerCase()) > -1\n    ) {\n      const selectionStart = element.selectionStart;\n      const selectionEnd = element.selectionEnd;\n      const isRangeSelected = selectionStart !== selectionEnd;\n      const inputValue = element.value;\n      const isReadonly = element.readOnly;\n\n      // We shouldn't lose focus in the following cases:\n      // 1. There is range selected.\n      // 2. When selection start is larger than 0 and it is backward and not readOnly.\n      // 3. when selection start is not the end of length, it is forward and not readOnly.\n      // 4. We press any of the arrow keys when our handleTabKey isn't none or undefined (only losing focus if we hit\n      // tab) and if shouldInputLoseFocusOnArrowKey is defined, if scenario prefers to not loose the focus which is\n      // determined by calling the callback shouldInputLoseFocusOnArrowKey\n      if (\n        isRangeSelected ||\n        (selectionStart! > 0 && !isForward && !isReadonly) ||\n        (selectionStart !== inputValue.length && isForward && !isReadonly) ||\n        (!!this.props.handleTabKey &&\n          !(this.props.shouldInputLoseFocusOnArrowKey && this.props.shouldInputLoseFocusOnArrowKey(element)))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private _shouldWrapFocus(\n    element: HTMLElement,\n    noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap',\n  ): boolean {\n    return this.props.checkForNoWrap ? shouldWrapFocus(element, noWrapDataAttribute) : true;\n  }\n\n  /**\n   * Returns true if the element is a descendant of the FocusZone through a React portal.\n   */\n  private _portalContainsElement(element: HTMLElement): boolean {\n    return element && !!this._root.current && portalContainsElement(element, this._root.current);\n  }\n\n  private _getDocument(): Document {\n    return getDocument(this._root.current)!;\n  }\n}\n", "import * as React from 'react';\nimport type { IRefObject, Point } from '@fluentui/utilities';\n\n/**\n * FocusZone component class interface.\n * {@docCategory FocusZone}\n */\nexport interface IFocusZone {\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @param bypassHiddenElements - If true, focus will be not be set on hidden elements.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focus(forceIntoFirstElement?: boolean, bypassHiddenElements?: boolean): boolean;\n\n  /**\n   * Sets focus to the last tabbable item in the zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusLast(): boolean;\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * shouldReceiveFocus to create delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param childElement - The child element within the zone to focus.\n   * @param forceAlignment - If true, focus alignment will be set according to the element provided.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusElement(childElement?: HTMLElement, forceAlignment?: boolean): boolean;\n\n  /**\n   * Forces horizontal alignment in the context of vertical arrowing to use specific point as the reference, rather\n   * than a center based on the last horizontal motion.\n   * @param point - the new reference point.\n   */\n  setFocusAlignment(point: Point): void;\n}\n\n/**\n * FocusZone component props.\n * {@docCategory FocusZone}\n */\nexport interface IFocusZoneProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the IFocusZone interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IFocusZone>;\n\n  /**\n   * Optional callback to access the root DOM element.\n   * @deprecated Temporary solution which will be replaced with ref in the V8 release.\n   */\n  elementRef?: React.Ref<HTMLElement>;\n\n  /**\n   * Additional class name to provide on the root element, in addition to the ms-FocusZone class.\n   */\n  className?: string;\n\n  /**\n   * Defines which arrows to react to.\n   * @defaultvalue FocusZoneDirection.bidirectional\n   */\n  direction?: FocusZoneDirection;\n\n  /**\n   * Optionally defines the initial tabbable element inside the FocusZone.\n   * If a string is passed then it is treated as a selector for identifying the initial tabbable element.\n   * If a function is passed then it uses the root element as a parameter to return the initial tabbable element.\n   */\n  defaultTabbableElement?: string | ((root: HTMLElement) => HTMLElement);\n\n  /**\n   * Optionally provide a selector for identifying the initial active element.\n   * @deprecated Use `defaultTabbableElement` instead.\n   */\n  defaultActiveElement?: string;\n\n  /**\n   * Determines if a default tabbable element should be force focused on FocusZone mount.\n   * @default false\n   */\n  shouldFocusOnMount?: boolean;\n\n  /**\n   * If set, the FocusZone will not be tabbable and keyboard navigation will be disabled.\n   * This does not affect disabled attribute of any child.\n   */\n  disabled?: boolean;\n\n  /**\n   * Element type the root element will use. Default is \"div\".\n   * @deprecated Use `as` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  elementType?: any /* TODO should be `keyof React.ReactHTML`, tracking with https://github.com/Microsoft/TypeScript/issues/30050 */;\n\n  /**\n   * A component that should be used as the root element of the FocusZone component.\n   */\n  as?: React.ElementType;\n\n  /**\n   * If set, will cycle to the beginning of the targets once the user navigates to the\n   * next target while at the end, and to the end when navigate to the previous at the beginning.\n   */\n  isCircularNavigation?: boolean;\n\n  /**\n   * If provided, this callback will be executed on keypresses to determine if the user\n   * intends to navigate into the inner zone. Returning true will ask the first inner zone to\n   * set focus.\n   * @deprecated Use `shouldEnterInnerZone` instead.\n   */\n  isInnerZoneKeystroke?: (ev: React.KeyboardEvent<HTMLElement>) => boolean;\n\n  /**\n   * Callback function that will be executed on keypresses to determine if the user intends to navigate into\n   * the inner (nested) zone. Returning true will ask the first inner zone to set focus.\n   */\n  shouldEnterInnerZone?: (ev: React.KeyboardEvent<HTMLElement>) => boolean;\n\n  /**\n   * Sets the aria-labelledby attribute.\n   * @deprecated Directly use the `aria-labelledby` attribute instead\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * Sets the aria-describedby attribute.\n   * @deprecated Directly use the `aria-describedby` attribute instead\n   */\n  ariaDescribedBy?: string;\n\n  /**\n   * Callback for when one of immediate children elements gets active by getting focused\n   * or by having one of its respective children elements focused.\n   */\n  onActiveElementChanged?: (element?: HTMLElement, ev?: React.FocusEvent<HTMLElement>) => void;\n\n  /**\n   * @deprecated Div props provided to the FocusZone will be mixed into the root element.\n   * Deprecated at v1.12.1.\n   */\n  rootProps?: React.HTMLAttributes<HTMLDivElement>;\n\n  /**\n   * Callback method for determining if focus should indeed be set on the given element.\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus should be set to the given element, false to avoid setting focus.\n   * @deprecated Use `shouldReceiveFocus` instead.\n   */\n  onBeforeFocus?: (childElement?: HTMLElement) => boolean;\n\n  /**\n   * Callback method for determining if focus should indeed be set on the given element.\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus should be set to the given element, false to avoid setting focus.\n   */\n  shouldReceiveFocus?: (childElement?: HTMLElement) => boolean;\n\n  /** Allows focus to park on root when focus is in the `FocusZone` at render time. */\n  allowFocusRoot?: boolean;\n\n  /**\n   * Allows tab key to be handled to tab through a list of items in the focus zone,\n   * an unfortunate side effect is that users will not be able to tab out of the focus zone\n   * and have to hit escape or some other key.\n   * @deprecated Use `handleTabKey` instead.\n   *\n   */\n  allowTabKey?: boolean;\n\n  /**\n   * Allows tab key to be handled to tab through a list of items in the focus zone,\n   * an unfortunate side effect is that users will not be able to tab out of the focus zone\n   * and have to hit escape or some other key.\n   */\n  handleTabKey?: FocusZoneTabbableElements;\n\n  /**\n   * If true and FocusZone's root element (container) receives focus, the focus will land either on the\n   * defaultTabbableElement (if set) or on the first tabbable element of this FocusZone.\n   * Usually a case for nested focus zones, when the nested focus zone's container is a focusable element.\n   */\n  shouldFocusInnerElementWhenReceivedFocus?: boolean;\n\n  /**\n   * If true and TAB key is not handled by FocusZone, resets current active element to null value.\n   * For example, when roving index is not desirable and focus should always reset to the default tabbable element.\n   */\n  shouldResetActiveElementWhenTabFromZone?: boolean;\n\n  /**\n   * Determines whether the FocusZone will walk up the DOM trying to invoke click callbacks on focusable elements on\n   * Enter and Space keydowns to ensure accessibility for tags that don't guarantee this behavior.\n   * @defaultvalue true\n   */\n  shouldRaiseClicks?: boolean;\n\n  /**\n   * Relates to `shouldRaiseClicks`.\n   * Allows the click event raising for the \"Enter\" key to be set independently from `shouldRaiseClicks`.\n   * Inherits the value of `shouldRaiseClicks` if not set explicitly.\n   */\n  shouldRaiseClicksOnEnter?: boolean;\n\n  /**\n   * Relates to `shouldRaiseClicks`.\n   * Allows the click event raising for the \"Space\" key to be set independently from `shouldRaiseClicks`.\n   * Inherits the value of `shouldRaiseClicks` if not set explicitly.\n   */\n  shouldRaiseClicksOnSpace?: boolean;\n\n  /**\n   * A callback method to determine if an input or textarea element should lose focus on arrow keys\n   *  @param inputElement - The input or textarea element which is to lose focus.\n   *  @returns True if input element should loose focus or false otherwise.\n   */\n  shouldInputLoseFocusOnArrowKey?: (inputElement: HTMLInputElement | HTMLTextAreaElement) => boolean;\n\n  /**\n   * Determines whether to disable the paging support for Page Up and Page Down keyboard scenarios.\n   * @defaultvalue false\n   */\n  pagingSupportDisabled?: boolean;\n\n  /**\n   * Determines whether to check for data-no-horizontal-wrap or data-no-vertical-wrap attributes\n   * when determining how to move focus\n   * @defaultvalue false\n   */\n  checkForNoWrap?: boolean;\n\n  /**\n   * Whether the FocusZone should allow focus events to propagate past the FocusZone.\n   * @deprecated Use `stopFocusPropagation` instead.\n   */\n  doNotAllowFocusEventToPropagate?: boolean;\n\n  /**\n   * Whether the FocusZone should allow focus events to propagate past the FocusZone.\n   */\n  stopFocusPropagation?: boolean;\n\n  /**\n   * Callback to notify creators that focus has been set on the FocusZone\n   * @deprecated Use `onFocus` instead.\n   */\n  onFocusNotification?: () => void;\n\n  /**\n   * Callback called when \"focus\" event triggered in FocusZone.\n   * @param event - React's original FocusEvent.\n   */\n  onFocus?: (event: React.FocusEvent<HTMLElement>) => void;\n\n  /**\n   * If true, FocusZone prevents the default behavior of Keyboard events when changing focus between elements.\n   * @defaultvalue false\n   */\n  preventDefaultWhenHandled?: boolean;\n\n  /**\n   * If true, prevents the FocusZone from attempting to restore the focus to the inner element when the focus is on the\n   * root element after componentDidUpdate.\n   * @defaultvalue false\n   */\n  preventFocusRestoration?: boolean;\n}\n/**\n * {@docCategory FocusZone}\n */\nexport const FocusZoneTabbableElements = {\n  /** Tabbing is not allowed */\n  none: 0 as 0,\n\n  /** All tabbing action is allowed */\n  all: 1 as 1,\n\n  /** Tabbing is allowed only on input elements */\n  inputOnly: 2 as 2,\n};\n\n/**\n * {@docCategory FocusZone}\n */\nexport type FocusZoneTabbableElements = (typeof FocusZoneTabbableElements)[keyof typeof FocusZoneTabbableElements];\n\n/**\n * {@docCategory FocusZone}\n */\nexport enum FocusZoneDirection {\n  /** Only react to up/down arrows. */\n  vertical = 0,\n\n  /** Only react to left/right arrows. */\n  horizontal = 1,\n\n  /** React to all arrows. */\n  bidirectional = 2,\n\n  /**\n   * React to all arrows. Navigate next item in DOM on right/down arrow keys and previous - left/up arrow keys.\n   * Right and Left arrow keys are swapped in RTL mode.\n   */\n  domOrder = 3,\n}\n", "import type { IContextualMenuItem } from '../../index';\n\n/**\n * Determines the effective checked state of a menu item.\n *\n * @param item {IContextualMenuItem} to get the check state of.\n * @returns {true} if the item is checked.\n * @returns {false} if the item is unchecked.\n * @returns {null} if the item is not checkable.\n */\nexport function getIsChecked(item: IContextualMenuItem): boolean | null {\n  if (item.canCheck) {\n    return !!(item.isChecked || item.checked);\n  }\n\n  if (typeof item.isChecked === 'boolean') {\n    return item.isChecked;\n  }\n\n  if (typeof item.checked === 'boolean') {\n    return item.checked;\n  }\n\n  // Item is not checkable.\n  return null;\n}\n\nexport function hasSubmenu(item: IContextualMenuItem): boolean {\n  // eslint-disable-next-line deprecation/deprecation\n  return !!(item.subMenuProps || item.items);\n}\n\nexport function isItemDisabled(item: IContextualMenuItem): boolean {\n  return !!(item.isDisabled || item.disabled);\n}\n\nexport function getMenuItemAriaRole(item: IContextualMenuItem): string {\n  const isChecked = getIsChecked(item);\n  const canCheck: boolean = isChecked !== null;\n  return canCheck ? 'menuitemcheckbox' : 'menuitem';\n}\n", "import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport type { IContextualMenuItemProps, IContextualMenuItemRenderFunctions } from './ContextualMenuItem.types';\n\nconst defaultIconRenderer = (props: IContextualMenuItemProps) => {\n  const { item, classNames } = props;\n  const { iconProps } = item;\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons } = props;\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props, defaultIconRenderer);\n  }\n\n  return defaultIconRenderer(props);\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return (\n      <Icon\n        iconName={item.canCheck !== false && isItemChecked ? 'CheckMark' : ''}\n        className={classNames.checkmarkIcon}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n      />\n    );\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  /* eslint-disable deprecation/deprecation */\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  /* eslint-enable deprecation/deprecation */\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames, theme }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return (\n      <Icon\n        iconName={getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'}\n        {...item.submenuIconProps}\n        className={classNames.subMenuIcon}\n      />\n    );\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends React.Component<IContextualMenuItemProps, {}> {\n  constructor(props: IContextualMenuItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render() {\n    const { item, classNames } = this.props;\n    const renderContent = item.onRenderContent || this._renderLayout;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderContent(this.props, {\n          renderCheckMarkIcon,\n          renderItemIcon,\n          renderItemName,\n          renderSecondaryText,\n          renderSubMenuIcon,\n        })}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n\n  private _renderLayout(props: IContextualMenuItemProps, defaultRenders: IContextualMenuItemRenderFunctions) {\n    return (\n      <>\n        {defaultRenders.renderCheckMarkIcon(props)}\n        {defaultRenders.renderItemIcon(props)}\n        {defaultRenders.renderItemName(props)}\n        {defaultRenders.renderSecondaryText(props)}\n        {defaultRenders.renderSubMenuIcon(props)}\n      </>\n    );\n  }\n}\n", "import { memoizeFunction } from '../../Utilities';\nimport { mergeStyleSets } from '../../Styling';\nimport type { ITheme } from '../../Styling';\nimport type { IVerticalDividerClassNames } from './VerticalDivider.types';\n\n/**\n * @deprecated use getStyles exported from VerticalDivider.styles.ts\n */\nexport const getDividerClassNames = memoizeFunction(\n  // eslint-disable-next-line deprecation/deprecation\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets({\n      wrapper: {\n        display: 'inline-flex',\n        height: '100%',\n        alignItems: 'center',\n      },\n      divider: {\n        width: 1,\n        height: '100%',\n        backgroundColor: theme.palette.neutralTertiaryAlt,\n      },\n    });\n  },\n);\n", "import {\n  concatStyleSets,\n  getFocusStyle,\n  HighContrastSelector,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nimport type { ITheme } from '../../Styling';\nimport type { IMenuItemStyles } from './ContextualMenu.types';\n\nexport const CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getMenuItemStyles = memoizeFunction((theme: ITheme): IMenuItemStyles => {\n  const { semanticColors, fonts, palette } = theme;\n  const ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n  const ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n  const ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n  const ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n\n  const menuItemStyles: IMenuItemStyles = {\n    item: [\n      fonts.medium,\n      {\n        color: semanticColors.bodyText,\n        position: 'relative',\n        boxSizing: 'border-box',\n      },\n    ],\n    divider: {\n      display: 'block',\n      height: '1px',\n      backgroundColor: ContextualMenuItemDividerColor,\n      position: 'relative',\n    },\n    root: [\n      getFocusStyle(theme),\n      fonts.medium,\n      {\n        color: semanticColors.bodyText,\n        backgroundColor: 'transparent',\n        border: 'none',\n        width: '100%',\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        display: 'block',\n        cursor: 'pointer',\n        padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n        textAlign: 'left',\n      },\n    ],\n    rootDisabled: {\n      color: semanticColors.disabledBodyText,\n      cursor: 'default',\n      pointerEvents: 'none',\n      selectors: {\n        [HighContrastSelector]: {\n          // ensure disabled text looks different than enabled\n          color: 'GrayText',\n          opacity: 1,\n        },\n      },\n    },\n    rootHovered: {\n      backgroundColor: ContextualMenuItemBackgroundHoverColor,\n      color: ContextualMenuItemTextHoverColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDarkAlt,\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary,\n        },\n      },\n    },\n    rootFocused: {\n      backgroundColor: palette.white,\n    },\n    rootChecked: {\n      selectors: {\n        '.ms-ContextualMenu-checkmarkIcon': {\n          color: palette.neutralPrimary,\n        },\n      },\n    },\n    rootPressed: {\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDark,\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary,\n        },\n      },\n    },\n    rootExpanded: {\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      color: semanticColors.bodyTextChecked,\n      selectors: {\n        '.ms-ContextualMenu-submenuIcon': {\n          [HighContrastSelector]: {\n            // icons inside of anchor tags are not properly inheriting color in high contrast\n            color: 'inherit',\n          },\n        },\n        [HighContrastSelector]: {\n          // allow change in background/text to be visible\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n    linkContent: {\n      whiteSpace: 'nowrap',\n      height: 'inherit',\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: '100%',\n    },\n    anchorLink: {\n      padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n      textRendering: 'auto',\n      color: 'inherit',\n      letterSpacing: 'normal',\n      wordSpacing: 'normal',\n      textTransform: 'none',\n      textIndent: '0px',\n      textShadow: 'none',\n      textDecoration: 'none',\n      boxSizing: 'border-box',\n    },\n    label: {\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      display: 'inline-block',\n      flexGrow: '1',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n    },\n    secondaryText: {\n      color: theme.palette.neutralSecondary,\n      paddingLeft: '20px',\n      textAlign: 'right',\n    },\n    icon: {\n      display: 'inline-block',\n      minHeight: '1px',\n      maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      fontSize: IconFontSizes.medium,\n      width: IconFontSizes.medium,\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      selectors: {\n        [MediumScreenSelector]: {\n          fontSize: IconFontSizes.large,\n          width: IconFontSizes.large,\n        },\n      },\n    },\n    iconColor: {\n      color: semanticColors.menuIcon,\n    },\n    iconDisabled: {\n      color: semanticColors.disabledBodyText,\n    },\n    checkmarkIcon: {\n      color: semanticColors.bodySubtext,\n    },\n    subMenuIcon: {\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      color: palette.neutralSecondary,\n      textAlign: 'center',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      fontSize: IconFontSizes.small, // 12px\n      selectors: {\n        ':hover': {\n          color: palette.neutralPrimary,\n        },\n        ':active': {\n          color: palette.neutralPrimary,\n        },\n        [MediumScreenSelector]: {\n          fontSize: IconFontSizes.medium, // 16px\n        },\n      },\n    },\n    splitButtonFlexContainer: [\n      getFocusStyle(theme),\n      {\n        display: 'flex',\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n      },\n    ],\n  };\n\n  return concatStyleSets(menuItemStyles);\n});\n", "import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport {\n  mergeStyleSets,\n  getGlobalClassNames,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  hiddenContentStyle,\n} from '../../Styling';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nimport type { ITheme } from '../../Styling';\nimport type { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport type { IContextualMenuItemStyles, IContextualMenuItemStyleProps } from './ContextualMenuItem.types';\nimport type { IContextualMenuSubComponentStyles } from './ContextualMenu.types';\n\n/**\n * @deprecated Deprecated in favor of mergeStyles API.\n */\nexport interface IContextualMenuClassNames {\n  container?: string;\n  root?: string;\n  list?: string;\n  header?: string;\n  title?: string;\n  subComponentStyles?: IContextualMenuSubComponentStyles;\n}\n\n/**\n * @deprecated Deprecated in favor of mergeStyles API.\n */\nexport interface IMenuItemClassNames {\n  item?: string;\n  divider?: string;\n  root?: string;\n  linkContent?: string;\n  icon?: string;\n  checkmarkIcon?: string;\n  subMenuIcon?: string;\n  label?: string;\n  secondaryText?: string;\n  splitContainer?: string;\n  splitPrimary?: string;\n  splitMenu?: string;\n  linkContentMenu?: string;\n  screenReaderText?: string;\n}\n\nconst CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getSplitButtonVerticalDividerClassNames = memoizeFunction(\n  /* eslint-disable deprecation/deprecation */\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets(getDividerClassNames(theme), {\n      /* eslint-enable deprecation/deprecation */\n      wrapper: {\n        position: 'absolute',\n        right: 28, // width of the splitMenu based on the padding plus icon fontSize\n        selectors: {\n          [MediumScreenSelector]: {\n            right: 32, // fontSize of the icon increased from 12px to 16px\n          },\n        },\n      },\n      divider: {\n        height: 16,\n        width: 1,\n      },\n    });\n  },\n);\n\nconst GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText',\n  splitMenu: 'ms-ContextualMenu-splitMenu',\n  screenReaderText: 'ms-ContextualMenu-screenReaderText',\n};\n\n/**\n * @deprecated Will be removed in \\>= 7.0.\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * @internal\n */\n// TODO: Audit perf. impact of and potentially remove memoizeFunction.\n// https://github.com/microsoft/fluentui/issues/5534\nexport const getItemClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n    className?: string,\n  ): IContextualMenuItemStyles => {\n    const styles = getMenuItemStyles(theme);\n    const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n    return mergeStyleSets({\n      item: [classNames.item, styles.item, itemClassName],\n      divider: [classNames.divider, styles.divider, dividerClassName],\n      root: [\n        classNames.root,\n        styles.root,\n        checked && [classNames.isChecked, styles.rootChecked],\n        isAnchorLink && styles.anchorLink,\n        expanded && [classNames.isExpanded, styles.rootExpanded],\n        disabled && [classNames.isDisabled, styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n        className,\n      ],\n      splitPrimary: [\n        styles.root,\n        {\n          width: `calc(100% - ${CONTEXTUAL_SPLIT_MENU_MINWIDTH})`,\n        },\n        checked && ['is-checked', styles.rootChecked],\n        (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled],\n        !(disabled || primaryDisabled) &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                // when hovering over the splitPrimary also affect the splitMenu\n                [`:hover ~ .${classNames.splitMenu}`]: styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      splitMenu: [\n        classNames.splitMenu,\n        styles.root,\n        {\n          flexBasis: '0',\n          padding: '0 8px',\n          minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH,\n        },\n        expanded && ['is-expanded', styles.rootExpanded],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      anchorLink: styles.anchorLink,\n      linkContent: [classNames.linkContent, styles.linkContent],\n      linkContentMenu: [\n        classNames.linkContentMenu,\n        styles.linkContent,\n        {\n          justifyContent: 'center',\n        },\n      ],\n      icon: [\n        classNames.icon,\n        knownIcon && styles.iconColor,\n        styles.icon,\n        iconClassName,\n        disabled && [classNames.isDisabled, styles.iconDisabled],\n      ],\n      iconColor: styles.iconColor,\n      checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n      subMenuIcon: [\n        classNames.subMenuIcon,\n        styles.subMenuIcon,\n        subMenuClassName,\n        expanded && { color: theme.palette.neutralPrimary },\n        disabled && [styles.iconDisabled],\n      ],\n      label: [classNames.label, styles.label],\n      secondaryText: [classNames.secondaryText, styles.secondaryText],\n      splitContainer: [\n        styles.splitButtonFlexContainer,\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n              },\n            },\n          ],\n      ],\n      screenReaderText: [\n        classNames.screenReaderText,\n        styles.screenReaderText,\n        hiddenContentStyle,\n        { visibility: 'hidden' },\n      ],\n    });\n  },\n);\n\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props - the ContextualMenuItem style props used to generate its styles.\n */\nexport const getItemStyles = (props: IContextualMenuItemStyleProps): IContextualMenuItemStyles => {\n  const {\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  } = props;\n\n  // eslint-disable-next-line deprecation/deprecation\n  return getItemClassNames(\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  );\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ContextualMenuItemBase } from './ContextualMenuItem.base';\nimport { getItemStyles } from './ContextualMenu.classNames';\nimport type {\n  IContextualMenuItemProps,\n  IContextualMenuItemStyleProps,\n  IContextualMenuItemStyles,\n} from './ContextualMenuItem.types';\n\n/**\n * ContextualMenuItem description\n */\nexport const ContextualMenuItem: React.FunctionComponent<IContextualMenuItemProps> = styled<\n  IContextualMenuItemProps,\n  IContextualMenuItemStyleProps,\n  IContextualMenuItemStyles\n>(ContextualMenuItemBase, getItemStyles, undefined, { scope: 'ContextualMenuItem' });\n", "import * as React from 'react';\nimport { anchorProperties, getNativeProps, memoizeFunction, getId, mergeAriaAttributeValues } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport type { IKeytipDataProps } from '../../../KeytipData';\nimport type { IKeytipProps } from '../../../Keytip';\n\nexport class ContextualMenuAnchor extends ContextualMenuItemWrapper {\n  private _anchor = React.createRef<HTMLAnchorElement>();\n  private _ariaDescriptionId: string;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu,\n    } = this.props;\n\n    let anchorRel = item.rel;\n    if (item.target && item.target.toLowerCase() === '_blank') {\n      anchorRel = anchorRel ? anchorRel : 'nofollow noopener noreferrer'; // Safe default to prevent tabjacking\n    }\n\n    const itemHasSubmenu = hasSubmenu(item);\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLAnchorElement>>(item, anchorProperties);\n    const disabled = isItemDisabled(item);\n    const { itemProps, ariaDescription } = item;\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n    // the description in it to be added to ariaDescribedBy\n    if (ariaDescription) {\n      this._ariaDescriptionId = getId();\n    }\n    const ariaDescribedByIds = mergeAriaAttributeValues(\n      item.ariaDescribedBy,\n      ariaDescription ? this._ariaDescriptionId : undefined,\n      nativeProps['aria-describedby'],\n    );\n\n    const additionalItemProperties = {\n      'aria-describedby': ariaDescribedByIds,\n    };\n\n    return (\n      <div>\n        <KeytipData keytipProps={item.keytipProps} ariaDescribedBy={ariaDescribedByIds} disabled={disabled}>\n          {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n            <a\n              {...additionalItemProperties}\n              {...nativeProps}\n              {...keytipAttributes}\n              ref={this._anchor}\n              href={item.href}\n              target={item.target}\n              rel={anchorRel}\n              className={classNames.root}\n              role=\"menuitem\"\n              aria-haspopup={itemHasSubmenu || undefined}\n              aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\n              aria-posinset={focusableElementIndex + 1}\n              aria-setsize={totalItemCount}\n              aria-disabled={isItemDisabled(item)}\n              // eslint-disable-next-line deprecation/deprecation\n              style={item.style}\n              onClick={this._onItemClick}\n              onMouseEnter={this._onItemMouseEnter}\n              onMouseLeave={this._onItemMouseLeave}\n              onMouseMove={this._onItemMouseMove}\n              onKeyDown={itemHasSubmenu ? this._onItemKeyDown : undefined}\n            >\n              <ChildrenRenderer\n                componentRef={item.componentRef}\n                item={item}\n                classNames={classNames}\n                index={index}\n                onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n                hasIcons={hasIcons}\n                openSubMenu={openSubMenu}\n                dismissSubMenu={dismissSubMenu}\n                dismissMenu={dismissMenu}\n                getSubmenuTarget={this._getSubmenuTarget}\n                {...itemProps}\n              />\n              {this._renderAriaDescription(ariaDescription, classNames.screenReaderText)}\n            </a>\n          )}\n        </KeytipData>\n      </div>\n    );\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._anchor.current ? this._anchor.current : undefined;\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClick } = this.props;\n    if (onItemClick) {\n      onItemClick(item, ev);\n    }\n  };\n\n  protected _renderAriaDescription = (ariaDescription?: string, className?: string) => {\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n    return ariaDescription ? (\n      <span id={this._ariaDescriptionId} className={className}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n}\n", "import * as React from 'react';\nimport { initializeComponentRef, shallowCompare } from '../../../Utilities';\nimport type { IContextualMenuItemWrapperProps } from './ContextualMenuItemWrapper.types';\n\nexport class ContextualMenuItemWrapper extends React.Component<IContextualMenuItemWrapperProps> {\n  constructor(props: IContextualMenuItemWrapperProps) {\n    super(props);\n    initializeComponentRef(this);\n  }\n\n  public shouldComponentUpdate(newProps: IContextualMenuItemWrapperProps): boolean {\n    return !shallowCompare(newProps, this.props);\n  }\n\n  protected _onItemMouseEnter = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemMouseLeave = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseLeave } = this.props;\n    if (onItemMouseLeave) {\n      onItemMouseLeave(item, ev);\n    }\n  };\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  };\n\n  protected _onItemMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return undefined;\n  };\n}\n", "import { find, KeyCodes } from '../../Utilities';\n\nexport type KeytipTransitionModifier =\n  | typeof KeyCodes.shift\n  | typeof KeyCodes.ctrl\n  | typeof KeyCodes.alt\n  | typeof KeyCodes.leftWindow;\n\nexport interface IKeytipTransitionKey {\n  key: string;\n  modifierKeys?: KeytipTransitionModifier[];\n}\n\n/**\n * Tests for equality between two IKeytipTransitionKeys.\n *\n * @param key1 - First IKeytipTransitionKey.\n * @param key2 - Second IKeytipTransitionKey.\n * @returns T/F if the transition keys are equal.\n */\nexport function transitionKeysAreEqual(key1: IKeytipTransitionKey, key2: IKeytipTransitionKey): boolean {\n  if (key1.key !== key2.key) {\n    return false;\n  }\n\n  let mod1 = key1.modifierKeys;\n  let mod2 = key2.modifierKeys;\n\n  if ((!mod1 && mod2) || (mod1 && !mod2)) {\n    // Not equal if one modifier is defined and the other isn't\n    return false;\n  }\n\n  if (mod1 && mod2) {\n    if (mod1.length !== mod2.length) {\n      return false;\n    }\n\n    // Sort both arrays\n    mod1 = mod1.sort();\n    mod2 = mod2.sort();\n    for (let i = 0; i < mod1.length; i++) {\n      if (mod1[i] !== mod2[i]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\n/**\n * Tests if 'key' is present in 'keys'.\n *\n * @param keys - Array of IKeytipTransitionKey.\n * @param key - IKeytipTransitionKey to find in 'keys'.\n * @returns T/F if 'keys' contains 'key'.\n */\nexport function transitionKeysContain(keys: IKeytipTransitionKey[], key: IKeytipTransitionKey): boolean {\n  return !!find(keys, (transitionKey: IKeytipTransitionKey) => {\n    return transitionKeysAreEqual(transitionKey, key);\n  });\n}\n", "import type { IKeytipProps } from '../../Keytip';\n\nexport interface IKeytipConfig {\n  keytips: IKeytipConfigItem[];\n}\n\nexport interface IKeytipConfigItem {\n  /**\n   * Key Sequence for this keytip only\n   * If sequence is not defined it will be derived from the content string\n   */\n  sequence?: string;\n\n  /**\n   * Content for the keytip\n   */\n  content: string;\n\n  /**\n   * Identifier for the keytip, to be used to access in the configMap\n   */\n  id: string;\n\n  /**\n   * Optional props in IKeytipProps\n   */\n  optionalProps?: Partial<IKeytipProps>;\n\n  /**\n   * Children keytips of this keytip\n   */\n  children?: IKeytipConfigItem[];\n}\n\nexport interface IKeytipConfigMap {\n  [id: string]: IKeytipProps;\n}\n\n/**\n * Builds a map of ID to IKeytipProps\n *\n * @param config - IKeytipConfig object\n * @returns Config map\n */\nexport function buildKeytipConfigMap(config: IKeytipConfig): IKeytipConfigMap {\n  const configMap: IKeytipConfigMap = {};\n\n  for (const keytip of config.keytips) {\n    constructKeytip(configMap, [], keytip);\n  }\n\n  return configMap;\n}\n\n/**\n * Constructs a keytip from an IKeytipConfigItem and puts it in the configMap\n *\n * @param configMap - IKeytipConfigMap to store the keytip in\n * @param parentSequence - string of the parent keytip\n * @param keytip - IKeytipConfigItem data\n */\nexport function constructKeytip(\n  configMap: IKeytipConfigMap,\n  parentSequence: string[],\n  keytip: IKeytipConfigItem,\n): void {\n  // Compute full key sequence\n  const sequence = keytip.sequence ? keytip.sequence : keytip.content.toLocaleLowerCase();\n  const keytipSequence = parentSequence.concat(sequence);\n\n  // Save props in configMap\n  const keytipProps: IKeytipProps = { ...keytip.optionalProps, keySequences: keytipSequence, content: keytip.content };\n  configMap[keytip.id] = keytipProps;\n\n  if (keytip.children) {\n    for (const child of keytip.children) {\n      // Create keytips for all children\n      constructKeytip(configMap, keytipSequence, child);\n    }\n  }\n}\n", "export const KTP_PREFIX = 'ktp';\nexport const KTP_SEPARATOR = '-';\nexport const KTP_FULL_PREFIX = KTP_PREFIX + KTP_SEPARATOR;\nexport const DATAKTP_TARGET = 'data-ktp-target';\nexport const DATAKTP_EXECUTE_TARGET = 'data-ktp-execute-target';\nexport const DATAKTP_ARIA_TARGET = 'data-ktp-aria-target';\nexport const KTP_LAYER_ID = 'ktp-layer-id';\nexport const KTP_ARIA_SEPARATOR = ', ';\n\n// Events\nexport namespace KeytipEvents {\n  export const KEYTIP_ADDED = 'keytipAdded';\n  export const KEYTIP_REMOVED = 'keytipRemoved';\n  export const KEYTIP_UPDATED = 'keytipUpdated';\n  export const PERSISTED_KEYTIP_ADDED = 'persistedKeytipAdded';\n  export const PERSISTED_KEYTIP_REMOVED = 'persistedKeytipRemoved';\n  export const PERSISTED_KEYTIP_EXECUTE = 'persistedKeytipExecute';\n  export const ENTER_KEYTIP_MODE = 'enterKeytipMode';\n  export const EXIT_KEYTIP_MODE = 'exitKeytipMode';\n}\n", "import { EventGroup, getId } from '../../Utilities';\nimport { KeytipEvents } from '../../utilities/keytips/KeytipConstants';\nimport type { IKeytipProps } from '../../Keytip';\n\nexport interface IUniqueKeytip {\n  uniqueID: string;\n  keytip: IKeytipProps;\n}\n\n/**\n * This class is responsible for handling registering, updating, and unregistering of keytips\n */\nexport class KeytipManager {\n  private static _instance: KeytipManager = new KeytipManager();\n\n  public keytips: { [key: string]: IUniqueKeytip } = {};\n  public persistedKeytips: { [key: string]: IUniqueKeytip } = {};\n  public sequenceMapping: { [key: string]: IKeytipProps } = {};\n\n  // This is (and should be) updated and kept in sync\n  // with the inKeytipMode in KeytipLayer.\n  public inKeytipMode = false;\n\n  // Boolean that gets checked before entering keytip mode by the KeytipLayer\n  // Used for an override in special cases (e.g. Disable entering keytip mode when a modal is shown)\n  public shouldEnterKeytipMode = true;\n\n  // Boolean to indicate whether to delay firing an event to update subscribers of\n  // keytip data changed.\n  public delayUpdatingKeytipChange = false;\n\n  /**\n   * Static function to get singleton KeytipManager instance\n   *\n   * @returns Singleton KeytipManager instance\n   */\n  public static getInstance(): KeytipManager {\n    return this._instance;\n  }\n\n  /**\n   * Initialization code to set set parameters to define\n   * how the KeytipManager handles keytip data.\n   *\n   * @param delayUpdatingKeytipChange - T/F if we should delay notifiying keytip subscribers\n   * of keytip changes\n   */\n  public init(delayUpdatingKeytipChange: boolean) {\n    this.delayUpdatingKeytipChange = delayUpdatingKeytipChange;\n  }\n\n  /**\n   * Registers a keytip\n   *\n   * @param keytipProps - Keytip to register\n   * @param persisted - T/F if this keytip should be persisted, default is false\n   * @returns Unique ID for this keytip\n   */\n  public register(keytipProps: IKeytipProps, persisted: boolean = false): string {\n    let props: IKeytipProps = keytipProps;\n    if (!persisted) {\n      // Add the overflowSetSequence if necessary\n      props = this.addParentOverflow(keytipProps);\n      this.sequenceMapping[props.keySequences.toString()] = props;\n    }\n    // Create a unique keytip\n    const uniqueKeytip: IUniqueKeytip = this._getUniqueKtp(props);\n    // Add to dictionary\n    persisted\n      ? (this.persistedKeytips[uniqueKeytip.uniqueID] = uniqueKeytip)\n      : (this.keytips[uniqueKeytip.uniqueID] = uniqueKeytip);\n\n    // We only want to add something new if we are currently showing keytip mode\n    if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n      const event = persisted ? KeytipEvents.PERSISTED_KEYTIP_ADDED : KeytipEvents.KEYTIP_ADDED;\n      EventGroup.raise(this, event, {\n        keytip: props,\n        uniqueID: uniqueKeytip.uniqueID,\n      });\n    }\n\n    return uniqueKeytip.uniqueID;\n  }\n\n  /**\n   * Update a keytip\n   *\n   * @param keytipProps - Keytip to update\n   * @param uniqueID - Unique ID of this keytip\n   */\n  public update(keytipProps: IKeytipProps, uniqueID: string): void {\n    const newKeytipProps = this.addParentOverflow(keytipProps);\n    const uniqueKeytip = this._getUniqueKtp(newKeytipProps, uniqueID);\n    const oldKeyTip = this.keytips[uniqueID];\n    if (oldKeyTip) {\n      // Update everything except 'visible'\n      uniqueKeytip.keytip.visible = oldKeyTip.keytip.visible;\n      // Update keytip in this.keytips\n      this.keytips[uniqueID] = uniqueKeytip;\n\n      // Update the sequence to be up to date\n      delete this.sequenceMapping[oldKeyTip.keytip.keySequences.toString()];\n      this.sequenceMapping[uniqueKeytip.keytip.keySequences.toString()] = uniqueKeytip.keytip;\n\n      // Raise event only if we are currently in keytip mode\n      if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n        EventGroup.raise(this, KeytipEvents.KEYTIP_UPDATED, {\n          keytip: uniqueKeytip.keytip,\n          uniqueID: uniqueKeytip.uniqueID,\n        });\n      }\n    }\n  }\n\n  /**\n   * Unregisters a keytip\n   *\n   * @param keytipToRemove - IKeytipProps of the keytip to remove\n   * @param uniqueID - Unique ID of this keytip\n   * @param persisted - T/F if this keytip should be persisted, default is false\n   */\n  public unregister(keytipToRemove: IKeytipProps, uniqueID: string, persisted: boolean = false): void {\n    persisted ? delete this.persistedKeytips[uniqueID] : delete this.keytips[uniqueID];\n    !persisted && delete this.sequenceMapping[keytipToRemove.keySequences.toString()];\n\n    const event = persisted ? KeytipEvents.PERSISTED_KEYTIP_REMOVED : KeytipEvents.KEYTIP_REMOVED;\n    // Update keytips only if we're in keytip mode\n    if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n      EventGroup.raise(this, event, {\n        keytip: keytipToRemove,\n        uniqueID: uniqueID,\n      });\n    }\n  }\n\n  /**\n   * Manual call to enter keytip mode\n   */\n  public enterKeytipMode(): void {\n    EventGroup.raise(this, KeytipEvents.ENTER_KEYTIP_MODE);\n  }\n\n  /**\n   * Manual call to exit keytip mode\n   */\n  public exitKeytipMode(): void {\n    EventGroup.raise(this, KeytipEvents.EXIT_KEYTIP_MODE);\n  }\n\n  /**\n   * Gets all IKeytipProps from this.keytips\n   *\n   * @returns All keytips stored in the manager\n   */\n  public getKeytips(): IKeytipProps[] {\n    return Object.keys(this.keytips).map(key => this.keytips[key].keytip);\n  }\n\n  /**\n   * Adds the overflowSetSequence to the keytipProps if its parent keytip also has it\n   *\n   * @param keytipProps - Keytip props to add overflowSetSequence to if necessary\n   * @returns - Modified keytip props, if needed to be modified\n   */\n  public addParentOverflow(keytipProps: IKeytipProps): IKeytipProps {\n    const fullSequence = [...keytipProps.keySequences];\n    fullSequence.pop();\n    if (fullSequence.length !== 0) {\n      const parentKeytip = this.sequenceMapping[fullSequence.toString()];\n      if (parentKeytip && parentKeytip.overflowSetSequence) {\n        return {\n          ...keytipProps,\n          overflowSetSequence: parentKeytip.overflowSetSequence,\n        };\n      }\n    }\n    return keytipProps;\n  }\n\n  /**\n   * Public function to bind for overflow items that have a submenu\n   */\n  public menuExecute(overflowButtonSequences: string[], keytipSequences: string[]) {\n    EventGroup.raise(this, KeytipEvents.PERSISTED_KEYTIP_EXECUTE, {\n      overflowButtonSequences,\n      keytipSequences,\n    });\n  }\n\n  /**\n   * Creates an IUniqueKeytip object\n   *\n   * @param keytipProps - IKeytipProps\n   * @param uniqueID - Unique ID, will default to the next unique ID if not passed\n   * @returns IUniqueKeytip object\n   */\n  private _getUniqueKtp(keytipProps: IKeytipProps, uniqueID: string = getId()): IUniqueKeytip {\n    return { keytip: { ...keytipProps }, uniqueID };\n  }\n}\n", "import { KTP_SEPARATOR, KTP_PREFIX, DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET, KTP_LAYER_ID } from './KeytipConstants';\nimport { addElementAtIndex } from '../../Utilities';\n\n/**\n * Converts a whole set of KeySequences into one keytip ID, which will be the ID for the last keytip sequence specified\n * keySequences should not include the initial keytip 'start' sequence.\n *\n * @param keySequences - Full path of IKeySequences for one keytip.\n * @returns String to use for the keytip ID.\n */\nexport function sequencesToID(keySequences: string[]): string {\n  return keySequences.reduce((prevValue: string, keySequence: string): string => {\n    return prevValue + KTP_SEPARATOR + keySequence.split('').join(KTP_SEPARATOR);\n  }, KTP_PREFIX);\n}\n\n/**\n * Merges an overflow sequence with a key sequence.\n *\n * @param keySequences - Full sequence for one keytip.\n * @param overflowKeySequences - Full overflow keytip sequence.\n * @returns Sequence that will be used by the keytip when in the overflow.\n */\nexport function mergeOverflows(keySequences: string[], overflowKeySequences: string[]): string[] {\n  const overflowSequenceLen = overflowKeySequences.length;\n  const overflowSequence = [...overflowKeySequences].pop();\n  const newKeySequences = [...keySequences];\n  return addElementAtIndex(newKeySequences, overflowSequenceLen - 1, overflowSequence!);\n}\n\n/**\n * Constructs the data-ktp-target attribute selector from a full key sequence.\n *\n * @param keySequences - Full string[] for a Keytip.\n * @returns String selector to use to query for the keytip target.\n */\nexport function ktpTargetFromSequences(keySequences: string[]): string {\n  return '[' + DATAKTP_TARGET + '=\"' + sequencesToID(keySequences) + '\"]';\n}\n\n/**\n * Constructs the data-ktp-execute-target attribute selector from a keytip ID.\n *\n * @param keytipId - ID of the Keytip.\n * @returns String selector to use to query for the keytip execute target.\n */\nexport function ktpTargetFromId(keytipId: string): string {\n  return '[' + DATAKTP_EXECUTE_TARGET + '=\"' + keytipId + '\"]';\n}\n\n/**\n * Gets the aria-describedby value to put on the component with this keytip.\n *\n * @param keySequences - KeySequences of the keytip.\n * @returns The aria-describedby value to set on the component with this keytip.\n */\nexport function getAriaDescribedBy(keySequences: string[]): string {\n  const describedby = ' ' + KTP_LAYER_ID;\n  if (!keySequences.length) {\n    // Return just the layer ID\n    return describedby;\n  }\n\n  return describedby + ' ' + sequencesToID(keySequences);\n}\n", "import * as React from 'react';\nimport { useConst, useIsomorphicLayoutEffect, usePrevious } from '@fluentui/react-hooks';\nimport { mergeAriaAttributeValues } from '../../Utilities';\nimport { KeytipManager, mergeOverflows, sequencesToID, getAriaDescribedBy } from '../../utilities/keytips/index';\nimport type { KeytipDataOptions } from './KeytipData.types';\nimport type { IKeytipProps } from '../../Keytip';\n\nexport interface IKeytipData {\n  ariaDescribedBy: string | undefined;\n  keytipId: string | undefined;\n}\n\n/**\n * Hook that creates attributes for components which are enabled with Keytip.\n */\nexport function useKeytipData(options: KeytipDataOptions): IKeytipData {\n  const uniqueId = React.useRef<string>();\n  const keytipProps: IKeytipProps | undefined = options.keytipProps\n    ? {\n        disabled: options.disabled,\n        ...options.keytipProps,\n      }\n    : undefined;\n\n  const keytipManager = useConst<KeytipManager>(KeytipManager.getInstance());\n  const prevOptions = usePrevious(options);\n\n  // useLayoutEffect used to strictly emulate didUpdate/didMount behavior\n  useIsomorphicLayoutEffect(() => {\n    if (\n      uniqueId.current &&\n      keytipProps &&\n      (prevOptions?.keytipProps !== options.keytipProps || prevOptions?.disabled !== options.disabled)\n    ) {\n      keytipManager.update(keytipProps, uniqueId.current);\n    }\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    // Register Keytip in KeytipManager\n    if (keytipProps) {\n      uniqueId.current = keytipManager.register(keytipProps);\n    }\n\n    return () => {\n      // Unregister Keytip in KeytipManager\n      keytipProps && keytipManager.unregister(keytipProps, uniqueId.current!);\n    };\n    // this is meant to run only at mount, and updates are handled separately\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let nativeKeytipProps: IKeytipData = {\n    ariaDescribedBy: undefined,\n    keytipId: undefined,\n  };\n\n  if (keytipProps) {\n    nativeKeytipProps = getKeytipData(keytipManager, keytipProps, options.ariaDescribedBy);\n  }\n\n  return nativeKeytipProps;\n}\n\n/**\n * Gets the aria- and data- attributes to attach to the component\n * @param keytipProps - options for Keytip\n * @param describedByPrepend - ariaDescribedBy value to prepend\n */\nfunction getKeytipData(\n  keytipManager: KeytipManager,\n  keytipProps: IKeytipProps,\n  describedByPrepend?: string,\n): IKeytipData {\n  // Add the parent overflow sequence if necessary\n  const newKeytipProps = keytipManager.addParentOverflow(keytipProps);\n\n  // Construct aria-describedby and data-ktp-id attributes\n  const ariaDescribedBy = mergeAriaAttributeValues(\n    describedByPrepend,\n    getAriaDescribedBy(newKeytipProps.keySequences),\n  )!;\n\n  let keySequences = [...newKeytipProps.keySequences];\n  if (newKeytipProps.overflowSetSequence) {\n    keySequences = mergeOverflows(keySequences, newKeytipProps.overflowSetSequence);\n  }\n  const keytipId = sequencesToID(keySequences);\n\n  return {\n    ariaDescribedBy,\n    keytipId,\n  };\n}\n", "import * as React from 'react';\nimport { DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET } from '../../utilities/keytips/index';\nimport { useKeytipData } from './useKeytipData';\nimport type { IRenderComponent } from '../../Utilities';\nimport type { IKeytipDataProps } from './KeytipData.types';\n\n/**\n * A small element to help the target component correctly read out its aria-describedby for its Keytip\n * {@docCategory Keytips}\n */\nexport const KeytipData: React.FunctionComponent<IKeytipDataProps & IRenderComponent<{}>> = props => {\n  const { children, ...keytipDataProps } = props;\n  const { keytipId, ariaDescribedBy } = useKeytipData(keytipDataProps);\n\n  return children({\n    [DATAKTP_TARGET]: keytipId,\n    [DATAKTP_EXECUTE_TARGET]: keytipId,\n    'aria-describedby': ariaDescribedBy,\n  });\n};\n", "import * as React from 'react';\nimport { DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET, DATAKTP_ARIA_TARGET } from '../../utilities/keytips/index';\nimport { useKeytipData } from './useKeytipData';\nimport type { KeytipDataOptions } from './KeytipData.types';\n\n/**\n * Hook that creates a ref which is used for passing to Keytip target element.\n * The ref will handle setting the attributes needed for Keytip to work.\n */\nexport function useKeytipRef<TElement extends HTMLElement = HTMLElement>(\n  options: KeytipDataOptions,\n): React.Ref<TElement> {\n  const { keytipId, ariaDescribedBy } = useKeytipData(options);\n\n  const contentRef: React.Ref<TElement> = React.useCallback(\n    (contentElement: TElement | null): void => {\n      if (!contentElement) {\n        return;\n      }\n\n      const targetElement = findFirstElement(contentElement, DATAKTP_TARGET) || contentElement;\n      const executeElement = findFirstElement(contentElement, DATAKTP_EXECUTE_TARGET) || targetElement;\n      const ariaElement = findFirstElement(contentElement, DATAKTP_ARIA_TARGET) || executeElement;\n\n      setAttribute(targetElement, DATAKTP_TARGET, keytipId);\n      setAttribute(executeElement, DATAKTP_EXECUTE_TARGET, keytipId);\n      setAttribute(ariaElement, 'aria-describedby', ariaDescribedBy, true);\n    },\n    [keytipId, ariaDescribedBy],\n  );\n\n  return contentRef;\n}\n\nexport function setAttribute(\n  element: HTMLElement | null,\n  attributeName: string,\n  attributeValue: string | undefined,\n  append: boolean = false,\n): void {\n  if (element && attributeValue) {\n    let value = attributeValue;\n    if (append) {\n      const currentValue = element.getAttribute(attributeName);\n      if (currentValue && currentValue.indexOf(attributeValue) === -1) {\n        value = `${currentValue} ${attributeValue}`;\n      }\n    }\n\n    element.setAttribute(attributeName, value);\n  }\n}\n\nfunction findFirstElement(rootElement: HTMLElement, dataAttribute: string): HTMLElement | null {\n  return rootElement.querySelector(`[${dataAttribute}]`);\n}\n", "import * as React from 'react';\nimport { buttonProperties, getNativeProps, memoizeFunction, getId, mergeAriaAttributeValues } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, isItemDisabled, hasSubmenu, getMenuItemAriaRole } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport type { IKeytipDataProps } from '../../../KeytipData';\nimport type { IKeytipProps } from '../../../Keytip';\n\nexport class ContextualMenuButton extends ContextualMenuItemWrapper {\n  private _btn = React.createRef<HTMLButtonElement>();\n  private _ariaDescriptionId: string;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemMouseDown,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu,\n    } = this.props;\n\n    const isChecked: boolean | null | undefined = getIsChecked(item);\n    const canCheck: boolean = isChecked !== null;\n    const defaultRole = getMenuItemAriaRole(item);\n    const itemHasSubmenu = hasSubmenu(item);\n    const { itemProps, ariaLabel, ariaDescription } = item;\n\n    const buttonNativeProperties = getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(\n      item,\n      buttonProperties,\n    );\n    // Do not add the disabled attribute to the button so that it is focusable\n    delete buttonNativeProperties.disabled;\n\n    const itemRole = item.role || defaultRole;\n\n    // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n    // the description in it to be added to ariaDescribedBy\n    if (ariaDescription) {\n      this._ariaDescriptionId = getId();\n    }\n    const ariaDescribedByIds = mergeAriaAttributeValues(\n      item.ariaDescribedBy,\n      ariaDescription ? this._ariaDescriptionId : undefined,\n      buttonNativeProperties['aria-describedby'],\n    );\n\n    const itemButtonProperties = {\n      className: classNames.root,\n      onClick: this._onItemClick,\n      onKeyDown: itemHasSubmenu ? this._onItemKeyDown : undefined,\n      onMouseEnter: this._onItemMouseEnter,\n      onMouseLeave: this._onItemMouseLeave,\n      onMouseDown: (ev: React.MouseEvent<HTMLButtonElement>) =>\n        onItemMouseDown ? onItemMouseDown(item, ev) : undefined,\n      onMouseMove: this._onItemMouseMove,\n      href: item.href,\n      title: item.title,\n      'aria-label': ariaLabel,\n      'aria-describedby': ariaDescribedByIds,\n      'aria-haspopup': itemHasSubmenu || undefined,\n      'aria-expanded': itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\n      'aria-posinset': focusableElementIndex + 1,\n      'aria-setsize': totalItemCount,\n      'aria-disabled': isItemDisabled(item),\n      'aria-checked':\n        (itemRole === 'menuitemcheckbox' || itemRole === 'menuitemradio') && canCheck ? !!isChecked : undefined,\n      'aria-selected': itemRole === 'menuitem' && canCheck ? !!isChecked : undefined,\n      role: itemRole,\n      // eslint-disable-next-line deprecation/deprecation\n      style: item.style,\n    };\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    return (\n      <KeytipData keytipProps={keytipProps} ariaDescribedBy={ariaDescribedByIds} disabled={isItemDisabled(item)}>\n        {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n          <button ref={this._btn} {...buttonNativeProperties} {...itemButtonProperties} {...keytipAttributes}>\n            <ChildrenRenderer\n              componentRef={item.componentRef}\n              item={item}\n              classNames={classNames}\n              index={index}\n              onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n              hasIcons={hasIcons}\n              openSubMenu={openSubMenu}\n              dismissSubMenu={dismissSubMenu}\n              dismissMenu={dismissMenu}\n              getSubmenuTarget={this._getSubmenuTarget}\n              {...itemProps}\n            />\n            {this._renderAriaDescription(ariaDescription, classNames.screenReaderText)}\n          </button>\n        )}\n      </KeytipData>\n    );\n  }\n\n  protected _renderAriaDescription = (ariaDescription?: string, className?: string) => {\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n    return ariaDescription ? (\n      <span id={this._ariaDescriptionId} className={className}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._btn.current ? this._btn.current : undefined;\n  };\n}\n", "import * as React from 'react';\nimport {\n  buttonProperties,\n  getNativeProps,\n  KeyCodes,\n  mergeAriaAttributeValues,\n  memoizeFunction,\n  Async,\n  EventGroup,\n  getId,\n} from '../../../Utilities';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { getSplitButtonVerticalDividerClassNames } from '../ContextualMenu.classNames';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, getMenuItemAriaRole, hasSubmenu, isItemDisabled } from '../../../utilities/contextualMenu/index';\nimport { VerticalDivider } from '../../../Divider';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport type { IContextualMenuItem } from '../ContextualMenu.types';\nimport type { IMenuItemClassNames } from '../ContextualMenu.classNames';\nimport type { IKeytipProps } from '../../../Keytip';\nimport type { IContextualMenuItemWrapperProps } from './ContextualMenuItemWrapper.types';\n\nexport interface IContextualMenuSplitButtonState {}\n\nconst TouchIdleDelay = 500; /* ms */\n\nexport class ContextualMenuSplitButton extends ContextualMenuItemWrapper {\n  private _splitButton: HTMLDivElement;\n  private _lastTouchTimeoutId: number | undefined;\n  private _processingTouch: boolean;\n  private _ariaDescriptionId: string;\n\n  private _async: Async;\n  private _events: EventGroup;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  constructor(props: IContextualMenuItemWrapperProps) {\n    super(props);\n\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n  }\n\n  public componentDidMount() {\n    if (this._splitButton && 'onpointerdown' in this._splitButton) {\n      this._events.on(this._splitButton, 'pointerdown', this._onPointerDown, true);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      onItemMouseLeave,\n      expandedMenuItemKey,\n    } = this.props;\n\n    const itemHasSubmenu = hasSubmenu(item);\n\n    let { keytipProps } = item;\n    if (keytipProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n    // the description in it to be added to ariaDescribedBy\n    const { ariaDescription } = item;\n    if (ariaDescription) {\n      this._ariaDescriptionId = getId();\n    }\n\n    const ariaChecked = getIsChecked(item) ?? undefined;\n\n    return (\n      <KeytipData keytipProps={keytipProps} disabled={isItemDisabled(item)}>\n        {(keytipAttributes: any): JSX.Element => (\n          <div\n            data-ktp-target={keytipAttributes['data-ktp-target']}\n            ref={(splitButton: HTMLDivElement) => (this._splitButton = splitButton)}\n            role={getMenuItemAriaRole(item)}\n            aria-label={item.ariaLabel}\n            className={classNames.splitContainer}\n            aria-disabled={isItemDisabled(item)}\n            aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\n            aria-haspopup={true}\n            aria-describedby={mergeAriaAttributeValues(\n              item.ariaDescribedBy,\n              ariaDescription ? this._ariaDescriptionId : undefined,\n              keytipAttributes['aria-describedby'],\n            )}\n            aria-checked={ariaChecked}\n            aria-posinset={focusableElementIndex + 1}\n            aria-setsize={totalItemCount}\n            onMouseEnter={this._onItemMouseEnterPrimary}\n            onMouseLeave={\n              onItemMouseLeave ? onItemMouseLeave.bind(this, { ...item, subMenuProps: null, items: null }) : undefined\n            }\n            onMouseMove={this._onItemMouseMovePrimary}\n            onKeyDown={this._onItemKeyDown}\n            onClick={this._executeItemClick}\n            onTouchStart={this._onTouchStart}\n            tabIndex={0}\n            data-is-focusable={true}\n            aria-roledescription={item['aria-roledescription']}\n          >\n            {this._renderSplitPrimaryButton(item, classNames, index, hasCheckmarks!, hasIcons!)}\n            {this._renderSplitDivider(item)}\n            {this._renderSplitIconButton(item, classNames, index, keytipAttributes)}\n            {this._renderAriaDescription(ariaDescription, classNames.screenReaderText)}\n          </div>\n        )}\n      </KeytipData>\n    );\n  }\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      this._executeItemClick(ev);\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._splitButton;\n  };\n\n  protected _renderAriaDescription = (ariaDescription?: string, className?: string) => {\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n    return ariaDescription ? (\n      <span id={this._ariaDescriptionId} className={className}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n\n  private _renderSplitPrimaryButton(\n    item: IContextualMenuItem,\n    // eslint-disable-next-line deprecation/deprecation\n    classNames: IMenuItemClassNames,\n    index: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean,\n  ) {\n    const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem, onItemClick } = this.props;\n\n    const itemProps: IContextualMenuItem = {\n      key: item.key,\n      disabled: isItemDisabled(item) || item.primaryDisabled,\n      /* eslint-disable deprecation/deprecation */\n      name: item.name,\n      text: item.text || item.name,\n      secondaryText: item.secondaryText,\n      /* eslint-enable deprecation/deprecation */\n      className: classNames.splitPrimary,\n      canCheck: item.canCheck,\n      isChecked: item.isChecked,\n      checked: item.checked,\n      iconProps: item.iconProps,\n      onRenderIcon: item.onRenderIcon,\n      data: item.data,\n      'data-is-focusable': false,\n    };\n\n    const { itemProps: itemComponentProps } = item;\n\n    return (\n      <button {...getNativeProps(itemProps, buttonProperties)}>\n        <ChildrenRenderer\n          data-is-focusable={false}\n          item={itemProps}\n          classNames={classNames}\n          index={index}\n          onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n          hasIcons={hasIcons}\n          {...itemComponentProps}\n        />\n      </button>\n    );\n  }\n\n  private _renderSplitDivider(item: IContextualMenuItem) {\n    const getDividerClassNames =\n      item.getSplitButtonVerticalDividerClassNames || getSplitButtonVerticalDividerClassNames;\n    return <VerticalDivider getClassNames={getDividerClassNames} />;\n  }\n\n  private _renderSplitIconButton(\n    item: IContextualMenuItem,\n    classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n    index: number,\n    keytipAttributes: any,\n  ) {\n    const {\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      onItemMouseLeave,\n      onItemMouseDown,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu,\n    } = this.props;\n\n    const itemProps: IContextualMenuItem = {\n      onClick: this._onIconItemClick,\n      disabled: isItemDisabled(item),\n      className: classNames.splitMenu,\n      subMenuProps: item.subMenuProps,\n      submenuIconProps: item.submenuIconProps,\n      split: true,\n      key: item.key,\n    };\n\n    const buttonProps = {\n      ...getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(itemProps, buttonProperties),\n      ...{\n        onMouseEnter: this._onItemMouseEnterIcon,\n        onMouseLeave: onItemMouseLeave ? onItemMouseLeave.bind(this, item) : undefined,\n        onMouseDown: (ev: React.MouseEvent<HTMLButtonElement>) =>\n          onItemMouseDown ? onItemMouseDown(item, ev) : undefined,\n        onMouseMove: this._onItemMouseMoveIcon,\n        'data-is-focusable': false,\n        'data-ktp-execute-target': keytipAttributes['data-ktp-execute-target'],\n        'aria-hidden': true,\n      },\n    };\n\n    const { itemProps: itemComponentProps } = item;\n\n    return (\n      <button {...buttonProps}>\n        <ChildrenRenderer\n          componentRef={item.componentRef}\n          item={itemProps}\n          classNames={classNames}\n          index={index}\n          hasIcons={false}\n          openSubMenu={openSubMenu}\n          dismissSubMenu={dismissSubMenu}\n          dismissMenu={dismissMenu}\n          getSubmenuTarget={this._getSubmenuTarget}\n          {...itemComponentProps}\n        />\n      </button>\n    );\n  }\n\n  private _onItemMouseEnterPrimary = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseEnterIcon = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseMovePrimary = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseMoveIcon = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, this._splitButton);\n    }\n  };\n\n  private _onIconItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, (this._splitButton ? this._splitButton : ev.currentTarget) as HTMLElement);\n    }\n  };\n\n  private _executeItemClick = (ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const { item, executeItemClick, onItemClick } = this.props;\n\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (this._processingTouch && onItemClick) {\n      return onItemClick(item, ev);\n    }\n\n    if (executeItemClick) {\n      executeItemClick(item, ev);\n    }\n  };\n\n  private _onTouchStart = (ev: React.TouchEvent<HTMLElement>): void => {\n    if (this._splitButton && !('onpointerdown' in this._splitButton)) {\n      this._handleTouchAndPointerEvent(ev);\n    }\n  };\n\n  private _onPointerDown = (ev: PointerEvent): void => {\n    if (ev.pointerType === 'touch') {\n      this._handleTouchAndPointerEvent(ev);\n      ev.preventDefault();\n      ev.stopImmediatePropagation();\n    }\n  };\n\n  private _handleTouchAndPointerEvent(ev: React.TouchEvent<HTMLElement> | PointerEvent) {\n    const { onTap } = this.props;\n\n    if (onTap) {\n      onTap(ev);\n    }\n    // If we already have an existing timeout from a previous touch/pointer event\n    // cancel that timeout so we can set a new one.\n    if (this._lastTouchTimeoutId) {\n      this._async.clearTimeout(this._lastTouchTimeoutId);\n      this._lastTouchTimeoutId = undefined;\n    }\n    this._processingTouch = true;\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\n      this._processingTouch = false;\n      this._lastTouchTimeoutId = undefined;\n    }, TouchIdleDelay);\n  }\n}\n", "import type { IVerticalDividerPropsStyles, IVerticalDividerStyles } from './VerticalDivider.types';\nimport type { IStyleFunction } from '../../Utilities';\n\nexport const getStyles: IStyleFunction<IVerticalDividerPropsStyles, IVerticalDividerStyles> = (\n  props: IVerticalDividerPropsStyles,\n): IVerticalDividerStyles => {\n  // eslint-disable-next-line deprecation/deprecation\n  const { theme, getClassNames, className } = props;\n\n  if (!theme) {\n    throw new Error('Theme is undefined or null.');\n  }\n\n  if (getClassNames) {\n    const names = getClassNames(theme);\n    return {\n      wrapper: [names.wrapper],\n      divider: [names.divider],\n    };\n  }\n\n  return {\n    wrapper: [\n      {\n        display: 'inline-flex',\n        height: '100%',\n        alignItems: 'center',\n      },\n      className,\n    ],\n    divider: [\n      {\n        width: 1,\n        height: '100%',\n        backgroundColor: theme.palette.neutralTertiaryAlt,\n      },\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport type {\n  IVerticalDividerProps,\n  IVerticalDividerPropsStyles,\n  IVerticalDividerStyles,\n} from './VerticalDivider.types';\n\nconst getClassNames = classNamesFunction<IVerticalDividerPropsStyles, IVerticalDividerStyles>();\n\nexport const VerticalDividerBase: React.FunctionComponent<IVerticalDividerProps> = React.forwardRef<\n  HTMLDivElement,\n  IVerticalDividerProps\n>((props, ref) => {\n  // eslint-disable-next-line deprecation/deprecation\n  const { styles, theme, getClassNames: deprecatedGetClassNames, className } = props;\n  const classNames = getClassNames(styles, { theme: theme, getClassNames: deprecatedGetClassNames, className });\n  return (\n    <span className={classNames.wrapper} ref={ref}>\n      <span className={classNames.divider} />\n    </span>\n  );\n});\nVerticalDividerBase.displayName = 'VerticalDividerBase';\n", "import * as React from 'react';\nimport { getStyles } from './VerticalDivider.styles';\nimport { VerticalDividerBase } from './VerticalDivider.base';\nimport { styled } from '../../Utilities';\nimport type {\n  IVerticalDividerProps,\n  IVerticalDividerStyles,\n  IVerticalDividerPropsStyles,\n} from './VerticalDivider.types';\n\nexport const VerticalDivider: React.FunctionComponent<IVerticalDividerProps> = styled<\n  IVerticalDividerProps,\n  IVerticalDividerPropsStyles,\n  IVerticalDividerStyles\n>(VerticalDividerBase, getStyles, undefined, {\n  scope: 'VerticalDivider',\n});\n", "import * as React from 'react';\nimport { getWindow } from '@fluentui/utilities';\nimport { useOnEvent } from '@fluentui/react-hooks';\nimport { ResponsiveMode, getResponsiveMode, getInitialResponsiveMode } from '../decorators/withResponsiveMode';\nimport { useWindow } from '../../WindowProvider';\n\n/**\n * Hook to get the current responsive mode (window size category).\n * @param elementRef - Use this element's parent window when determining the responsive mode.\n * @param overrideResponsiveMode - Override the responsive mode. If this param is present, it's always returned.\n */\nexport const useResponsiveMode = (\n  elementRef: React.RefObject<HTMLElement | null>,\n  overrideResponsiveMode?: ResponsiveMode,\n) => {\n  const [lastResponsiveMode, setLastResponsiveMode] = React.useState<ResponsiveMode>(getInitialResponsiveMode());\n\n  const onResize = React.useCallback(() => {\n    const newResponsiveMode = getResponsiveMode(getWindow(elementRef.current));\n\n    // Setting the same value should not cause a re-render.\n    if (lastResponsiveMode !== newResponsiveMode) {\n      setLastResponsiveMode(newResponsiveMode);\n    }\n  }, [elementRef, lastResponsiveMode]);\n\n  const win = useWindow();\n  useOnEvent(win, 'resize', onResize);\n\n  // Call resize function initially on mount, or if the override changes from defined to undefined\n  // (the effect will run on all override changes, but onResize will only be called if it changed to undefined)\n  React.useEffect(() => {\n    if (overrideResponsiveMode === undefined) {\n      onResize();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- only meant to run on mount or when override changes\n  }, [overrideResponsiveMode]);\n\n  return overrideResponsiveMode ?? lastResponsiveMode;\n};\n", "import * as React from 'react';\nimport { BaseDecorator } from './BaseDecorator';\nimport { getWindow, hoistStatics, EventGroup } from '../../Utilities';\nimport { WindowContext } from '../../WindowProvider';\n\n/**\n * @deprecated Decorator usage is deprecated. Either call `getResponsiveMode` manually, or\n * use the `useResponsiveMode` hook within a function component.\n */\nexport interface IWithResponsiveModeState {\n  responsiveMode?: ResponsiveMode;\n}\n\nexport enum ResponsiveMode {\n  /** Width \\<= 479px */\n  small = 0,\n  /** Width \\> 479px and \\<= 639px */\n  medium = 1,\n  /** Width \\> 639px and \\<= 1023px */\n  large = 2,\n  /** Width \\> 1023px and \\<= 1365px */\n  xLarge = 3,\n  /** Width \\> 1365px and \\<= 1919px */\n  xxLarge = 4,\n  /** Width \\> 1919px */\n  xxxLarge = 5,\n  unknown = 999,\n}\n\nconst RESPONSIVE_MAX_CONSTRAINT = [479, 639, 1023, 1365, 1919, 99999999];\n\n/**\n * User specified mode to default to, useful for server side rendering scenarios.\n */\nlet _defaultMode: ResponsiveMode | undefined;\n\n/**\n * Tracking the last mode we successfully rendered, which allows us to\n * paint initial renders with the correct size.\n */\nlet _lastMode: ResponsiveMode | undefined;\n\n/**\n * Allows a server rendered scenario to provide a **default** responsive mode.\n * This WILL NOT trigger any updates to components that have already consumed the responsive mode!\n */\nexport function setResponsiveMode(responsiveMode: ResponsiveMode | undefined): void {\n  _defaultMode = responsiveMode;\n}\n\n/**\n * Initializes the responsive mode to the current window size. This can be used to avoid\n * a re-render during first component mount since the window would otherwise not be measured\n * until after mounting.\n *\n * This WILL NOT trigger any updates to components that have already consumed the responsive mode!\n */\nexport function initializeResponsiveMode(element?: HTMLElement): void {\n  const currentWindow = getWindow(element);\n\n  if (currentWindow) {\n    getResponsiveMode(currentWindow);\n  }\n}\n\nexport function getInitialResponsiveMode(): ResponsiveMode {\n  return _defaultMode ?? _lastMode ?? ResponsiveMode.large;\n}\n\n/**\n * @deprecated Decorator usage is deprecated. Either call `getResponsiveMode` manually, or\n * use the `useResponsiveMode` hook within a function component.\n */\nexport function withResponsiveMode<TProps extends { responsiveMode?: ResponsiveMode }, TState>(\n  ComposedComponent: new (props: TProps, ...args: any[]) => React.Component<TProps, TState>,\n): any {\n  // eslint-disable-next-line deprecation/deprecation\n  const resultClass = class WithResponsiveMode extends BaseDecorator<TProps, IWithResponsiveModeState> {\n    public static contextType = WindowContext;\n    public context: React.ContextType<typeof WindowContext>;\n\n    private _events: EventGroup;\n\n    constructor(props: TProps) {\n      super(props);\n      this._events = new EventGroup(this);\n      this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n\n      this.state = {\n        responsiveMode: getInitialResponsiveMode(),\n      };\n    }\n\n    public componentDidMount(): void {\n      this._events.on(this.context.window, 'resize', this._onResize);\n      this._onResize();\n    }\n\n    public componentWillUnmount(): void {\n      this._events.dispose();\n    }\n\n    public render(): JSX.Element | null {\n      const { responsiveMode } = this.state;\n\n      return responsiveMode === ResponsiveMode.unknown ? null : (\n        <ComposedComponent\n          ref={this._updateComposedComponentRef}\n          responsiveMode={responsiveMode}\n          {...(this.props as any)}\n        />\n      );\n    }\n\n    private _onResize = () => {\n      const responsiveMode = getResponsiveMode(this.context.window);\n\n      if (responsiveMode !== this.state.responsiveMode) {\n        this.setState({\n          responsiveMode,\n        });\n      }\n    };\n  };\n  return hoistStatics(ComposedComponent, resultClass);\n}\n\nfunction getWidthOfCurrentWindow(currentWindow: Window): number {\n  try {\n    return currentWindow.document.documentElement.clientWidth;\n  } catch (e) {\n    return currentWindow.innerWidth;\n  }\n}\n\n/**\n * Hook to get the current responsive mode (window size category).\n * @param currentWindow - Use this window when determining the responsive mode.\n */\nexport function getResponsiveMode(currentWindow: Window | undefined): ResponsiveMode {\n  let responsiveMode = ResponsiveMode.small;\n\n  if (currentWindow) {\n    try {\n      while (getWidthOfCurrentWindow(currentWindow) > RESPONSIVE_MAX_CONSTRAINT[responsiveMode]) {\n        responsiveMode++;\n      }\n    } catch (e) {\n      // Return a best effort result in cases where we're in the browser but it throws on getting innerWidth.\n      responsiveMode = getInitialResponsiveMode();\n    }\n\n    // Tracking last mode just gives us a better default in future renders,\n    // which avoids starting with the wrong value if we've measured once.\n    _lastMode = responsiveMode;\n  } else {\n    if (_defaultMode !== undefined) {\n      responsiveMode = _defaultMode;\n    } else {\n      throw new Error(\n        'Content was rendered in a server environment without providing a default responsive mode. ' +\n          'Call setResponsiveMode to define what the responsive mode is.',\n      );\n    }\n  }\n\n  return responsiveMode;\n}\n", "import * as React from 'react';\nimport { hoistMethods, unhoistMethods } from '../../Utilities';\n\nexport class BaseDecorator<TProps, TState> extends React.Component<TProps, TState> {\n  protected _composedComponentInstance: React.Component<TProps, TState>;\n\n  private _hoisted: string[];\n\n  constructor(props: TProps) {\n    super(props);\n    this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n  }\n\n  /**\n   * Updates the ref to the component composed by the decorator, which will also take care of hoisting\n   * (and unhoisting as appropriate) methods from said component.\n   *\n   * Pass this method as the argument to the 'ref' property of the composed component.\n   */\n  protected _updateComposedComponentRef(composedComponentInstance: React.Component<TProps, TState>): void {\n    this._composedComponentInstance = composedComponentInstance;\n    if (composedComponentInstance) {\n      this._hoisted = hoistMethods(this, composedComponentInstance);\n    } else if (this._hoisted) {\n      unhoistMethods(this, this._hoisted);\n    }\n  }\n}\n", "import * as React from 'react';\nimport type { MinimalMenuProps } from './types';\n\nexport const MenuContext = React.createContext<MinimalMenuProps>({});\n\nexport const useMenuContext = () => {\n  return React.useContext(MenuContext);\n};\n", "import { getGlobalClassNames, FontWeights } from '../../Styling';\nimport { CONTEXTUAL_MENU_ITEM_HEIGHT } from './ContextualMenu.cnstyles';\nimport type { IContextualMenuStyleProps, IContextualMenuStyles } from './ContextualMenu.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ContextualMenu',\n  container: 'ms-ContextualMenu-container',\n  list: 'ms-ContextualMenu-list',\n  header: 'ms-ContextualMenu-header',\n  title: 'ms-ContextualMenu-title',\n  isopen: 'is-open',\n};\n\nexport const getStyles = (props: IContextualMenuStyleProps): IContextualMenuStyles => {\n  const { className, theme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const { fonts, semanticColors, effects } = theme;\n\n  return {\n    root: [\n      theme.fonts.medium,\n      classNames.root,\n      classNames.isopen,\n      {\n        backgroundColor: semanticColors.menuBackground,\n        minWidth: '180px',\n      },\n      className,\n    ],\n    container: [\n      classNames.container,\n      {\n        selectors: {\n          ':focus': { outline: 0 },\n        },\n      },\n    ],\n    list: [\n      classNames.list,\n      classNames.isopen,\n      {\n        listStyleType: 'none',\n        margin: '0',\n        padding: '0',\n      },\n    ],\n    header: [\n      classNames.header,\n      fonts.small,\n      {\n        fontWeight: FontWeights.semibold,\n        color: semanticColors.menuHeader,\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        cursor: 'default',\n        padding: '0px 6px',\n        userSelect: 'none',\n        textAlign: 'left',\n      },\n    ],\n    title: [\n      classNames.title,\n      {\n        fontSize: fonts.mediumPlus.fontSize,\n        paddingRight: '14px',\n        paddingLeft: '14px',\n        paddingBottom: '5px',\n        paddingTop: '5px',\n        backgroundColor: semanticColors.menuItemBackgroundPressed,\n      },\n    ],\n    subComponentStyles: {\n      callout: {\n        root: {\n          boxShadow: effects.elevation8,\n        },\n      },\n      menuItem: {},\n    },\n  };\n};\n", "import { memoizeFunction } from '../../Utilities';\nimport { getGlobalClassNames, mergeStyleSets } from '../../Styling';\nimport type { ITheme } from '../../Styling';\nimport type { IButtonStyles } from './Button.types';\n\nexport interface IButtonClassNames {\n  root?: string;\n  flexContainer?: string;\n  textContainer?: string;\n  icon?: string;\n  label?: string;\n  menuIcon?: string;\n  description?: string;\n  screenReaderText?: string;\n}\n\nexport const ButtonGlobalClassNames = {\n  msButton: 'ms-Button',\n  msButtonHasMenu: 'ms-Button--hasMenu',\n  msButtonIcon: 'ms-Button-icon',\n  msButtonMenuIcon: 'ms-Button-menuIcon',\n  msButtonLabel: 'ms-Button-label',\n  msButtonDescription: 'ms-Button-description',\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\n  msButtonFlexContainer: 'ms-Button-flexContainer',\n  msButtonTextContainer: 'ms-Button-textContainer',\n};\n\nexport const getBaseButtonClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    styles: IButtonStyles,\n    className: string,\n    variantClassName: string,\n    iconClassName: string | undefined,\n    menuIconClassName: string | undefined,\n    disabled: boolean,\n    hasMenu: boolean,\n    checked: boolean,\n    expanded: boolean,\n    isSplit: boolean | undefined,\n  ): IButtonClassNames => {\n    const classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\n\n    const isExpanded = expanded && !isSplit;\n    return mergeStyleSets({\n      root: [\n        classNames.msButton,\n        styles.root,\n        variantClassName,\n        checked && ['is-checked', styles.rootChecked],\n        isExpanded && [\n          'is-expanded',\n          styles.rootExpanded,\n          {\n            selectors: {\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconExpandedHovered,\n              // menuIcon falls back to rootExpandedHovered to support original behavior\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconExpandedHovered || styles.rootExpandedHovered,\n              ':hover': styles.rootExpandedHovered,\n            },\n          },\n        ],\n        hasMenu && [ButtonGlobalClassNames.msButtonHasMenu, styles.rootHasMenu],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.rootHovered,\n              [`:hover .${classNames.msButtonLabel}`]: styles.labelHovered,\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconHovered,\n              [`:hover .${classNames.msButtonDescription}`]: styles.descriptionHovered,\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconHovered,\n              ':focus': styles.rootFocused,\n              ':active': styles.rootPressed,\n              [`:active .${classNames.msButtonIcon}`]: styles.iconPressed,\n              [`:active .${classNames.msButtonDescription}`]: styles.descriptionPressed,\n              [`:active .${classNames.msButtonMenuIcon}`]: styles.menuIconPressed,\n            },\n          },\n        disabled && checked && [styles.rootCheckedDisabled],\n        !disabled &&\n          checked && {\n            selectors: {\n              ':hover': styles.rootCheckedHovered,\n              ':active': styles.rootCheckedPressed,\n            },\n          },\n        className,\n      ],\n      flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\n      textContainer: [classNames.msButtonTextContainer, styles.textContainer],\n      icon: [\n        classNames.msButtonIcon,\n        iconClassName,\n        styles.icon,\n        isExpanded && styles.iconExpanded,\n        checked && styles.iconChecked,\n        disabled && styles.iconDisabled,\n      ],\n      label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\n      menuIcon: [\n        classNames.msButtonMenuIcon,\n        menuIconClassName,\n        styles.menuIcon,\n        checked && styles.menuIconChecked,\n        disabled && !isSplit && styles.menuIconDisabled,\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.menuIconHovered,\n              ':active': styles.menuIconPressed,\n            },\n          },\n        isExpanded && ['is-expanded', styles.menuIconExpanded],\n      ],\n      description: [\n        classNames.msButtonDescription,\n        styles.description,\n        checked && styles.descriptionChecked,\n        disabled && styles.descriptionDisabled,\n      ],\n      screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText],\n    });\n  },\n);\n", "import { memoizeFunction } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport type { IButtonStyles } from '../Button.types';\n\nexport interface ISplitButtonClassNames {\n  root?: string;\n  icon?: string;\n  splitButtonContainer?: string;\n  flexContainer?: string;\n  divider?: string;\n}\n\nexport const getSplitButtonClassNames = memoizeFunction(\n  (\n    styles: IButtonStyles,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    primaryDisabled?: boolean,\n  ): ISplitButtonClassNames => {\n    return {\n      root: mergeStyles(\n        styles.splitButtonMenuButton,\n        expanded && [styles.splitButtonMenuButtonExpanded],\n        disabled && [styles.splitButtonMenuButtonDisabled],\n        checked && !disabled && [styles.splitButtonMenuButtonChecked],\n        primaryDisabled &&\n          !disabled && [\n            {\n              selectors: {\n                ':focus': styles.splitButtonMenuFocused,\n              },\n            },\n          ],\n      ),\n\n      splitButtonContainer: mergeStyles(\n        styles.splitButtonContainer,\n        !disabled &&\n          checked && [\n            styles.splitButtonContainerChecked,\n            {\n              selectors: {\n                ':hover': styles.splitButtonContainerCheckedHovered,\n              },\n            },\n          ],\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.splitButtonContainerHovered,\n                ':focus': styles.splitButtonContainerFocused,\n              },\n            },\n          ],\n        disabled && styles.splitButtonContainerDisabled,\n      ),\n\n      icon: mergeStyles(\n        styles.splitButtonMenuIcon,\n        disabled && styles.splitButtonMenuIconDisabled,\n        !disabled && primaryDisabled && styles.splitButtonMenuIcon,\n      ),\n\n      flexContainer: mergeStyles(styles.splitButtonFlexContainer),\n\n      divider: mergeStyles(\n        styles.splitButtonDivider,\n        (primaryDisabled || disabled) && styles.splitButtonDividerDisabled,\n      ),\n    };\n  },\n);\n", "import * as React from 'react';\nimport { BaseButton } from './BaseButton';\nimport { Button } from './Button';\nimport { KeyCodes } from '../../Utilities';\nimport type { IButtonClassNames } from './BaseButton.classNames';\nimport type { ISplitButtonClassNames } from './SplitButton/SplitButton.classNames';\nimport type { IRefObject, IRenderFunction, IComponentAs } from '../../Utilities';\nimport type { IContextualMenuProps } from '../../ContextualMenu';\nimport type { IIconProps } from '../../Icon';\nimport type { IStyle, ITheme } from '../../Styling';\nimport type { IKeytipProps } from '../../Keytip';\n\n/**\n * {@docCategory Button}\n */\nexport interface IButton {\n  /**\n   * Sets focus to the button.\n   */\n  focus: () => void;\n\n  /**\n   * If there is a menu associated with this button and it is visible, this will dismiss the menu\n   */\n  dismissMenu: () => void;\n\n  /**\n   * If there is a menu associated with this button and it is visible, this will open the menu.\n   * Params are optional overrides to the ones defined in `menuProps` to apply to just this instance of\n   * opening the menu.\n   *\n   * @param shouldFocusOnContainer - override to the ContextualMenu `shouldFocusOnContainer` prop.\n   * BaseButton implementation defaults to `undefined`.\n   * Avoid using `shouldFocusOnContainer` as it breaks the default focus behaviour when using\n   * assistive technologies.\n   * @param shouldFocusOnMount - override to the ContextualMenu `shouldFocusOnMount` prop.\n   * BaseButton implementation defaults to `true`.\n   */\n  openMenu: (shouldFocusOnContainer?: boolean, shouldFocusOnMount?: boolean) => void;\n}\n\n/**\n * {@docCategory Button}\n */\n/* eslint-disable deprecation/deprecation */\nexport interface IButtonProps\n  extends React.AllHTMLAttributes<\n    HTMLAnchorElement | HTMLButtonElement | HTMLDivElement | BaseButton | Button | HTMLSpanElement\n  > {\n  /* eslint-enable deprecation/deprecation */\n  /**\n   * Optional callback to access the `IButton` interface. Use this instead of `ref` for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IButton>;\n\n  /**\n   * Optional callback to access the root DOM element.\n   * @deprecated Temporary solution which will be replaced with ref in the V8 release.\n   */\n  elementRef?: React.Ref<HTMLElement>;\n\n  /**\n   * If provided, this component will be rendered as an anchor.\n   * @defaultvalue ElementType.anchor\n   */\n  href?: string;\n\n  /**\n   * Changes the visual presentation of the button to be emphasized.\n   * @defaultvalue false\n   */\n  primary?: boolean;\n\n  /**\n   * Unique ID to identify the item. Typically a duplicate of key value.\n   */\n  uniqueId?: string | number;\n\n  /**\n   * Whether the button is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Whether the button can have focus in disabled mode\n   */\n  allowDisabledFocus?: boolean;\n\n  /**\n   * If set to true and this is a split button (`split` is true), the split button's primary action is disabled.\n   */\n  primaryDisabled?: boolean;\n\n  /**\n   * Custom styling for individual elements within the button DOM.\n   */\n  styles?: IButtonStyles;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Whether the button is checked. Should be used with the `toggle` attribute when creating a standalone on/off button.\n   */\n  checked?: boolean;\n\n  /**\n   * Whether button is a toggle button with distinct on and off states. This should be true for buttons that permanently\n   * change state when a press event finishes, such as a volume mute button.\n   */\n  toggle?: boolean;\n\n  /**\n   * If provided, additional class name to provide on the root element.\n   */\n  className?: string;\n\n  /**\n   * The aria label of the button for the benefit of screen readers.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Detailed description of the button for the benefit of screen readers.\n   *\n   * Besides the compound button, other button types will need more information provided to screen reader.\n   */\n  ariaDescription?: string;\n\n  /**\n   * If true, add an `aria-hidden` attribute instructing screen readers to ignore the element.\n   */\n  ariaHidden?: boolean;\n\n  /**\n   * Text to render button label. If text is supplied, it will override any string in button children.\n   * Other children components will be passed through after the text.\n   */\n  text?: string;\n\n  /**\n   * The props for the icon shown in the button.\n   */\n  iconProps?: IIconProps;\n\n  /**\n   * Props for button menu. Providing this will default to showing the menu icon. See `menuIconProps` for overriding\n   * how the default icon looks. Providing this in addition to `onClick` and setting the `split` property to `true`\n   * will render a SplitButton.\n   */\n  menuProps?: IContextualMenuProps;\n\n  /**\n   * Callback that runs after Button's contextual menu was closed (removed from the DOM)\n   */\n  onAfterMenuDismiss?: () => void;\n\n  /**\n   * If set to true, and if `menuProps` and `onClick` are provided, the button will render as a SplitButton.\n   * @default false\n   */\n  split?: boolean;\n\n  /**\n   * The props for the icon shown when providing a menu dropdown.\n   */\n  menuIconProps?: IIconProps;\n\n  /**\n   * Accessible label for the dropdown chevron button if this button is split.\n   */\n  splitButtonAriaLabel?: string;\n\n  /**\n   * Optional callback when menu is clicked.\n   */\n  onMenuClick?: (ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>, button?: IButtonProps) => void;\n\n  /**\n   * Custom render function for the icon\n   */\n  onRenderIcon?: IRenderFunction<IButtonProps>;\n\n  /**\n   * Custom render function for the label text.\n   */\n  onRenderText?: IRenderFunction<IButtonProps>;\n\n  /**\n   * Custom render function for the description text.\n   */\n  onRenderDescription?: IRenderFunction<IButtonProps>;\n\n  /**\n   * Custom render function for the aria description element.\n   */\n  onRenderAriaDescription?: IRenderFunction<IButtonProps>;\n\n  /**\n   * Custom render function for rendering the button children.\n   */\n  onRenderChildren?: IRenderFunction<IButtonProps>;\n\n  /**\n   * Custom render function for button menu icon\n   */\n  onRenderMenuIcon?: IRenderFunction<IButtonProps>;\n\n  /**\n   * @deprecated Deprecated at v6.3.2, to be removed at \\>= v7.0.0.\n   * Use `menuAs` instead.\n   */\n  onRenderMenu?: IRenderFunction<IContextualMenuProps>;\n\n  /**\n   * Render a custom menu in place of the normal one.\n   */\n  menuAs?: IComponentAs<IContextualMenuProps>;\n\n  /**\n   * Description of the action this button takes.\n   * Only used for compound buttons.\n   */\n  secondaryText?: string;\n\n  /**\n   * @defaultvalue ButtonType.default\n   * @deprecated Deprecated at v1.2.3, to be removed at \\>= v2.0.0.\n   * Use specific button component instead.\n   */\n\n  buttonType?: ButtonType;\n\n  /**\n   * @deprecated Deprecated at v0.56.2, to be removed at \\>= v1.0.0.\n   * Use native props on the Button itself instead.\n   * They will be mixed into the button/anchor element rendered by the component.\n   */\n  rootProps?: React.ButtonHTMLAttributes<HTMLButtonElement> | React.AnchorHTMLAttributes<HTMLAnchorElement>;\n\n  /**\n   * @deprecated No longer used. Use `checked` if setting state.\n   */\n  toggled?: boolean;\n\n  /**\n   * Any custom data the developer wishes to associate with the button.\n   */\n  data?: any;\n\n  /**\n   * Method to provide the classnames to style a button.\n   * The default value for this prop is the `getClassnames` func defined in `BaseButton.classnames.ts`.\n   * @defaultvalue getBaseButtonClassNames\n   */\n  getClassNames?: (\n    theme: ITheme,\n    className: string,\n    variantClassName: string,\n    iconClassName: string | undefined,\n    menuIconClassName: string | undefined,\n    disabled: boolean,\n    checked: boolean,\n    expanded: boolean,\n    hasMenu: boolean,\n    isSplit: boolean | undefined,\n    allowDisabledFocus: boolean,\n  ) => IButtonClassNames;\n\n  /**\n   * Method to provide the classnames to style a button.\n   * The default value for this prop is the `getClassnames` func defined in `BaseButton.classnames.ts`.\n   * @defaultvalue getBaseSplitButtonClassNames\n   */\n  getSplitButtonClassNames?: (\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    allowDisabledFocus: boolean,\n  ) => ISplitButtonClassNames;\n\n  /**\n   * Provides a custom KeyCode that can be used to open the button menu.\n   * A value of `null` can be provided to disable opening the button menu with a key press.\n   * @default KeyCodes.down\n   */\n  menuTriggerKeyCode?: KeyCodes | null;\n\n  /**\n   * Optional keytip for this button\n   */\n  keytipProps?: IKeytipProps;\n\n  /**\n   * Menu will not be created or destroyed when opened or closed, instead it\n   * will be hidden. This will improve perf of the menu opening but could potentially\n   * impact overall perf by having more elements in the dom. Should only be used\n   * when menu perf is important.\n   *\n   * Note: This may increase the amount of time it takes for the button itself to mount.\n   */\n  persistMenu?: boolean;\n\n  /**\n   * If true, the persisted menu is rendered hidden when the button initially mounts.\n   * Non-persisted menus will not be in the component tree unless they are being shown.\n   *\n   * Note: This increases the time the button will take to mount, but\n   * can improve perceived menu open perf. when the user opens the menu.\n   *\n   * @defaultvalue `undefined`, equivalent to false\n   *\n   * @deprecated There is known bug in Edge when this prop is true where scrollbars\n   * overlap with the content when a menu is first rendered hidden.\n   * Please do not start using this. If you are already using this,\n   * please make sure that you are doing so only in non-Edge browsers.\n   * See: https://github.com/microsoft/fluentui/issues/9034\n   */\n  renderPersistedMenuHiddenOnMount?: boolean;\n\n  /**\n   * Experimental prop that get passed into the menuButton that's rendered as part of\n   * split button. Anything passed in will likely need to have accompanying\n   * style changes.\n   */\n  splitButtonMenuProps?: IButtonProps;\n\n  /**\n   * Style for the description text if applicable (for compound buttons).\n   * @deprecated Use `secondaryText` instead.\n   */\n  description?: string;\n\n  /**\n   * yet unknown docs\n   */\n  defaultRender?: any;\n\n  /**\n   * Optional props to be applied only to the primary action button of SplitButton and not to the\n   * overall SplitButton container\n   */\n  primaryActionButtonProps?: IButtonProps;\n}\n\n/**\n * {@docCategory Button}\n */\nexport enum ElementType {\n  /** `button` element. */\n  button = 0,\n  /** `a` element. */\n  anchor = 1,\n}\n\n/**\n * {@docCategory Button}\n */\nexport enum ButtonType {\n  normal = 0,\n  primary = 1,\n  hero = 2,\n  compound = 3,\n  command = 4,\n  icon = 5,\n  default = 6,\n}\n\n/**\n * {@docCategory Button}\n */\nexport interface IButtonStyles {\n  /**\n   * Style for the root element in the default enabled, non-toggled state.\n   */\n  root?: IStyle;\n\n  /**\n   * Style override for the root element in a checked state, layered on top of the root style.\n   */\n  rootChecked?: IStyle;\n\n  /**\n   * Style override for the root element in a disabled state, layered on top of the root style.\n   */\n  rootDisabled?: IStyle;\n\n  /**\n   * Style override applied to the root on hover in the default, enabled, non-toggled state.\n   */\n  rootHovered?: IStyle;\n\n  /**\n   * Style override applied to the root on focus in the default, enabled, non-toggled state.\n   */\n  rootFocused?: IStyle;\n\n  /**\n   * Style override applied to the root on pressed in the default, enabled, non-toggled state.\n   */\n  rootPressed?: IStyle;\n\n  /**\n   * Style override applied to the root on when menu is expanded in the default, enabled, non-toggled state.\n   */\n  rootExpanded?: IStyle;\n\n  /**\n   * Style override applied to the root on hover in a checked, enabled state\n   */\n  rootCheckedHovered?: IStyle;\n\n  /**\n   * Style override applied to the root on pressed in a checked, enabled state\n   */\n  rootCheckedPressed?: IStyle;\n\n  /**\n   * Style override applied to the root on hover in a checked, disabled state\n   */\n  rootCheckedDisabled?: IStyle;\n\n  /**\n   * Style override applied to the root on hover in a expanded state on hover\n   */\n  rootExpandedHovered?: IStyle;\n\n  /**\n   * Style override for the root element when it has a menu button, layered on top of the root style.\n   */\n  rootHasMenu?: IStyle;\n\n  /**\n   * Style for the flexbox container within the root element.\n   */\n  flexContainer?: IStyle;\n\n  /**\n   * Style for the text container within the flexbox container element (and contains the text and description).\n   */\n  textContainer?: IStyle;\n\n  /**\n   * Style for the icon on the near side of the label.\n   */\n  icon?: IStyle;\n\n  /**\n   * Style for the icon on the near side of the label on hover.\n   */\n  iconHovered?: IStyle;\n\n  /**\n   * Style for the icon on the near side of the label when pressed.\n   */\n  iconPressed?: IStyle;\n\n  /**\n   * Style for the icon on the near side of the label when expanded.\n   */\n  iconExpanded?: IStyle;\n\n  /**\n   * Style for the icon on the near side of the label when expanded and hovered.\n   */\n  iconExpandedHovered?: IStyle;\n\n  /**\n   * Style override for the icon when the button is disabled.\n   */\n  iconDisabled?: IStyle;\n\n  /**\n   * Style override for the icon when the button is checked.\n   */\n  iconChecked?: IStyle;\n\n  /**\n   * Style for the text content of the button.\n   */\n  label?: IStyle;\n\n  /**\n   * Style override for the text content when the button is hovered.\n   */\n  labelHovered?: IStyle;\n\n  /**\n   * Style override for the text content when the button is disabled.\n   */\n  labelDisabled?: IStyle;\n\n  /**\n   * Style override for the text content when the button is checked.\n   */\n  labelChecked?: IStyle;\n\n  /**\n   * Style for the menu chevron.\n   */\n  menuIcon?: IStyle;\n\n  /**\n   * Style for the menu chevron on hover.\n   */\n  menuIconHovered?: IStyle;\n\n  /**\n   * Style for the menu chevron when pressed.\n   */\n  menuIconPressed?: IStyle;\n\n  /**\n   * Style for the menu chevron when expanded.\n   */\n  menuIconExpanded?: IStyle;\n\n  /**\n   * Style for the menu chevron when expanded and hovered.\n   */\n  menuIconExpandedHovered?: IStyle;\n\n  /**\n   * Style override for the menu chevron when the button is disabled.\n   */\n  menuIconDisabled?: IStyle;\n\n  /**\n   * Style override for the menu chevron when the button is checked.\n   */\n  menuIconChecked?: IStyle;\n\n  /**\n   * Style for the description text if applicable (for compound buttons).\n   */\n  description?: IStyle;\n\n  /**\n   * Style for the description text if applicable (for compound buttons).\n   */\n  secondaryText?: IStyle;\n\n  /**\n   * Style override for the description text when the button is hovered.\n   */\n  descriptionHovered?: IStyle;\n\n  /**\n   * Style for the description text when the button is pressed.\n   */\n  descriptionPressed?: IStyle;\n\n  /**\n   * Style override for the description text when the button is disabled.\n   */\n  descriptionDisabled?: IStyle;\n\n  /**\n   * Style override for the description text when the button is checked.\n   */\n  descriptionChecked?: IStyle;\n\n  /**\n   * Style override for the screen reader text.\n   */\n  screenReaderText?: IStyle;\n\n  /**\n   * Style override for the container div around a SplitButton element\n   */\n  splitButtonContainer?: IStyle;\n\n  /**\n   * Style for container div around a SplitButton element when the button is hovered.\n   */\n  splitButtonContainerHovered?: IStyle;\n\n  /**\n   * Style for container div around a SplitButton element when the button is focused.\n   */\n  splitButtonContainerFocused?: IStyle;\n\n  /**\n   * Style for container div around a SplitButton element when the button is checked.\n   */\n  splitButtonContainerChecked?: IStyle;\n\n  /**\n   * Style for container div around a SplitButton element when the button is checked and hovered.\n   */\n  splitButtonContainerCheckedHovered?: IStyle;\n\n  /**\n   * Style override for the container div around a SplitButton element in a disabled state\n   */\n  splitButtonContainerDisabled?: IStyle;\n\n  /**\n   * Style override for the divider element that appears between the button and menu button\n   * for a split button.\n   */\n  splitButtonDivider?: IStyle;\n\n  /**\n   * Style override for the divider element that appears between the button and menu button\n   * for a split button in a disabled state.\n   */\n  splitButtonDividerDisabled?: IStyle;\n\n  /**\n   * Style override for the SplitButton menu button\n   */\n  splitButtonMenuButton?: IStyle;\n\n  /**\n   * Style override for the SplitButton menu button element in a disabled state.\n   */\n  splitButtonMenuButtonDisabled?: IStyle;\n\n  /**\n   * Style override for the SplitButton menu button element in a checked state\n   */\n  splitButtonMenuButtonChecked?: IStyle;\n\n  /**\n   * Style override for the SplitButton menu button element in an expanded state\n   */\n  splitButtonMenuButtonExpanded?: IStyle;\n\n  /**\n   * Style override for the SplitButton menu icon element\n   */\n  splitButtonMenuIcon?: IStyle;\n\n  /**\n   * Style override for the SplitButton menu icon element in a disabled state\n   */\n  splitButtonMenuIconDisabled?: IStyle;\n\n  /**\n   * Style override for the SplitButton FlexContainer.\n   */\n  splitButtonFlexContainer?: IStyle;\n\n  /**\n   * Style override for the SplitButton when only primaryButton is in a disabled state\n   */\n  splitButtonMenuFocused?: IStyle;\n}\n", "import * as React from 'react';\n\nimport { warn } from '../../Utilities';\nimport { ButtonType } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\nimport type { IButtonProps } from './Button.types';\n\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\nexport class Button extends React.Component<IButtonProps, {}> {\n  constructor(props: IButtonProps) {\n    super(props);\n\n    warn(\n      `The Button component has been deprecated. Use specific variants instead. ` +\n        `(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)`,\n    );\n  }\n\n  public render(): JSX.Element {\n    const props = this.props;\n\n    // eslint-disable-next-line deprecation/deprecation\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return <ActionButton {...props} />;\n\n      case ButtonType.compound:\n        return <CompoundButton {...props} />;\n\n      case ButtonType.icon:\n        return <IconButton {...props} />;\n\n      case ButtonType.primary:\n        return <PrimaryButton {...props} />;\n\n      default:\n        return <DefaultButton {...props} />;\n    }\n  }\n}\n", "import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './DefaultButton.styles';\nimport type { IButtonProps } from '../Button.types';\n\n/**\n * {@docCategory Button}\n */\n@customizable('DefaultButton', ['theme', 'styles'], true)\nexport class DefaultButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { primary = false, styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName={primary ? 'ms-Button--primary' : 'ms-Button--default'}\n        styles={getStyles(theme!, styles, primary)}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n", "import { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, getFocusStyle, hiddenContentStyle } from '../../Styling';\nimport type { IButtonStyles } from './Button.types';\nimport type { ITheme, IRawStyle } from '../../Styling';\n\nconst noOutline: IRawStyle = {\n  outline: 0,\n};\n\nconst iconStyle = (fontSize?: string | number): IRawStyle => {\n  return {\n    fontSize,\n    margin: '0 4px',\n    height: '16px',\n    lineHeight: '16px',\n    textAlign: 'center',\n    flexShrink: 0,\n  };\n};\n\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport const getStyles = memoizeFunction((theme: ITheme): IButtonStyles => {\n  const { semanticColors, effects, fonts } = theme;\n\n  const border = semanticColors.buttonBorder;\n  const disabledBackground = semanticColors.disabledBackground;\n  const disabledText = semanticColors.disabledText;\n  const buttonHighContrastFocus = {\n    left: -2,\n    top: -2,\n    bottom: -2,\n    right: -2,\n    outlineColor: 'ButtonText',\n  };\n\n  return {\n    root: [\n      getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n      theme.fonts.medium,\n      {\n        border: '1px solid ' + border,\n        borderRadius: effects.roundedCorner2,\n        boxSizing: 'border-box',\n        cursor: 'pointer',\n        display: 'inline-block',\n        padding: '0 16px',\n        textDecoration: 'none',\n        textAlign: 'center',\n        userSelect: 'none',\n\n        selectors: {\n          // IE11 workaround for preventing shift of child elements of a button when active.\n          ':active > span': {\n            position: 'relative',\n            left: 0,\n            top: 0,\n          },\n        },\n      },\n    ],\n\n    rootDisabled: [\n      getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n      {\n        backgroundColor: disabledBackground,\n        borderColor: disabledBackground,\n        color: disabledText,\n        cursor: 'default',\n        selectors: {\n          ':hover': noOutline,\n          ':focus': noOutline,\n        },\n      },\n    ],\n\n    iconDisabled: {\n      color: disabledText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n\n    menuIconDisabled: {\n      color: disabledText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n\n    flexContainer: {\n      display: 'flex',\n      height: '100%',\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    description: {\n      display: 'block',\n    },\n\n    textContainer: {\n      flexGrow: 1,\n      display: 'block',\n    },\n\n    icon: iconStyle(fonts.mediumPlus.fontSize),\n\n    menuIcon: iconStyle(fonts.small.fontSize),\n\n    label: {\n      margin: '0 4px',\n      lineHeight: '100%',\n      display: 'block',\n    },\n\n    screenReaderText: hiddenContentStyle,\n  };\n});\n", "import { HighContrastSelector, concatStyleSets, getFocusStyle, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme, IStyle } from '../../../Styling';\n\nexport const getStyles = memoizeFunction((theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n  const { effects, palette, semanticColors } = theme;\n\n  const buttonHighContrastFocus = {\n    left: -2,\n    top: -2,\n    bottom: -2,\n    right: -2,\n    border: 'none',\n  };\n\n  const splitButtonDividerBaseStyles: IStyle = {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n\n  const splitButtonStyles: IButtonStyles = {\n    splitButtonContainer: [\n      getFocusStyle(theme, { highContrastStyle: buttonHighContrastFocus, inset: 2, pointerEvents: 'none' }),\n      {\n        display: 'inline-flex',\n        selectors: {\n          '.ms-Button--default': {\n            borderTopRightRadius: '0',\n            borderBottomRightRadius: '0',\n            borderRight: 'none',\n            flexGrow: '1',\n          },\n          '.ms-Button--primary': {\n            borderTopRightRadius: '0',\n            borderBottomRightRadius: '0',\n            border: 'none',\n            flexGrow: '1',\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'WindowText',\n                backgroundColor: 'Window',\n                border: '1px solid WindowText',\n                borderRightWidth: '0',\n                ...getHighContrastNoAdjustStyle(),\n              },\n              ':hover': {\n                border: 'none',\n              },\n              ':active': {\n                border: 'none',\n              },\n            },\n          },\n          '.ms-Button--primary + .ms-Button': {\n            border: 'none',\n            selectors: {\n              [HighContrastSelector]: {\n                border: '1px solid WindowText',\n                borderLeftWidth: '0',\n              },\n            },\n          },\n        },\n      },\n    ],\n    splitButtonContainerHovered: {\n      selectors: {\n        '.ms-Button--primary': {\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Window',\n              backgroundColor: 'Highlight',\n            },\n          },\n        },\n        '.ms-Button.is-disabled': {\n          color: semanticColors.buttonTextDisabled,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'GrayText',\n              borderColor: 'GrayText',\n              backgroundColor: 'Window',\n            },\n          },\n        },\n      },\n    },\n    splitButtonContainerChecked: {\n      selectors: {\n        '.ms-Button--primary': {\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Window',\n              backgroundColor: 'WindowText',\n              ...getHighContrastNoAdjustStyle(),\n            },\n          },\n        },\n      },\n    },\n    splitButtonContainerCheckedHovered: {\n      selectors: {\n        '.ms-Button--primary': {\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Window',\n              backgroundColor: 'WindowText',\n              ...getHighContrastNoAdjustStyle(),\n            },\n          },\n        },\n      },\n    },\n    splitButtonContainerFocused: {\n      outline: 'none!important',\n    },\n    splitButtonMenuButton: {\n      padding: 6,\n      height: 'auto',\n      boxSizing: 'border-box',\n      borderRadius: 0,\n      borderTopRightRadius: effects.roundedCorner2,\n      borderBottomRightRadius: effects.roundedCorner2,\n      border: `1px solid ${palette.neutralSecondaryAlt}`,\n      borderLeft: 'none',\n      outline: 'transparent',\n      userSelect: 'none',\n      display: 'inline-block',\n      textDecoration: 'none',\n      textAlign: 'center',\n      cursor: 'pointer',\n      verticalAlign: 'top',\n      width: 32,\n      marginLeft: -1,\n      marginTop: 0,\n      marginRight: 0,\n      marginBottom: 0,\n      [HighContrastSelector]: {\n        '.ms-Button-menuIcon': {\n          color: 'WindowText',\n        },\n      },\n    },\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n    splitButtonDividerDisabled: {\n      ...splitButtonDividerBaseStyles,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'GrayText',\n        },\n      },\n    },\n    splitButtonMenuButtonDisabled: {\n      pointerEvents: 'none',\n      border: 'none',\n      selectors: {\n        ':hover': {\n          cursor: 'default',\n        },\n\n        '.ms-Button--primary': {\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'GrayText',\n              borderColor: 'GrayText',\n              backgroundColor: 'Window',\n            },\n          },\n        },\n        '.ms-Button-menuIcon': {\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'GrayText',\n            },\n          },\n        },\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          border: '1px solid GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonFlexContainer: {\n      display: 'flex',\n      height: '100%',\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n\n    splitButtonContainerDisabled: {\n      outline: 'none',\n      border: 'none',\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n    splitButtonMenuFocused: {\n      ...getFocusStyle(theme, { highContrastStyle: buttonHighContrastFocus, inset: 2 }),\n    },\n  };\n\n  return concatStyleSets(splitButtonStyles, customStyles)!;\n});\n", "import { HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport type { IButtonStyles } from './Button.types';\nimport type { ITheme, IRawStyle } from '../../Styling';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n  const buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextDisabled = s.buttonTextDisabled;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Canvas',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n", "import { concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nconst DEFAULT_BUTTON_HEIGHT = '32px';\nconst DEFAULT_BUTTON_MIN_WIDTH = '80px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const defaultButtonStyles: IButtonStyles = {\n      root: {\n        minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n        height: DEFAULT_BUTTON_HEIGHT,\n      },\n      label: {\n        fontWeight: FontWeights.semibold,\n      },\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      defaultButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      splitButtonStyles,\n      customStyles,\n    )!;\n  },\n);\n", "import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './ActionButton.styles';\nimport type { IButtonProps } from '../Button.types';\n\n/**\n * {@docCategory Button}\n */\n@customizable('ActionButton', ['theme', 'styles'], true)\nexport class ActionButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName=\"ms-Button--action ms-Button--command\"\n        styles={getStyles(theme!, styles)}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n", "import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nconst DEFAULT_BUTTON_HEIGHT = '40px';\nconst DEFAULT_PADDING = '0 4px';\n\nexport const getStyles = memoizeFunction((theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n  const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n  const actionButtonStyles: IButtonStyles = {\n    root: {\n      padding: DEFAULT_PADDING,\n      height: DEFAULT_BUTTON_HEIGHT,\n      color: theme.palette.neutralPrimary,\n      backgroundColor: 'transparent',\n      border: '1px solid transparent',\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Window',\n        },\n      },\n    },\n\n    rootHovered: {\n      color: theme.palette.themePrimary,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Highlight',\n        },\n      },\n    },\n\n    iconHovered: {\n      color: theme.palette.themePrimary,\n    },\n\n    rootPressed: {\n      color: theme.palette.black,\n    },\n\n    rootExpanded: {\n      color: theme.palette.themePrimary,\n    },\n\n    iconPressed: {\n      color: theme.palette.themeDarker,\n    },\n\n    rootDisabled: {\n      color: theme.palette.neutralTertiary,\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n\n    rootChecked: {\n      color: theme.palette.black,\n    },\n\n    iconChecked: {\n      color: theme.palette.themeDarker,\n    },\n\n    flexContainer: {\n      justifyContent: 'flex-start',\n    },\n\n    icon: {\n      color: theme.palette.themeDarkAlt,\n    },\n\n    iconDisabled: {\n      color: 'inherit',\n    },\n\n    menuIcon: {\n      color: theme.palette.neutralSecondary,\n    },\n\n    textContainer: {\n      flexGrow: 0,\n    },\n  };\n\n  return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles)!;\n});\n", "import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable } from '../../../Utilities';\nimport { getStyles } from './CompoundButton.styles';\nimport type { IButtonProps } from '../Button.types';\n\n/**\n * {@docCategory Button}\n */\n@customizable('CompoundButton', ['theme', 'styles'], true)\nexport class CompoundButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { primary = false, styles, theme } = this.props;\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName={primary ? 'ms-Button--compoundPrimary' : 'ms-Button--compound'}\n        styles={getStyles(theme!, styles, primary)}\n      />\n    );\n  }\n}\n", "import { concatStyleSets, FontWeights, HighContrastSelector, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const { fonts, palette } = theme;\n\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const compoundButtonStyles: IButtonStyles = {\n      root: {\n        maxWidth: '280px',\n        minHeight: '72px',\n        height: 'auto',\n        padding: '16px 12px',\n      },\n\n      flexContainer: {\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        minWidth: '100%',\n        margin: '',\n      },\n\n      textContainer: {\n        textAlign: 'left',\n      },\n\n      icon: {\n        fontSize: '2em',\n        lineHeight: '1em',\n        height: '1em',\n        margin: '0px 8px 0px 0px',\n        flexBasis: '1em',\n        flexShrink: '0',\n      },\n\n      label: {\n        margin: '0 0 5px',\n        lineHeight: '100%',\n        fontWeight: FontWeights.semibold,\n      },\n      description: [\n        fonts.small,\n        {\n          lineHeight: '100%',\n        },\n      ],\n    };\n\n    const standardCompoundTheme: IButtonStyles = {\n      description: {\n        color: palette.neutralSecondary,\n      },\n\n      descriptionHovered: {\n        color: palette.neutralDark,\n      },\n\n      descriptionPressed: {\n        color: 'inherit',\n      },\n\n      descriptionChecked: {\n        color: 'inherit',\n      },\n\n      descriptionDisabled: {\n        color: 'inherit',\n      },\n    };\n\n    const primaryCompoundTheme: IButtonStyles = {\n      description: {\n        color: palette.white,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n            color: 'Window',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      descriptionHovered: {\n        color: palette.white,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'Highlight',\n            color: 'Window',\n          },\n        },\n      },\n\n      descriptionPressed: {\n        color: 'inherit',\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'Window',\n            backgroundColor: 'WindowText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      descriptionChecked: {\n        color: 'inherit',\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'Window',\n            backgroundColor: 'WindowText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      descriptionDisabled: {\n        color: 'inherit',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'inherit',\n          },\n        },\n      },\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      compoundButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      primary ? primaryCompoundTheme : standardCompoundTheme,\n      splitButtonStyles,\n      customStyles,\n    )!;\n  },\n);\n", "import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './IconButton.styles';\nimport type { IButtonProps } from '../Button.types';\n\n/**\n * {@docCategory Button}\n */\n@customizable('IconButton', ['theme', 'styles'], true)\nexport class IconButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName=\"ms-Button--icon\"\n        styles={getStyles(theme!, styles)}\n        onRenderText={nullRender}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n", "import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nexport const getStyles = memoizeFunction((theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n  const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n  const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n  const { palette, semanticColors } = theme;\n  const iconButtonStyles: IButtonStyles = {\n    root: {\n      padding: '0 4px',\n      width: '32px',\n      height: '32px',\n      backgroundColor: 'transparent',\n      border: 'none',\n      color: semanticColors.link,\n    },\n\n    rootHovered: {\n      color: palette.themeDarkAlt,\n      backgroundColor: palette.neutralLighter,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootHasMenu: {\n      width: 'auto',\n    },\n\n    rootPressed: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralLight,\n    },\n\n    rootExpanded: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralLight,\n    },\n\n    rootChecked: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralLight,\n    },\n\n    rootCheckedHovered: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralQuaternaryAlt,\n    },\n\n    rootDisabled: {\n      color: palette.neutralTertiaryAlt,\n    },\n  };\n\n  return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles)!;\n});\n", "import * as React from 'react';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { DefaultButton } from '../DefaultButton/DefaultButton';\nimport type { IButtonProps } from '../Button.types';\n\n/**\n * {@docCategory Button}\n */\n@customizable('PrimaryButton', ['theme', 'styles'], true)\nexport class PrimaryButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    return <DefaultButton {...this.props} primary={true} onRenderDescription={nullRender} />;\n  }\n}\n", "import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './CommandBarButton.styles';\nimport type { IButtonProps } from '../Button.types';\n\n/**\n * {@docCategory Button}\n */\n@customizable('CommandBarButton', ['theme', 'styles'], true)\nexport class CommandBarButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName=\"ms-Button--commandBar\"\n        styles={getStyles(theme!, styles)}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n", "import { concatStyleSets, getFocusStyle, HighContrastSelector, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport { ButtonGlobalClassNames } from '../BaseButton.classNames';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, focusInset?: string, focusColor?: string): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const baseSplitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n\n    const { palette: p, semanticColors } = theme;\n\n    const commandButtonHighContrastFocus = {\n      left: 4,\n      top: 4,\n      bottom: 4,\n      right: 4,\n      border: 'none',\n    };\n\n    const commandButtonStyles: IButtonStyles = {\n      root: [\n        getFocusStyle(theme, {\n          inset: 2,\n          highContrastStyle: commandButtonHighContrastFocus,\n          borderColor: 'transparent',\n        }),\n        theme.fonts.medium,\n        {\n          minWidth: '40px',\n          backgroundColor: p.white,\n          color: p.neutralPrimary,\n          padding: '0 4px',\n          border: 'none',\n          borderRadius: 0,\n          selectors: {\n            [HighContrastSelector]: {\n              border: 'none',\n            },\n          },\n        },\n      ],\n\n      rootHovered: {\n        backgroundColor: p.neutralLighter,\n        color: p.neutralDark,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'Highlight',\n          },\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: p.themeDarkAlt,\n          },\n          [`.${ButtonGlobalClassNames.msButtonMenuIcon}`]: {\n            color: p.neutralPrimary,\n          },\n        },\n      },\n\n      rootPressed: {\n        backgroundColor: p.neutralLight,\n        color: p.neutralDark,\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: p.themeDark,\n          },\n          [`.${ButtonGlobalClassNames.msButtonMenuIcon}`]: {\n            color: p.neutralPrimary,\n          },\n        },\n      },\n\n      rootChecked: {\n        backgroundColor: p.neutralLight,\n        color: p.neutralDark,\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: p.themeDark,\n          },\n          [`.${ButtonGlobalClassNames.msButtonMenuIcon}`]: {\n            color: p.neutralPrimary,\n          },\n        },\n      },\n\n      rootCheckedHovered: {\n        backgroundColor: p.neutralQuaternaryAlt,\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: p.themeDark,\n          },\n          [`.${ButtonGlobalClassNames.msButtonMenuIcon}`]: {\n            color: p.neutralPrimary,\n          },\n        },\n      },\n\n      rootExpanded: {\n        backgroundColor: p.neutralLight,\n        color: p.neutralDark,\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: p.themeDark,\n          },\n          [`.${ButtonGlobalClassNames.msButtonMenuIcon}`]: {\n            color: p.neutralPrimary,\n          },\n        },\n      },\n\n      rootExpandedHovered: {\n        backgroundColor: p.neutralQuaternaryAlt,\n      },\n\n      rootDisabled: {\n        backgroundColor: p.white,\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: semanticColors.disabledBodySubtext,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n                ...getHighContrastNoAdjustStyle(),\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            backgroundColor: 'Window',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      // Split button styles\n      splitButtonContainer: {\n        height: '100%',\n        selectors: {\n          [HighContrastSelector]: {\n            border: 'none',\n          },\n        },\n      },\n\n      splitButtonDividerDisabled: {\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'Window',\n          },\n        },\n      },\n\n      splitButtonDivider: {\n        backgroundColor: p.neutralTertiaryAlt,\n      },\n\n      splitButtonMenuButton: {\n        backgroundColor: p.white,\n        border: 'none',\n        borderTopRightRadius: '0',\n        borderBottomRightRadius: '0',\n        color: p.neutralSecondary,\n        selectors: {\n          ':hover': {\n            backgroundColor: p.neutralLighter,\n            color: p.neutralDark,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'Highlight',\n              },\n              [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n                color: p.neutralPrimary,\n              },\n            },\n          },\n          ':active': {\n            backgroundColor: p.neutralLight,\n            selectors: {\n              [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n                color: p.neutralPrimary,\n              },\n            },\n          },\n        },\n      },\n\n      splitButtonMenuButtonDisabled: {\n        backgroundColor: p.white,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            border: 'none',\n            backgroundColor: 'Window',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      splitButtonMenuButtonChecked: {\n        backgroundColor: p.neutralLight,\n        color: p.neutralDark,\n        selectors: {\n          ':hover': {\n            backgroundColor: p.neutralQuaternaryAlt,\n          },\n        },\n      },\n\n      splitButtonMenuButtonExpanded: {\n        backgroundColor: p.neutralLight,\n        color: p.black,\n        selectors: {\n          ':hover': {\n            backgroundColor: p.neutralQuaternaryAlt,\n          },\n        },\n      },\n\n      splitButtonMenuIcon: {\n        color: p.neutralPrimary,\n      },\n\n      splitButtonMenuIconDisabled: {\n        color: p.neutralTertiary,\n      },\n\n      label: {\n        fontWeight: 'normal', // theme.fontWeights.semibold,\n      },\n\n      icon: {\n        color: p.themePrimary,\n      },\n\n      menuIcon: {\n        color: p.neutralSecondary,\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    };\n\n    return concatStyleSets(baseButtonStyles, baseSplitButtonStyles, commandButtonStyles, customStyles)!;\n  },\n);\n", "import { ActionButton } from '../ActionButton/ActionButton';\n\n/**\n * {@docCategory Button}\n */\nexport const CommandButton = ActionButton;\n", "import * as React from 'react';\nimport { DefaultButton } from '../DefaultButton/DefaultButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './MessageBarButton.styles';\nimport type { IButtonProps } from '../Button.types';\n\n/**\n * {@docCategory MessageBar}\n */\n@customizable('MessageBarButton', ['theme', 'styles'], true)\nexport class MessageBarButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { styles, theme } = this.props;\n\n    return <DefaultButton {...this.props} styles={getStyles(theme!, styles)} onRenderDescription={nullRender} />;\n  }\n}\n", "import { concatStyleSets, getFocusStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles =>\n    concatStyleSets(\n      {\n        root: [\n          getFocusStyle(theme, {\n            inset: 1,\n            highContrastStyle: {\n              outlineOffset: '-4px',\n              outline: '1px solid Window',\n            },\n            borderColor: 'transparent',\n          }),\n          {\n            height: 24,\n          },\n        ],\n      },\n      customStyles,\n    ),\n);\n", "import type { ISelectableOption } from '../../utilities/selectableOption/SelectableOption.types';\n\nexport function getAllSelectedOptions(options: ISelectableOption[], selectedIndices: number[]): ISelectableOption[] {\n  const selectedOptions: ISelectableOption[] = [];\n  for (const index of selectedIndices) {\n    const option = options[index];\n\n    if (option) {\n      selectedOptions.push(option);\n    }\n  }\n\n  return selectedOptions;\n}\n", "export interface ISelectableOption<T = any> {\n  /**\n   * Arbitrary string associated with this option.\n   */\n  key: string | number;\n\n  /**\n   * ID attribute associated with this option\n   */\n  id?: string;\n\n  /**\n   * Text to render for this option\n   */\n  text: string;\n\n  /**\n   * Title attribute (built in tooltip) for a given option.\n   */\n  title?: string;\n\n  /**\n   * Text to render for this option\n   * Note: the SelectAll itemType is only supported on one option in multiselect components\n   */\n  itemType?: SelectableOptionMenuItemType;\n\n  /**\n   * Index for this option\n   */\n  index?: number;\n\n  /**\n   * The aria label for the dropdown option. If not present, the `text` will be used.\n   */\n  ariaLabel?: string;\n\n  /** If option is selected. */\n  selected?: boolean;\n\n  /**\n   * Whether the option is disabled\n   * @defaultvalue false\n   */\n  disabled?: boolean;\n\n  /**\n   * Defines whether the option is hidden or not.\n   * @defaultvalue false\n   */\n  hidden?: boolean;\n\n  /**\n   * Data available to custom onRender functions.\n   */\n  data?: T;\n}\n\nexport enum SelectableOptionMenuItemType {\n  Normal = 0,\n  Divider = 1,\n  Header = 2,\n  SelectAll = 3,\n}\n", "import { DropdownMenuItemType } from '../Dropdown.types';\nimport type { IDropdownOption } from '../Dropdown.types';\n\n/**\n * A utility class to cache size and position in cache.\n *\n * Dropdown options has non-selectable display types. It is therefore not cheap to determine\n * the total number of actual selectable options as well as the position an option is in the\n * list of options - O(n) cost for each lookup.\n *\n * Given that we potentially have to make this determination on every single render pass, this\n * cache should provide a little bit of relief.\n */\nexport class DropdownSizePosCache {\n  private _cachedOptions: IDropdownOption[];\n  private _displayOnlyOptionsCache: number[];\n  private _notSelectableOptionsCache: number[];\n  private _size = 0;\n\n  /**\n   * Invalidates the cache and recalculate the size of selectable options.\n   */\n  public updateOptions(options: IDropdownOption[]) {\n    const displayOnlyOptionsCache = [];\n    const notSelectableOptionsCache = [];\n    let size = 0;\n    for (let i = 0; i < options.length; i++) {\n      const { itemType, hidden } = options[i];\n\n      if (itemType === DropdownMenuItemType.Divider || itemType === DropdownMenuItemType.Header) {\n        displayOnlyOptionsCache.push(i);\n        notSelectableOptionsCache.push(i);\n      } else if (hidden) {\n        notSelectableOptionsCache.push(i);\n      } else {\n        size++;\n      }\n    }\n\n    this._size = size;\n    this._displayOnlyOptionsCache = displayOnlyOptionsCache;\n    this._notSelectableOptionsCache = notSelectableOptionsCache;\n    this._cachedOptions = [...options];\n  }\n\n  /**\n   * The size of all the selectable options.\n   */\n  public get optionSetSize(): number {\n    return this._size;\n  }\n\n  /**\n   * The chached options array.\n   */\n  public get cachedOptions(): IDropdownOption[] {\n    return this._cachedOptions;\n  }\n\n  /**\n   * Returns the position of this option element relative to the full set of selectable option elements.\n   * Note: the first selectable element is position 1 in the set.\n   * @param index The raw index of the option element.\n   */\n  public positionInSet(index: number | undefined): number | undefined {\n    if (index === undefined) {\n      return undefined;\n    }\n\n    // we could possibly memoize this too but this should be good enough, most of the time (the expectation is that\n    // when you have a lot of options, the selectable options will heavily dominate over the non-selectable options.\n    let offset = 0;\n    while (index > this._notSelectableOptionsCache[offset]) {\n      offset++;\n    }\n\n    if (this._displayOnlyOptionsCache[offset] === index) {\n      throw new Error(`Unexpected: Option at index ${index} is not a selectable element.`);\n    }\n\n    if (this._notSelectableOptionsCache[offset] === index) {\n      return undefined;\n    }\n\n    return index - offset + 1;\n  }\n}\n", "import * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nimport type { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nconst getClassNames = classNamesFunction<ILabelStyleProps, ILabelStyles>({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class LabelBase extends React.Component<ILabelProps, {}> {\n  public render(): JSX.Element {\n    const { as: RootType = 'label', children, className, disabled, styles, required, theme } = this.props;\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      required,\n      theme: theme!,\n    });\n    return (\n      <RootType {...getNativeProps(this.props, divProperties)} className={classNames.root}>\n        {children}\n      </RootType>\n    );\n  }\n}\n", "import { HighContrastSelector, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport type { ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const getStyles = (props: ILabelStyleProps): ILabelStyles => {\n  const { theme, className, disabled, required } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const labelFontWeight = FontWeights.semibold;\n  const labelColor = semanticColors.bodyText;\n  const labelDisabledColor = semanticColors.disabledBodyText;\n  const labelRequiredStarColor = semanticColors.errorText;\n\n  return {\n    root: [\n      'ms-Label',\n      theme.fonts.medium,\n      {\n        fontWeight: labelFontWeight,\n        color: labelColor,\n        boxSizing: 'border-box',\n        boxShadow: 'none',\n        margin: 0,\n        display: 'block',\n        padding: '5px 0',\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n      },\n      disabled && {\n        color: labelDisabledColor,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      required && {\n        selectors: {\n          '::after': {\n            content: `' *'`,\n            color: labelRequiredStarColor,\n            paddingRight: 12,\n          },\n        },\n      },\n      className,\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { LabelBase } from './Label.base';\nimport { getStyles } from './Label.styles';\nimport type { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const Label: React.FunctionComponent<ILabelProps> = styled<ILabelProps, ILabelStyleProps, ILabelStyles>(\n  LabelBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Label',\n  },\n);\n", "import * as React from 'react';\nimport { IconButton } from '../../Button';\nimport { Layer } from '../../Layer';\nimport { Overlay } from '../../Overlay';\nimport { Popup } from '../../Popup';\nimport {\n  allowScrollOnElement,\n  allowOverscrollOnElement,\n  classNamesFunction,\n  divProperties,\n  elementContains,\n  getId,\n  getNativeProps,\n  getRTL,\n  css,\n  warnDeprecations,\n  Async,\n  EventGroup,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { FocusTrapZone } from '../FocusTrapZone/index';\nimport { PanelType } from './Panel.types';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IPanel, IPanelProps, IPanelStyleProps, IPanelStyles } from './Panel.types';\n\nconst getClassNames = classNamesFunction<IPanelStyleProps, IPanelStyles>();\nconst COMPONENT_NAME = 'Panel';\n\nenum PanelVisibilityState {\n  closed,\n  animatingOpen,\n  open,\n  animatingClosed,\n}\n\ninterface IPanelState {\n  isFooterSticky?: boolean;\n  id?: string;\n  visibility: PanelVisibilityState;\n}\n\nexport class PanelBase extends React.Component<IPanelProps, IPanelState> implements IPanel {\n  public static defaultProps: IPanelProps = {\n    isHiddenOnDismiss: false,\n    isOpen: undefined,\n    isBlocking: true,\n    hasCloseButton: true,\n    type: PanelType.smallFixedFar,\n  };\n\n  private _async: Async;\n  private _events: EventGroup;\n  private _panel = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IPanelStyles>;\n  private _scrollableContent: HTMLDivElement | null;\n  private _animationCallback: number | null = null;\n  private _hasCustomNavigation: boolean = !!(this.props.onRenderNavigation || this.props.onRenderNavigationContent);\n  private _headerTextId: string | undefined;\n  private _allowTouchBodyScroll: boolean;\n\n  public static getDerivedStateFromProps(\n    nextProps: Readonly<IPanelProps>,\n    prevState: Readonly<IPanelState>,\n  ): Partial<IPanelState> | null {\n    if (nextProps.isOpen === undefined) {\n      return null; // no state update\n    }\n    if (\n      nextProps.isOpen &&\n      (prevState.visibility === PanelVisibilityState.closed ||\n        prevState.visibility === PanelVisibilityState.animatingClosed)\n    ) {\n      return { visibility: PanelVisibilityState.animatingOpen };\n    }\n    if (\n      !nextProps.isOpen &&\n      (prevState.visibility === PanelVisibilityState.open ||\n        prevState.visibility === PanelVisibilityState.animatingOpen)\n    ) {\n      return { visibility: PanelVisibilityState.animatingClosed };\n    }\n    return null;\n  }\n\n  constructor(props: IPanelProps) {\n    super(props);\n\n    const { allowTouchBodyScroll = false } = this.props;\n    this._allowTouchBodyScroll = allowTouchBodyScroll;\n\n    initializeComponentRef(this);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      ignoreExternalFocusing: 'focusTrapZoneProps',\n      forceFocusInsideTrap: 'focusTrapZoneProps',\n      firstFocusableSelector: 'focusTrapZoneProps',\n    });\n\n    this.state = {\n      isFooterSticky: false,\n      // intentionally ignore props so animation takes place during componentDidMount\n      visibility: PanelVisibilityState.closed,\n      id: getId('Panel'),\n    };\n  }\n\n  public componentDidMount(): void {\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n\n    this._events.on(window, 'resize', this._updateFooterPosition);\n\n    if (this._shouldListenForOuterClick(this.props)) {\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    }\n\n    if (this.props.isOpen) {\n      this.setState({ visibility: PanelVisibilityState.animatingOpen });\n    }\n  }\n\n  public componentDidUpdate(previousProps: IPanelProps, previousState: IPanelState): void {\n    const shouldListenOnOuterClick = this._shouldListenForOuterClick(this.props);\n    const previousShouldListenOnOuterClick = this._shouldListenForOuterClick(previousProps);\n\n    if (this.state.visibility !== previousState.visibility) {\n      this._clearExistingAnimationTimer();\n      if (this.state.visibility === PanelVisibilityState.animatingOpen) {\n        this._animateTo(PanelVisibilityState.open);\n      } else if (this.state.visibility === PanelVisibilityState.animatingClosed) {\n        this._animateTo(PanelVisibilityState.closed);\n      }\n    }\n\n    if (shouldListenOnOuterClick && !previousShouldListenOnOuterClick) {\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    } else if (!shouldListenOnOuterClick && previousShouldListenOnOuterClick) {\n      this._events.off(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      className = '',\n      elementToFocusOnDismiss,\n      /* eslint-disable deprecation/deprecation */\n      firstFocusableSelector,\n      focusTrapZoneProps,\n      forceFocusInsideTrap,\n      hasCloseButton,\n      headerText,\n      headerClassName = '',\n      ignoreExternalFocusing,\n      isBlocking,\n      isFooterAtBottom,\n      isLightDismiss,\n      isHiddenOnDismiss,\n      layerProps,\n      overlayProps,\n      popupProps,\n      type,\n      styles,\n      theme,\n      customWidth,\n      onLightDismissClick = this._onPanelClick,\n      onRenderNavigation = this._onRenderNavigation,\n      onRenderHeader = this._onRenderHeader,\n      onRenderBody = this._onRenderBody,\n      onRenderFooter = this._onRenderFooter,\n    } = this.props;\n    const { isFooterSticky, visibility, id } = this.state;\n    const isLeft = type === PanelType.smallFixedNear || type === PanelType.customNear ? true : false;\n    const isRTL = getRTL(theme);\n    const isOnRightSide = isRTL ? isLeft : !isLeft;\n    const customWidthStyles = type === PanelType.custom || type === PanelType.customNear ? { width: customWidth } : {};\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n    const isOpen = this.isActive;\n    const isAnimating =\n      visibility === PanelVisibilityState.animatingClosed || visibility === PanelVisibilityState.animatingOpen;\n\n    this._headerTextId = headerText && id + '-headerText';\n\n    if (!isOpen && !isAnimating && !isHiddenOnDismiss) {\n      return null;\n    }\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      focusTrapZoneClassName: focusTrapZoneProps ? focusTrapZoneProps.className : undefined,\n      hasCloseButton,\n      headerClassName,\n      isAnimating,\n      isFooterSticky,\n      isFooterAtBottom,\n      isOnRightSide,\n      isOpen,\n      isHiddenOnDismiss,\n      type,\n      hasCustomNavigation: this._hasCustomNavigation,\n    });\n\n    const { _classNames, _allowTouchBodyScroll } = this;\n\n    let overlay;\n    if (isBlocking && isOpen) {\n      overlay = (\n        <Overlay\n          className={_classNames.overlay}\n          isDarkThemed={false}\n          onClick={isLightDismiss ? onLightDismissClick : undefined}\n          allowTouchBodyScroll={_allowTouchBodyScroll}\n          {...overlayProps}\n        />\n      );\n    }\n\n    return (\n      <Layer {...layerProps}>\n        <Popup\n          role=\"dialog\"\n          aria-modal={isBlocking ? 'true' : undefined}\n          ariaLabelledBy={this._headerTextId ? this._headerTextId : undefined}\n          onDismiss={this.dismiss}\n          className={_classNames.hiddenPanel}\n          enableAriaHiddenSiblings={isOpen ? true : false}\n          {...popupProps}\n        >\n          <div aria-hidden={!isOpen && isAnimating} {...nativeProps} ref={this._panel} className={_classNames.root}>\n            {overlay}\n            <FocusTrapZone\n              ignoreExternalFocusing={ignoreExternalFocusing}\n              forceFocusInsideTrap={!isBlocking || (isHiddenOnDismiss && !isOpen) ? false : forceFocusInsideTrap}\n              firstFocusableSelector={firstFocusableSelector}\n              isClickableOutsideFocusTrap={true}\n              {...focusTrapZoneProps}\n              className={_classNames.main}\n              style={customWidthStyles}\n              elementToFocusOnDismiss={elementToFocusOnDismiss}\n            >\n              <div className={_classNames.contentInner}>\n                <div ref={this._allowScrollOnPanel} className={_classNames.scrollableContent} data-is-scrollable={true}>\n                  <div className={_classNames.commands} data-is-visible={true}>\n                    {onRenderNavigation(this.props, this._onRenderNavigation)}\n                  </div>\n                  {(this._hasCustomNavigation || !hasCloseButton) &&\n                    onRenderHeader(this.props, this._onRenderHeader, this._headerTextId)}\n                  {onRenderBody(this.props, this._onRenderBody)}\n                  {onRenderFooter(this.props, this._onRenderFooter)}\n                </div>\n              </div>\n            </FocusTrapZone>\n          </div>\n        </Popup>\n      </Layer>\n    );\n  }\n\n  public open() {\n    if (this.props.isOpen !== undefined) {\n      return;\n    }\n\n    if (this.isActive) {\n      return;\n    }\n\n    this.setState({ visibility: PanelVisibilityState.animatingOpen });\n  }\n\n  public close() {\n    if (this.props.isOpen !== undefined) {\n      return;\n    }\n\n    if (!this.isActive) {\n      return;\n    }\n\n    this.setState({ visibility: PanelVisibilityState.animatingClosed });\n  }\n\n  public dismiss = (ev?: React.SyntheticEvent<HTMLElement> | KeyboardEvent): void => {\n    if (this.props.onDismiss && this.isActive) {\n      this.props.onDismiss(ev);\n    }\n\n    if (!ev || (ev && !ev.defaultPrevented)) {\n      this.close();\n    }\n  };\n\n  /** isActive is true when panel is open or opening. */\n  public get isActive(): boolean {\n    return (\n      this.state.visibility === PanelVisibilityState.open ||\n      this.state.visibility === PanelVisibilityState.animatingOpen\n    );\n  }\n\n  // Allow the user to scroll within the panel but not on the body\n  private _allowScrollOnPanel = (elt: HTMLDivElement | null): void => {\n    if (elt) {\n      if (this._allowTouchBodyScroll) {\n        allowOverscrollOnElement(elt, this._events);\n      } else {\n        allowScrollOnElement(elt, this._events);\n      }\n    } else {\n      this._events.off(this._scrollableContent);\n    }\n    this._scrollableContent = elt;\n  };\n\n  private _shouldListenForOuterClick(props: IPanelProps): boolean {\n    return !!props.isBlocking && !!props.isOpen;\n  }\n\n  private _onRenderNavigation = (props: IPanelProps): JSX.Element | null => {\n    if (!this.props.onRenderNavigationContent && !this.props.onRenderNavigation && !this.props.hasCloseButton) {\n      return null;\n    }\n    const { onRenderNavigationContent = this._onRenderNavigationContent } = this.props;\n    return (\n      <div className={this._classNames.navigation}>\n        {onRenderNavigationContent(props, this._onRenderNavigationContent)}\n      </div>\n    );\n  };\n\n  private _onRenderNavigationContent = (props: IPanelProps): JSX.Element | null => {\n    const { closeButtonAriaLabel, hasCloseButton, onRenderHeader = this._onRenderHeader } = props;\n    if (hasCloseButton) {\n      const iconButtonStyles = this._classNames.subComponentStyles?.closeButton();\n\n      return (\n        <>\n          {!this._hasCustomNavigation && onRenderHeader(this.props, this._onRenderHeader, this._headerTextId)}\n          <IconButton\n            styles={iconButtonStyles}\n            className={this._classNames.closeButton}\n            onClick={this._onPanelClick}\n            ariaLabel={closeButtonAriaLabel}\n            title={closeButtonAriaLabel}\n            data-is-visible={true}\n            iconProps={{ iconName: 'Cancel' }}\n          />\n        </>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderHeader = (\n    props: IPanelProps,\n    defaultRender?: (props?: IPanelProps) => JSX.Element | null,\n    headerTextId?: string | undefined,\n  ): JSX.Element | null => {\n    const { headerText, headerTextProps = {} } = props;\n\n    if (headerText) {\n      return (\n        <div className={this._classNames.header}>\n          <div\n            id={headerTextId}\n            role=\"heading\"\n            aria-level={1}\n            {...headerTextProps}\n            className={css(this._classNames.headerText, headerTextProps.className)}\n          >\n            {headerText}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderBody = (props: IPanelProps): JSX.Element => {\n    return <div className={this._classNames.content}>{props.children}</div>;\n  };\n\n  private _onRenderFooter = (props: IPanelProps): JSX.Element | null => {\n    const { onRenderFooterContent = null } = this.props;\n    if (onRenderFooterContent) {\n      return (\n        <div className={this._classNames.footer}>\n          <div className={this._classNames.footerInner}>{onRenderFooterContent()}</div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  private _updateFooterPosition(): void {\n    const scrollableContent = this._scrollableContent;\n    if (scrollableContent) {\n      const height = scrollableContent.clientHeight;\n      const innerHeight = scrollableContent.scrollHeight;\n\n      this.setState({\n        isFooterSticky: height < innerHeight ? true : false,\n      });\n    }\n  }\n\n  private _dismissOnOuterClick(ev: React.MouseEvent<HTMLDivElement>): void {\n    const panel = this._panel.current;\n    if (this.isActive && panel && !ev.defaultPrevented) {\n      if (!elementContains(panel, ev.target as HTMLElement)) {\n        if (this.props.onOuterClick) {\n          this.props.onOuterClick(ev);\n        } else {\n          this.dismiss(ev);\n        }\n      }\n    }\n  }\n\n  private _animateTo = (newVisibilityState: PanelVisibilityState): void => {\n    if (newVisibilityState === PanelVisibilityState.open && this.props.onOpen) {\n      this.props.onOpen();\n    }\n\n    this._animationCallback = this._async.setTimeout(() => {\n      this.setState({ visibility: newVisibilityState });\n      this._onTransitionComplete(newVisibilityState);\n    }, 200);\n  };\n\n  private _clearExistingAnimationTimer = (): void => {\n    if (this._animationCallback !== null) {\n      this._async.clearTimeout(this._animationCallback);\n    }\n  };\n\n  private _onPanelClick = (ev?: any): void => {\n    this.dismiss(ev);\n  };\n\n  private _onTransitionComplete = (newVisibilityState: PanelVisibilityState): void => {\n    this._updateFooterPosition();\n    if (newVisibilityState === PanelVisibilityState.open && this.props.onOpened) {\n      this.props.onOpened();\n    }\n\n    if (newVisibilityState === PanelVisibilityState.closed && this.props.onDismissed) {\n      this.props.onDismissed();\n    }\n  };\n}\n", "import * as React from 'react';\nimport {\n  classNamesFunction,\n  getNativeProps,\n  divProperties,\n  enableBodyScroll,\n  disableBodyScroll,\n  initializeComponentRef,\n} from '../../Utilities';\nimport type { IOverlayProps, IOverlayStyleProps, IOverlayStyles } from './Overlay.types';\n\nconst getClassNames = classNamesFunction<IOverlayStyleProps, IOverlayStyles>();\n\nexport class OverlayBase extends React.Component<IOverlayProps, {}> {\n  private _allowTouchBodyScroll: boolean;\n\n  constructor(props: IOverlayProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    const { allowTouchBodyScroll = false } = this.props;\n    this._allowTouchBodyScroll = allowTouchBodyScroll;\n  }\n\n  public componentDidMount(): void {\n    !this._allowTouchBodyScroll && disableBodyScroll();\n  }\n\n  public componentWillUnmount(): void {\n    !this._allowTouchBodyScroll && enableBodyScroll();\n  }\n\n  public render(): JSX.Element {\n    const { isDarkThemed: isDark, className, theme, styles } = this.props;\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isDark,\n    });\n\n    return <div {...divProps} className={classNames.root} />;\n  }\n}\n", "import { HighContrastSelector, getGlobalClassNames } from '../../Styling';\nimport type { IOverlayStyleProps, IOverlayStyles } from './Overlay.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Overlay',\n  rootDark: 'ms-Overlay--dark',\n};\n\nexport const getStyles = (props: IOverlayStyleProps): IOverlayStyles => {\n  const { className, theme, isNone, isDark } = props;\n\n  const { palette } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        backgroundColor: palette.whiteTranslucent40,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        position: 'absolute',\n\n        selectors: {\n          [HighContrastSelector]: {\n            border: '1px solid WindowText',\n            opacity: 0,\n          },\n        },\n      },\n\n      isNone && {\n        visibility: 'hidden',\n      },\n\n      isDark && [\n        classNames.rootDark,\n        {\n          backgroundColor: palette.blackTranslucent40,\n        },\n      ],\n\n      className,\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { OverlayBase } from './Overlay.base';\nimport { getStyles } from './Overlay.styles';\nimport type { IOverlayProps, IOverlayStyleProps, IOverlayStyles } from './Overlay.types';\n\nexport const Overlay: React.FunctionComponent<IOverlayProps> = styled<\n  IOverlayProps,\n  IOverlayStyleProps,\n  IOverlayStyles\n>(OverlayBase, getStyles, undefined, {\n  scope: 'Overlay',\n});\n", "import * as React from 'react';\nimport { PanelBase } from './Panel.base';\nimport type { IFocusTrapZoneProps } from '../../FocusTrapZone';\nimport type { ILayerProps } from '../../Layer';\nimport type { IOverlayProps } from '../../Overlay';\nimport type { IStyle, ITheme } from '../../Styling';\nimport type { IRefObject, IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IButtonStyles } from '../../Button';\nimport type { IPopupProps } from '../../Popup';\n\n/**\n * {@docCategory Panel}\n */\nexport interface IPanel {\n  /**\n   * Forces the panel to open.\n   */\n  open: () => void;\n\n  /**\n   * Forces the panel to dismiss.\n   */\n  dismiss: (ev?: React.KeyboardEvent<HTMLElement> | KeyboardEvent) => void;\n}\n\n/**\n * {@docCategory Panel}\n */\nexport interface IPanelProps extends React.HTMLAttributes<PanelBase> {\n  /**\n   * Optional callback to access the IPanel interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IPanel>;\n\n  /**\n   * Whether the panel is displayed.\n   * If true, will cause panel to stay open even if dismissed.\n   * If false, will cause panel to stay hidden.\n   * If undefined, will allow the panel to control its own visibility through open/dismiss methods.\n   * @defaultvalue undefined\n   */\n  isOpen?: boolean;\n\n  /**\n   * Has the close button visible.\n   * @defaultvalue true\n   */\n  hasCloseButton?: boolean;\n\n  /**\n   * Whether the panel can be light dismissed.\n   * @defaultvalue false\n   */\n  isLightDismiss?: boolean;\n\n  /**\n   * Whether the panel is hidden on dismiss, instead of destroyed in the DOM.\n   * Protects the contents from being destroyed when the panel is dismissed.\n   * @defaultvalue false\n   */\n  isHiddenOnDismiss?: boolean;\n\n  /**\n   * Whether the panel uses a modal overlay or not\n   * @defaultvalue true\n   */\n  isBlocking?: boolean;\n\n  /**\n   * Determines if content should stretch to fill available space putting footer at the bottom of the page\n   * @defaultvalue false\n   */\n  isFooterAtBottom?: boolean;\n\n  /**\n   * Header text for the Panel.\n   * @defaultvalue \"\"\n   */\n  headerText?: string;\n\n  /**\n   * The props for header text container.\n   */\n  headerTextProps?: React.HTMLAttributes<HTMLDivElement>;\n\n  /**\n   * A callback function for when the Panel is opened, before the animation completes.\n   */\n  onOpen?: () => void;\n\n  /**\n   * A callback function for when the Panel is opened, after the animation completes.\n   */\n  onOpened?: () => void;\n\n  /**\n   * A callback function for when the panel is closed, before the animation completes.\n   * If the panel should NOT be dismissed based on some keyboard event, then simply call ev.preventDefault() on it\n   */\n  onDismiss?: (ev?: React.SyntheticEvent<HTMLElement> | KeyboardEvent) => void;\n\n  /**\n   * A callback function which is called **after** the Panel is dismissed and the animation is complete.\n   * (If you need to update the Panel's `isOpen` prop in response to a dismiss event, use `onDismiss` instead.)\n   */\n  onDismissed?: () => void;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles>;\n\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional css class to apply to the Panel\n   * @defaultvalue undefined\n   */\n  className?: string;\n\n  /**\n   * Type of the panel.\n   * @defaultvalue PanelType.smallFixedFar\n   */\n  type?: PanelType;\n\n  /**\n   * Custom panel width, used only when `type` is set to `PanelType.custom`.\n   */\n  customWidth?: string;\n\n  /**\n   * Aria label on close button\n   */\n  closeButtonAriaLabel?: string;\n\n  /**\n   * Optional parameter to provider the class name for header text\n   */\n  headerClassName?: string;\n\n  /**\n   * Sets the HTMLElement to focus on when exiting the FocusTrapZone.\n   * @defaultvalue The `element.target` that triggered the Panel.\n   */\n  elementToFocusOnDismiss?: HTMLElement;\n\n  /**\n   * Indicates if this Panel will ignore keeping track of HTMLElement that activated the Zone.\n   * @defaultvalue false\n   * @deprecated Use `focusTrapZoneProps`.\n   */\n  ignoreExternalFocusing?: boolean;\n\n  /**\n   * Indicates whether Panel should force focus inside the focus trap zone.\n   * If not explicitly specified, behavior aligns with FocusTrapZone's default behavior.\n   * @deprecated Use `focusTrapZoneProps`.\n   */\n  forceFocusInsideTrap?: boolean;\n\n  /**\n   * Indicates the selector for first focusable item.\n   * @deprecated Use `focusTrapZoneProps`.\n   */\n  firstFocusableSelector?: string;\n\n  /**\n   * Optional props to pass to the FocusTrapZone component to manage focus in the panel.\n   */\n  focusTrapZoneProps?: IFocusTrapZoneProps;\n\n  /**\n   * Optional props to pass to the Layer component hosting the panel.\n   */\n  layerProps?: ILayerProps;\n\n  /**\n   * Optional props to pass to the Overlay component that the panel uses.\n   */\n  overlayProps?: IOverlayProps;\n\n  /**\n   * Optional props to pass the Popup component that the panel uses.\n   */\n  popupProps?: IPopupProps;\n\n  /**\n   * Optional custom function to handle clicks outside the panel in lightdismiss mode\n   */\n  onLightDismissClick?: () => void;\n\n  /**\n   * Optional custom function to handle clicks outside this component\n   */\n  onOuterClick?: (ev?: React.MouseEvent<HTMLDivElement>) => void;\n\n  /**\n   * Optional custom renderer navigation region. Replaces the region that contains the close button.\n   */\n  onRenderNavigation?: IRenderFunction<IPanelProps>;\n\n  /**\n   * Optional custom renderer for content in the navigation region. Replaces current close button.\n   */\n  onRenderNavigationContent?: IRenderFunction<IPanelProps>;\n\n  /**\n   * Optional custom renderer for header region. Replaces current title\n   */\n  onRenderHeader?: IPanelHeaderRenderer;\n\n  /**\n   * Optional custom renderer for body region. Replaces any children passed into the component.\n   */\n  onRenderBody?: IRenderFunction<IPanelProps>;\n\n  /**\n   * Optional custom renderer for footer region. Replaces sticky footer.\n   */\n  onRenderFooter?: IRenderFunction<IPanelProps>;\n\n  /**\n   * Custom renderer for content in the sticky footer\n   */\n  onRenderFooterContent?: IRenderFunction<IPanelProps>;\n\n  /**\n   * @deprecated Not used.\n   */\n  componentId?: string;\n\n  /**\n   * Allow body scroll on content and overlay on touch devices. Changing after mounting has no effect.\n   * @defaultvalue false\n   */\n  allowTouchBodyScroll?: boolean;\n}\n\n/**\n * Renderer function which takes an additional parameter, the ID to use for the element containing\n * the panel's title. This allows the `aria-labelledby` for the panel popup to work correctly.\n * Note that if `headerTextId` is provided, it **must** be used on an element, or screen readers\n * will be confused by the reference to a nonexistent ID.\n * {@docCategory Panel}\n */\nexport interface IPanelHeaderRenderer extends IRenderFunction<IPanelProps> {\n  /**\n   * @param props - Props given to the panel\n   * @param defaultRender - Default header renderer. If using this renderer in code that does not\n   * assign `headerTextId` to an element elsewhere, it **must** be passed to this function.\n   * @param headerTextId - If provided, this **must** be used as the ID of an element containing the\n   * panel's title, because the panel popup uses this ID as its aria-labelledby.\n   */\n  (props?: IPanelProps, defaultRender?: IPanelHeaderRenderer, headerTextId?: string | undefined): JSX.Element | null;\n}\n\n/**\n * {@docCategory Panel}\n */\nexport enum PanelType {\n  /**\n   * Renders the Panel with a `fluid` (full screen) width.\n   * Recommended for use on small screen breakpoints.\n   * - Small (320-479): full screen width, 16px left/right padding\n   * - Medium (480-639): full screen width, 16px left/right padding\n   * - Large (640-1023): full screen width, 32px left/right padding\n   * - XLarge (1024-1365): full screen width, 32px left/right padding\n   * - XXLarge (1366-up): full screen width, 40px left/right padding\n   */\n  smallFluid = 0,\n\n  /**\n   * Renders the Panel in fixed-width `small` size, anchored to the far side (right in LTR mode).\n   * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n   * - Medium (480-639): 340px width, 16px left/right padding\n   * - Large (640-1023): 340px width, 32px left/right padding\n   * - XLarge (1024-1365): 340px width, 32px left/right padding\n   * - XXLarge (1366-up): 340px width, 40px left/right padding\n   */\n  smallFixedFar = 1,\n\n  /**\n   * Renders the Panel in fixed-width `small` size, anchored to the near side (left in LTR mode).\n   * - Small (320-479): 272px width, 16px left/right padding\n   * - Medium (480-639): 272px width, 16px left/right padding\n   * - Large (640-1023): 272px width, 32px left/right padding\n   * - XLarge (1024-1365): 272px width, 32px left/right padding\n   * - XXLarge (1366-up): 272px width, 40px left/right padding\n   */\n  smallFixedNear = 2,\n\n  /**\n   * Renders the Panel in `medium` size, anchored to the far side (right in LTR mode).\n   * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n   * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\n   * - Large (640-1023): 592px width, 32px left/right padding\n   * - XLarge (1024-1365): 644px width, 32px left/right padding\n   * - XXLarge (1366-up): 644px width, 40px left/right padding\n   */\n  medium = 3,\n\n  /**\n   * Renders the Panel in `large` size, anchored to the far side (right in LTR mode).\n   * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n   * - Medium (480-639):  adapts to `PanelType.smallFixedFar` at this breakpoint\n   * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\n   * - XLarge (1024-1365): 48px fixed left margin, fluid width, 32px left/right padding\n   * - XXLarge (1366-up): 428px fixed left margin, fluid width, 40px left/right padding\n   */\n  large = 4,\n\n  /**\n   * Renders the Panel in `large` size, anchored to the far side (right in LTR mode), with a fixed width at\n   * XX-Large breakpoint.\n   * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n   * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\n   * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\n   * - XLarge (1024-1365): 48px fixed left margin, fluid width, 32px left/right padding\n   * - XXLarge (1366-up): 940px width, 40px left/right padding\n   */\n  largeFixed = 5,\n\n  /**\n   * Renders the Panel in `extra large` size, anchored to the far side (right in LTR mode).\n   * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\n   * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\n   * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\n   * - XLarge (1024-1365): adapts to `PanelType.large` at this breakpoint\n   * - XXLarge (1366-1919): 176px fixed left margin, fluid width, 40px left/right padding\n   * - XXXLarge (1920-up): 176px fixed left margin, fluid width, 40px left/right padding\n   */\n  extraLarge = 6,\n\n  /**\n   * Renders the Panel in `custom` size using `customWidth`, anchored to the far side (right in LTR mode).\n   * - Has a fixed width provided by the `customWidth` prop\n   * - When screen width reaches the `customWidth` value it will behave like a fluid width Panel\n   * taking up 100% of the viewport width\n   */\n  custom = 7,\n\n  /**\n   * Renders the Panel in `custom` size using `customWidth`, anchored to the near side (left in LTR mode).\n   * - Has a fixed width provided by the `customWidth` prop\n   * - When screen width reaches the `customWidth` value it will behave like a fluid width Panel\n   * taking up 100% of the viewport width\n   */\n  customNear = 8,\n}\n\n/**\n * {@docCategory Panel}\n */\nexport interface IPanelStyleProps {\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme: ITheme;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  /**\n   * Is Panel open\n   */\n  isOpen?: boolean;\n\n  /**\n   * Is animation currently running\n   */\n  isAnimating?: boolean;\n\n  /**\n   * Is panel on right side\n   */\n  isOnRightSide?: boolean;\n\n  /**\n   * Is panel hidden on dismiss\n   */\n  isHiddenOnDismiss?: boolean;\n\n  /**\n   * Classname for FocusTrapZone element\n   */\n  focusTrapZoneClassName?: string;\n\n  /**\n   * Determines if content should stretch to fill available space putting footer at the bottom of the page\n   */\n  isFooterAtBottom?: boolean;\n\n  /**\n   * Based on state value setting footer to sticky or not\n   */\n  isFooterSticky?: boolean;\n\n  /**\n   * Panel has close button\n   */\n  hasCloseButton?: boolean;\n\n  /**\n   * Type of the panel.\n   */\n  type?: PanelType;\n\n  /**\n   * Optional parameter to provider the class name for header text\n   */\n  headerClassName?: string;\n\n  /**\n   * Determines where the header is rendered based on whether the user\n   * has passed in a custom onRenderNavigation or onRenderNavigationContent render callback\n   */\n  hasCustomNavigation?: boolean;\n}\n\nexport interface IPanelSubComponentStyles {\n  /**\n   * Styling for close button child component.\n   */\n  closeButton: Partial<IButtonStyles>;\n}\n\n/**\n * {@docCategory Panel}\n */\nexport interface IPanelStyles {\n  /**\n   * Style for the root element.\n   */\n  root: IStyle;\n\n  /**\n   * Style for the overlay element.\n   */\n  overlay: IStyle;\n\n  /**\n   * Style for the hidden element.\n   */\n  hiddenPanel: IStyle;\n\n  /**\n   * Style for the main section element.\n   */\n  main: IStyle;\n\n  /**\n   * Style for the navigation container element.\n   */\n  commands: IStyle;\n\n  /**\n   * Style for the Body and Footer container element.\n   */\n  contentInner: IStyle;\n\n  /**\n   * Style for the scrollable content area container element.\n   */\n  scrollableContent: IStyle;\n\n  /**\n   * Style for the close button container element.\n   */\n  navigation: IStyle;\n\n  /**\n   * Style for the close button IconButton element.\n   * @deprecated Use `subComponentStyles.closeButton` instead.\n   */\n  closeButton?: IStyle;\n\n  /**\n   * Style for the header container div element.\n   */\n  header: IStyle;\n\n  /**\n   * Style for the header text div element.\n   */\n  headerText: IStyle;\n\n  /**\n   * Style for the body div element.\n   */\n  content: IStyle;\n\n  /**\n   * Style for the footer div element.\n   */\n  footer: IStyle;\n\n  /**\n   * Style for the inner footer div element.\n   */\n  footerInner: IStyle;\n\n  /**\n   * Styling for subcomponents.\n   */\n  subComponentStyles: IPanelSubComponentStyles;\n}\n", "import { PanelType } from './Panel.types';\nimport {\n  AnimationClassNames,\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  ScreenWidthMinMedium,\n  ScreenWidthMinLarge,\n  ScreenWidthMinXLarge,\n  ScreenWidthMinXXLarge,\n  ScreenWidthMinUhfMobile,\n  IconFontSizes,\n} from '../../Styling';\nimport type { IPanelStyleProps, IPanelStyles } from './Panel.types';\nimport type { IStyle } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft',\n};\n\nconst panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940,\n};\n\nconst panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176,\n};\n\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nconst smallPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinMedium}px)`]: {\n    width: panelWidth.sm,\n  },\n};\n\nconst mediumPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinLarge}px)`]: {\n    width: panelWidth.md1,\n  },\n  [`@media (min-width: ${ScreenWidthMinXLarge}px)`]: {\n    width: panelWidth.md2,\n  },\n};\n\nconst largePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinUhfMobile}px)`]: {\n    left: panelMargin.md,\n    width: panelWidth.auto,\n  },\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.lg,\n  },\n};\n\nconst largeFixedPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.auto,\n    width: panelWidth.lg,\n  },\n};\n\nconst extraLargePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.xl,\n  },\n};\n\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nconst getPanelBreakpoints = (type: PanelType): { [x: string]: IStyle } | undefined => {\n  let selectors;\n\n  // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = {\n        ...smallPanelSelectors,\n      };\n      break;\n    case PanelType.medium:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n      };\n      break;\n    case PanelType.large:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n      };\n      break;\n    case PanelType.largeFixed:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...largeFixedPanelSelectors,\n      };\n      break;\n    case PanelType.extraLarge:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...extraLargePanelSelectors,\n      };\n      break;\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nconst commandBarHeight = '44px';\n\nconst sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px',\n};\n\nexport const getStyles = (props: IPanelStyleProps): IPanelStyles => {\n  const {\n    className,\n    focusTrapZoneClassName,\n    hasCloseButton,\n    headerClassName,\n    isAnimating,\n    isFooterSticky,\n    isFooterAtBottom,\n    isOnRightSide,\n    isOpen,\n    isHiddenOnDismiss,\n    hasCustomNavigation,\n    theme,\n    type = PanelType.smallFixedFar,\n  } = props;\n  const { effects, fonts, semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  const isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isOpen && classNames.isOpen,\n      hasCloseButton && classNames.hasCloseButton,\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      },\n      isCustomPanel && isOnRightSide && classNames.custom,\n      isCustomPanel && !isOnRightSide && classNames.customNear,\n      className,\n    ],\n    overlay: [\n      {\n        pointerEvents: 'auto',\n        cursor: 'pointer',\n      },\n      isOpen && isAnimating && AnimationClassNames.fadeIn100,\n      !isOpen && isAnimating && AnimationClassNames.fadeOut100,\n    ],\n    hiddenPanel: [\n      !isOpen &&\n        !isAnimating &&\n        isHiddenOnDismiss && {\n          visibility: 'hidden',\n        },\n    ],\n    main: [\n      classNames.main,\n      {\n        backgroundColor: semanticColors.bodyBackground,\n        boxShadow: effects.elevation64,\n        pointerEvents: 'auto',\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        bottom: 0,\n        top: 0,\n        // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n        left: panelMargin.auto,\n        right: panelMargin.none,\n        width: panelWidth.full,\n        selectors: {\n          [HighContrastSelector]: {\n            borderLeft: `3px solid ${semanticColors.variantBorder}`,\n            borderRight: `3px solid ${semanticColors.variantBorder}`,\n          },\n          ...getPanelBreakpoints(type),\n        },\n      },\n      type === PanelType.smallFluid && {\n        left: panelMargin.none,\n      },\n      type === PanelType.smallFixedNear && {\n        left: panelMargin.none,\n        right: panelMargin.auto,\n        width: panelWidth.xs,\n      },\n      type === PanelType.customNear && {\n        right: 'auto',\n        left: 0,\n      },\n      isCustomPanel && {\n        maxWidth: '100vw',\n      },\n      isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\n      isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\n      !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\n      !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\n      focusTrapZoneClassName,\n    ],\n    commands: [\n      classNames.commands,\n      {\n        // Ensures that the sticky header always has a background to prevent overlaps on scroll.\n        backgroundColor: semanticColors.bodyBackground,\n        paddingTop: 18,\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            position: 'sticky',\n            top: 0,\n            zIndex: 1,\n          },\n        },\n      },\n      hasCustomNavigation && {\n        paddingTop: 'inherit',\n      },\n    ],\n    navigation: [\n      classNames.navigation,\n      {\n        display: 'flex',\n        justifyContent: 'flex-end',\n      },\n      hasCustomNavigation && {\n        height: commandBarHeight,\n      },\n    ],\n    contentInner: [\n      classNames.contentInner,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        overflowY: 'hidden',\n      },\n    ],\n    header: [\n      classNames.header,\n      sharedPaddingStyles,\n      {\n        alignSelf: 'flex-start',\n      },\n      hasCloseButton &&\n        !hasCustomNavigation && {\n          flexGrow: 1,\n        },\n      hasCustomNavigation && {\n        // Ensure that title doesn't shrink if screen is too small\n        flexShrink: 0,\n      },\n    ],\n    headerText: [\n      classNames.headerText,\n      fonts.xLarge,\n      {\n        color: semanticColors.bodyText,\n        lineHeight: '27px',\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        wordBreak: 'break-word',\n        hyphens: 'auto',\n      },\n      headerClassName,\n    ],\n    scrollableContent: [\n      classNames.scrollableContent,\n      {\n        overflowY: 'auto',\n      },\n      isFooterAtBottom && {\n        flexGrow: 1,\n        display: 'inherit',\n        flexDirection: 'inherit',\n      },\n    ],\n    content: [\n      classNames.content,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 20,\n      },\n      isFooterAtBottom && {\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            flexGrow: 1,\n          },\n        },\n      },\n    ],\n    footer: [\n      classNames.footer,\n      {\n        // Ensure that footer doesn't shrink if screen is too small\n        flexShrink: 0,\n        borderTop: '1px solid transparent',\n        transition: `opacity ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction2}`,\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            position: 'sticky',\n            bottom: 0,\n          },\n        },\n      },\n      isFooterSticky && {\n        backgroundColor: semanticColors.bodyBackground,\n        borderTopColor: semanticColors.variantBorder,\n      },\n    ],\n    footerInner: [\n      classNames.footerInner,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 16,\n        paddingTop: 16,\n      },\n    ],\n    subComponentStyles: {\n      closeButton: {\n        root: [\n          classNames.closeButton,\n          {\n            marginRight: 14,\n            color: theme.palette.neutralSecondary,\n            fontSize: IconFontSizes.large,\n          },\n          hasCustomNavigation && {\n            marginRight: 0,\n            height: 'auto',\n            width: '44px',\n          },\n        ],\n        rootHovered: {\n          color: theme.palette.neutralPrimary,\n        },\n      },\n    },\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { PanelBase } from './Panel.base';\nimport { getStyles } from './Panel.styles';\nimport type { IPanelProps, IPanelStyleProps, IPanelStyles } from './Panel.types';\n\n/**\n * Panel description\n */\nexport const Panel: React.FunctionComponent<IPanelProps> = styled<IPanelProps, IPanelStyleProps, IPanelStyles>(\n  PanelBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Panel',\n  },\n);\n", "import * as React from 'react';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useFocusRects, classNamesFunction } from '@fluentui/utilities';\nimport { Icon } from '../Icon/Icon';\nimport type { ICheckboxProps, ICheckboxStyleProps, ICheckboxStyles } from './Checkbox.types';\n\nconst getClassNames = classNamesFunction<ICheckboxStyleProps, ICheckboxStyles>();\n\nexport const CheckboxBase: React.FunctionComponent<ICheckboxProps> = React.forwardRef<HTMLDivElement, ICheckboxProps>(\n  (props, forwardedRef) => {\n    const {\n      disabled,\n      required,\n      inputProps,\n      name,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaDescribedBy,\n      ariaPositionInSet,\n      ariaSetSize,\n      title,\n      checkmarkIconProps,\n      styles,\n      theme,\n      className,\n      boxSide = 'start',\n    } = props;\n\n    const id = useId('checkbox-', props.id);\n\n    const rootRef = React.useRef<HTMLDivElement | null>(null);\n    const mergedRootRefs: React.Ref<HTMLDivElement> = useMergedRefs(rootRef, forwardedRef);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const [isChecked, setIsChecked] = useControllableValue(props.checked, props.defaultChecked, props.onChange);\n    const [isIndeterminate, setIsIndeterminate] = useControllableValue(props.indeterminate, props.defaultIndeterminate);\n\n    useFocusRects(rootRef);\n    useDebugWarning(props);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      disabled,\n      indeterminate: isIndeterminate,\n      checked: isChecked,\n      reversed: boxSide !== 'start',\n      isUsingCustomLabelRender: !!props.onRenderLabel,\n    });\n\n    const onChange = React.useCallback(\n      (event: React.ChangeEvent<HTMLElement>): void => {\n        if (isIndeterminate) {\n          // If indeterminate, clicking the checkbox *only* removes the indeterminate state (or if\n          // controlled, lets the consumer know to change it by calling onChange). It doesn't\n          // change the checked state.\n          setIsChecked(!!isChecked, event);\n          setIsIndeterminate(false);\n        } else {\n          setIsChecked(!isChecked, event);\n        }\n      },\n      [setIsChecked, setIsIndeterminate, isIndeterminate, isChecked],\n    );\n\n    const defaultLabelRenderer = React.useCallback(\n      (checkboxProps?: ICheckboxProps): JSX.Element | null => {\n        if (!checkboxProps) {\n          return null;\n        }\n        return checkboxProps.label ? (\n          <span className={classNames.text} title={checkboxProps.title}>\n            {checkboxProps.label}\n          </span>\n        ) : null;\n      },\n      [classNames.text],\n    );\n\n    const setNativeIndeterminate = React.useCallback(\n      (indeterminate: boolean | undefined) => {\n        if (!inputRef.current) {\n          return;\n        }\n\n        const value = !!indeterminate;\n\n        inputRef.current.indeterminate = value;\n        setIsIndeterminate(value);\n      },\n      [setIsIndeterminate],\n    );\n\n    useComponentRef(props, isChecked, isIndeterminate, setNativeIndeterminate, inputRef);\n    React.useEffect(() => setNativeIndeterminate(isIndeterminate), [setNativeIndeterminate, isIndeterminate]);\n\n    const onRenderLabel = props.onRenderLabel || defaultLabelRenderer;\n\n    const ariaChecked: React.InputHTMLAttributes<HTMLInputElement>['aria-checked'] = isIndeterminate\n      ? 'mixed'\n      : undefined;\n\n    const mergedInputProps: React.InputHTMLAttributes<HTMLInputElement> = {\n      className: classNames.input,\n      type: 'checkbox' as React.InputHTMLAttributes<HTMLInputElement>['type'],\n      ...inputProps,\n      checked: !!isChecked,\n      disabled,\n      required,\n      name,\n      id,\n      title,\n      onChange,\n      'aria-disabled': disabled,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      'aria-posinset': ariaPositionInSet,\n      'aria-setsize': ariaSetSize,\n      'aria-checked': ariaChecked,\n    };\n\n    return (\n      <div className={classNames.root} title={title} ref={mergedRootRefs}>\n        <input {...mergedInputProps} ref={inputRef} title={title} data-ktp-execute-target={true} />\n        <label className={classNames.label} htmlFor={id}>\n          <div className={classNames.checkbox} data-ktp-target={true}>\n            <Icon iconName=\"CheckMark\" {...checkmarkIconProps} className={classNames.checkmark} />\n          </div>\n          {onRenderLabel(props, defaultLabelRenderer)}\n        </label>\n      </div>\n    );\n  },\n);\n\nCheckboxBase.displayName = 'CheckboxBase';\n\nfunction useDebugWarning(props: ICheckboxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Checkbox',\n      props,\n      mutuallyExclusive: {\n        checked: 'defaultChecked',\n        indeterminate: 'defaultIndeterminate',\n      },\n    });\n  }\n}\n\nfunction useComponentRef(\n  props: ICheckboxProps,\n  isChecked: boolean | undefined,\n  isIndeterminate: boolean | undefined,\n  setIndeterminate: (indeterminate: boolean) => void,\n  checkBoxRef: React.RefObject<HTMLInputElement>,\n) {\n  React.useImperativeHandle(\n    props.componentRef,\n    () => ({\n      get checked() {\n        return !!isChecked;\n      },\n      get indeterminate() {\n        return !!isIndeterminate;\n      },\n      set indeterminate(indeterminate: boolean) {\n        setIndeterminate(indeterminate);\n      },\n      focus() {\n        if (checkBoxRef.current) {\n          checkBoxRef.current.focus();\n        }\n      },\n    }),\n    [checkBoxRef, isChecked, isIndeterminate, setIndeterminate],\n  );\n}\n", "import { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '@fluentui/style-utilities';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nimport type { ICheckboxStyleProps, ICheckboxStyles } from './Checkbox.types';\nimport type { IStyle } from '@fluentui/style-utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Checkbox',\n  label: 'ms-Checkbox-label',\n  checkbox: 'ms-Checkbox-checkbox',\n  checkmark: 'ms-Checkbox-checkmark',\n  text: 'ms-Checkbox-text',\n};\n\nconst MS_CHECKBOX_LABEL_SIZE = '20px';\nconst MS_CHECKBOX_TRANSITION_DURATION = '200ms';\nconst MS_CHECKBOX_TRANSITION_TIMING = 'cubic-bezier(.4, 0, .23, 1)';\n\nexport const getStyles = (props: ICheckboxStyleProps): ICheckboxStyles => {\n  const { className, theme, reversed, checked, disabled, isUsingCustomLabelRender, indeterminate } = props;\n  const { semanticColors, effects, palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const checkmarkFontColor = semanticColors.inputForegroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBorder\n  const checkmarkFontColorHovered = palette.neutralSecondary;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n  const checkboxBorderColor = palette.neutralPrimary;\n  const checkboxBorderIndeterminateColor = semanticColors.inputBackgroundChecked;\n  const checkboxBorderColorChecked = semanticColors.inputBackgroundChecked;\n  const checkboxBorderColorDisabled = semanticColors.disabledBodySubtext;\n  const checkboxBorderHoveredColor = semanticColors.inputBorderHovered;\n  const checkboxBorderIndeterminateHoveredColor = semanticColors.inputBackgroundCheckedHovered;\n  const checkboxBackgroundChecked = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping the following 2 tokens need to be\n  // semanticColors.inputBackgroundCheckedHovered\n  const checkboxBackgroundCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\n  const checkboxBorderColorCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\n  const checkboxHoveredTextColor = semanticColors.inputTextHovered;\n  const checkboxBackgroundDisabledChecked = semanticColors.disabledBodySubtext;\n  const checkboxTextColor = semanticColors.bodyText;\n  const checkboxTextColorDisabled = semanticColors.disabledText;\n\n  const indeterminateDotStyles: IStyle = [\n    {\n      content: '\"\"',\n      borderRadius: effects.roundedCorner2,\n      position: 'absolute',\n      width: 10,\n      height: 10,\n      top: 4,\n      left: 4,\n      boxSizing: 'border-box',\n      borderWidth: 5,\n      borderStyle: 'solid',\n      borderColor: disabled ? checkboxBorderColorDisabled : checkboxBorderIndeterminateColor,\n      transitionProperty: 'border-width, border, border-color',\n      transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\n      transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\n      [HighContrastSelector]: {\n        borderColor: 'WindowText',\n      },\n    },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      {\n        position: 'relative',\n        display: 'flex',\n      },\n      reversed && 'reversed',\n      checked && 'is-checked',\n      !disabled && 'is-enabled',\n      disabled && 'is-disabled',\n      !disabled && [\n        !checked && {\n          [`:hover .${classNames.checkbox}`]: {\n            borderColor: checkboxBorderHoveredColor,\n            [HighContrastSelector]: {\n              borderColor: 'Highlight',\n            },\n          },\n          [`:focus .${classNames.checkbox}`]: { borderColor: checkboxBorderHoveredColor },\n          [`:hover .${classNames.checkmark}`]: {\n            color: checkmarkFontColorHovered,\n            opacity: '1',\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n        checked &&\n          !indeterminate && {\n            [`:hover .${classNames.checkbox}`]: {\n              background: checkboxBackgroundCheckedHovered,\n              borderColor: checkboxBorderColorCheckedHovered,\n            },\n            [`:focus .${classNames.checkbox}`]: {\n              background: checkboxBackgroundCheckedHovered,\n              borderColor: checkboxBorderColorCheckedHovered,\n            },\n            [HighContrastSelector]: {\n              [`:hover .${classNames.checkbox}`]: {\n                background: 'Highlight',\n                borderColor: 'Highlight',\n              },\n              [`:focus .${classNames.checkbox}`]: {\n                background: 'Highlight',\n              },\n              [`:focus:hover .${classNames.checkbox}`]: {\n                background: 'Highlight',\n              },\n              [`:focus:hover .${classNames.checkmark}`]: {\n                color: 'Window',\n              },\n              [`:hover .${classNames.checkmark}`]: {\n                color: 'Window',\n              },\n            },\n          },\n        indeterminate && {\n          [`:hover .${classNames.checkbox}, :hover .${classNames.checkbox}:after`]: {\n            borderColor: checkboxBorderIndeterminateHoveredColor,\n            [HighContrastSelector]: {\n              borderColor: 'WindowText',\n            },\n          },\n          [`:focus .${classNames.checkbox}`]: {\n            borderColor: checkboxBorderIndeterminateHoveredColor,\n          },\n          [`:hover .${classNames.checkmark}`]: {\n            opacity: '0',\n          },\n        },\n        {\n          [`:hover .${classNames.text}, :focus .${classNames.text}`]: {\n            color: checkboxHoveredTextColor,\n            [HighContrastSelector]: {\n              color: disabled ? 'GrayText' : 'WindowText',\n            },\n          },\n        },\n      ],\n      className,\n    ],\n    input: {\n      position: 'absolute',\n      background: 'none',\n\n      opacity: 0,\n      [`.${IsFocusVisibleClassName} &:focus + label::before`]: {\n        outline: '1px solid ' + theme.palette.neutralSecondary,\n        outlineOffset: '2px',\n        [HighContrastSelector]: {\n          outline: '1px solid WindowText',\n        },\n      },\n    },\n    label: [\n      classNames.label,\n      theme.fonts.medium,\n      {\n        display: 'flex',\n        alignItems: isUsingCustomLabelRender ? 'center' : 'flex-start',\n        cursor: disabled ? 'default' : 'pointer',\n        position: 'relative',\n        userSelect: 'none',\n      },\n      reversed && {\n        flexDirection: 'row-reverse',\n        justifyContent: 'flex-end',\n      },\n      {\n        '&::before': {\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          content: '\"\"',\n          pointerEvents: 'none',\n        },\n      },\n    ],\n    checkbox: [\n      classNames.checkbox,\n      {\n        position: 'relative',\n        display: 'flex',\n        flexShrink: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: MS_CHECKBOX_LABEL_SIZE,\n        width: MS_CHECKBOX_LABEL_SIZE,\n        border: `1px solid ${checkboxBorderColor}`,\n        borderRadius: effects.roundedCorner2,\n        boxSizing: 'border-box',\n        transitionProperty: 'background, border, border-color',\n        transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\n        transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\n\n        /* in case the icon is bigger than the box */\n        overflow: 'hidden',\n        ':after': indeterminate ? indeterminateDotStyles : null,\n        [HighContrastSelector]: {\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n      indeterminate && {\n        borderColor: checkboxBorderIndeterminateColor,\n      },\n      !reversed\n        ? // This margin on the checkbox is for backwards compat. Notably it has the effect where a customRender\n          // is used, there will be only a 4px margin from checkbox to label. The label by default would have\n          // another 4px margin for a total of 8px margin between checkbox and label. We don't combine the two\n          // (and move it into the text) to not incur a breaking change for everyone using custom render atm.\n          {\n            marginRight: 4,\n          }\n        : {\n            marginLeft: 4,\n          },\n      !disabled &&\n        !indeterminate &&\n        checked && {\n          background: checkboxBackgroundChecked,\n          borderColor: checkboxBorderColorChecked,\n          [HighContrastSelector]: {\n            background: 'Highlight',\n            borderColor: 'Highlight',\n          },\n        },\n      disabled && {\n        borderColor: checkboxBorderColorDisabled,\n        [HighContrastSelector]: {\n          borderColor: 'GrayText',\n        },\n      },\n      checked &&\n        disabled && {\n          background: checkboxBackgroundDisabledChecked,\n          borderColor: checkboxBorderColorDisabled,\n          [HighContrastSelector]: {\n            background: 'Window',\n          },\n        },\n    ],\n    checkmark: [\n      classNames.checkmark,\n      {\n        opacity: checked && !indeterminate ? '1' : '0',\n        color: checkmarkFontColor,\n        [HighContrastSelector]: {\n          color: disabled ? 'GrayText' : 'Window',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    ],\n    text: [\n      classNames.text,\n      {\n        color: disabled ? checkboxTextColorDisabled : checkboxTextColor,\n        fontSize: fonts.medium.fontSize,\n        lineHeight: '20px',\n        [HighContrastSelector]: {\n          color: disabled ? 'GrayText' : 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n      !reversed\n        ? {\n            marginLeft: 4,\n          }\n        : {\n            marginRight: 4,\n          },\n    ],\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '@fluentui/utilities';\nimport { CheckboxBase } from './Checkbox.base';\nimport { getStyles } from './Checkbox.styles';\nimport type { ICheckboxProps, ICheckboxStyleProps, ICheckboxStyles } from './Checkbox.types';\n\nexport const Checkbox: React.FunctionComponent<ICheckboxProps> = styled<\n  ICheckboxProps,\n  ICheckboxStyleProps,\n  ICheckboxStyles\n>(CheckboxBase, getStyles, undefined, { scope: 'Checkbox' });\n", "import { IsFocusVisibleClassName } from '../../Utilities';\nimport { RectangleEdge } from '../../Positioning';\nimport {\n  FontWeights,\n  HighContrastSelector,\n  getGlobalClassNames,\n  normalize,\n  HighContrastSelectorWhite,\n  getScreenSelector,\n  ScreenWidthMinMedium,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport type { IDropdownStyles, IDropdownStyleProps } from './Dropdown.types';\nimport type { IStyleFunction } from '../../Utilities';\nimport type { IRawStyle, IStyle } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Dropdown-container',\n  label: 'ms-Dropdown-label',\n  dropdown: 'ms-Dropdown',\n  title: 'ms-Dropdown-title',\n  caretDownWrapper: 'ms-Dropdown-caretDownWrapper',\n  caretDown: 'ms-Dropdown-caretDown',\n  callout: 'ms-Dropdown-callout',\n  panel: 'ms-Dropdown-panel',\n  dropdownItems: 'ms-Dropdown-items',\n  dropdownItem: 'ms-Dropdown-item',\n  dropdownDivider: 'ms-Dropdown-divider',\n  dropdownOptionText: 'ms-Dropdown-optionText',\n  dropdownItemHeader: 'ms-Dropdown-header',\n  titleIsPlaceHolder: 'ms-Dropdown-titleIsPlaceHolder',\n  titleHasError: 'ms-Dropdown-title--hasError',\n};\n\nconst DROPDOWN_HEIGHT = 32;\nconst DROPDOWN_ITEM_HEIGHT = 36;\n\nconst highContrastAdjustMixin = {\n  [`${HighContrastSelector}, ${HighContrastSelectorWhite.replace('@media ', '')}`]: {\n    ...getHighContrastNoAdjustStyle(),\n  },\n};\n\nconst highContrastItemAndTitleStateMixin: IRawStyle = {\n  selectors: {\n    [HighContrastSelector]: {\n      backgroundColor: 'Highlight',\n      borderColor: 'Highlight',\n      color: 'HighlightText',\n    },\n    ['.ms-Checkbox-checkbox']: {\n      [HighContrastSelector]: {\n        borderColor: 'HighlightText',\n      },\n    },\n    ...highContrastAdjustMixin,\n  },\n};\n\nconst highContrastBorderState: IRawStyle = {\n  selectors: {\n    [HighContrastSelector]: {\n      borderColor: 'Highlight',\n    },\n  },\n};\n\nconst MinimumScreenSelector = getScreenSelector(0, ScreenWidthMinMedium);\n\nexport const getStyles: IStyleFunction<IDropdownStyleProps, IDropdownStyles> = props => {\n  const {\n    theme,\n    hasError,\n    hasLabel,\n    className,\n    isOpen,\n    disabled,\n    required,\n    isRenderingPlaceholder,\n    panelClassName,\n    calloutClassName,\n    calloutRenderEdge,\n  } = props;\n\n  if (!theme) {\n    throw new Error('theme is undefined or null in base Dropdown getStyles function.');\n  }\n\n  const globalClassnames = getGlobalClassNames(GlobalClassNames, theme);\n  const { palette, semanticColors, effects, fonts } = theme;\n\n  const rootHoverFocusActiveSelectorNeutralDarkMixin: IStyle = {\n    color: semanticColors.menuItemTextHovered,\n  };\n\n  const rootHoverFocusActiveSelectorNeutralPrimaryMixin: IStyle = {\n    color: semanticColors.menuItemText,\n  };\n\n  const borderColorError: IStyle = {\n    borderColor: semanticColors.errorText,\n  };\n\n  const dropdownItemStyle: IStyle = [\n    globalClassnames.dropdownItem,\n    {\n      backgroundColor: 'transparent',\n      boxSizing: 'border-box',\n      cursor: 'pointer',\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0 8px',\n      width: '100%',\n      minHeight: DROPDOWN_ITEM_HEIGHT,\n      lineHeight: 20,\n      height: 0,\n      position: 'relative',\n      border: '1px solid transparent',\n      borderRadius: 0,\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      textAlign: 'left',\n\n      '.ms-Button-flexContainer': {\n        width: '100%',\n      },\n    },\n  ];\n\n  const dropdownHeaderStyle: IStyle = [\n    globalClassnames.dropdownItemHeader,\n    {\n      ...fonts.medium,\n      fontWeight: FontWeights.semibold,\n      color: semanticColors.menuHeader,\n      background: 'none',\n      backgroundColor: 'transparent',\n      border: 'none',\n      height: DROPDOWN_ITEM_HEIGHT,\n      lineHeight: DROPDOWN_ITEM_HEIGHT,\n      cursor: 'default',\n      padding: '0 8px',\n      userSelect: 'none',\n      textAlign: 'left',\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n  ];\n\n  const selectedItemBackgroundColor = semanticColors.menuItemBackgroundPressed;\n\n  const itemSelectors = (isSelected: boolean = false) => {\n    return {\n      selectors: {\n        '&:hover': [\n          {\n            color: semanticColors.menuItemTextHovered,\n            backgroundColor: !isSelected ? semanticColors.menuItemBackgroundHovered : selectedItemBackgroundColor,\n          },\n          highContrastItemAndTitleStateMixin,\n        ],\n        '&.is-multi-select:hover': [\n          { backgroundColor: !isSelected ? 'transparent' : selectedItemBackgroundColor },\n          highContrastItemAndTitleStateMixin,\n        ],\n        '&:active:hover': [\n          {\n            color: semanticColors.menuItemTextHovered,\n            backgroundColor: !isSelected\n              ? semanticColors.menuItemBackgroundPressed\n              : semanticColors.menuItemBackgroundHovered,\n          },\n          highContrastItemAndTitleStateMixin,\n        ],\n        [`.${IsFocusVisibleClassName} &:focus:after`]: {\n          left: 0,\n          top: 0,\n          bottom: 0,\n          right: 0,\n          [HighContrastSelector]: {\n            inset: '2px',\n          },\n        },\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    };\n  };\n\n  const dropdownItemSelected: IStyle = [\n    ...dropdownItemStyle,\n    {\n      backgroundColor: selectedItemBackgroundColor,\n      color: semanticColors.menuItemTextHovered,\n    },\n    itemSelectors(true),\n    highContrastItemAndTitleStateMixin,\n  ];\n\n  const dropdownItemDisabled: IStyle = [\n    ...dropdownItemStyle,\n    {\n      color: semanticColors.disabledText,\n      cursor: 'default',\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          border: 'none',\n        },\n      },\n    },\n  ];\n\n  const titleOpenBorderRadius =\n    calloutRenderEdge === RectangleEdge.bottom\n      ? `${effects.roundedCorner2} ${effects.roundedCorner2} 0 0`\n      : `0 0 ${effects.roundedCorner2} ${effects.roundedCorner2}`;\n\n  const calloutOpenBorderRadius =\n    calloutRenderEdge === RectangleEdge.bottom\n      ? `0 0 ${effects.roundedCorner2} ${effects.roundedCorner2}`\n      : `${effects.roundedCorner2} ${effects.roundedCorner2} 0 0`;\n\n  return {\n    root: [globalClassnames.root, className],\n    label: globalClassnames.label,\n    dropdown: [\n      globalClassnames.dropdown,\n      normalize,\n      fonts.medium,\n      {\n        color: semanticColors.menuItemText,\n        borderColor: semanticColors.focusBorder,\n        position: 'relative',\n        outline: 0,\n        userSelect: 'none',\n        selectors: {\n          ['&:hover .' + globalClassnames.title]: [\n            !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\n            { borderColor: isOpen ? palette.neutralSecondary : palette.neutralPrimary },\n            highContrastBorderState,\n          ],\n          ['&:focus .' + globalClassnames.title]: [\n            !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\n            { selectors: { [HighContrastSelector]: { color: 'Highlight' } } },\n          ],\n\n          ['&:focus:after']: [\n            {\n              pointerEvents: 'none',\n              content: \"''\",\n              position: 'absolute',\n              boxSizing: 'border-box',\n              top: '0px',\n              left: '0px',\n              width: '100%',\n              height: '100%',\n              // see https://github.com/microsoft/fluentui/pull/9182 for semantic color disc\n              border: !disabled ? `2px solid ${palette.themePrimary}` : 'none',\n              borderRadius: '2px',\n\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'Highlight',\n                },\n              },\n            },\n          ],\n          ['&:active .' + globalClassnames.title]: [\n            !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\n            { borderColor: palette.themePrimary },\n            highContrastBorderState,\n          ],\n\n          ['&:hover .' + globalClassnames.caretDown]: !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n          ['&:focus .' + globalClassnames.caretDown]: [\n            !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n            { selectors: { [HighContrastSelector]: { color: 'Highlight' } } },\n          ],\n          ['&:active .' + globalClassnames.caretDown]: !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n\n          ['&:hover .' + globalClassnames.titleIsPlaceHolder]:\n            !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n          ['&:focus .' + globalClassnames.titleIsPlaceHolder]:\n            !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n          ['&:active .' + globalClassnames.titleIsPlaceHolder]:\n            !disabled && rootHoverFocusActiveSelectorNeutralPrimaryMixin,\n\n          ['&:hover .' + globalClassnames.titleHasError]: borderColorError,\n          ['&:active .' + globalClassnames.titleHasError]: borderColorError,\n        },\n      },\n      isOpen && 'is-open',\n      disabled && 'is-disabled',\n      required && 'is-required',\n      required &&\n        !hasLabel && {\n          selectors: {\n            ':before': {\n              content: `'*'`,\n              color: semanticColors.errorText,\n              position: 'absolute',\n              top: -5,\n              right: -10,\n            },\n            [HighContrastSelector]: {\n              selectors: {\n                ':after': {\n                  right: -14, // moving the * 4 pixel to right to alleviate border clipping in HC mode.\n                },\n              },\n            },\n          },\n        },\n    ],\n    title: [\n      globalClassnames.title,\n      normalize,\n      {\n        backgroundColor: semanticColors.inputBackground,\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderColor: semanticColors.inputBorder,\n        borderRadius: isOpen ? titleOpenBorderRadius : effects.roundedCorner2,\n        cursor: 'pointer',\n        display: 'block',\n        height: DROPDOWN_HEIGHT,\n        lineHeight: DROPDOWN_HEIGHT - 2,\n        padding: `0 28px 0 8px`,\n        position: 'relative',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n      },\n      isRenderingPlaceholder && [globalClassnames.titleIsPlaceHolder, { color: semanticColors.inputPlaceholderText }],\n      hasError && [globalClassnames.titleHasError, borderColorError],\n      disabled && {\n        backgroundColor: semanticColors.disabledBackground,\n        border: 'none',\n        color: semanticColors.disabledText,\n        cursor: 'default',\n        selectors: {\n          [HighContrastSelector]: {\n            border: '1px solid GrayText',\n            color: 'GrayText',\n            backgroundColor: 'Window',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n    ],\n    caretDownWrapper: [\n      globalClassnames.caretDownWrapper,\n      {\n        height: DROPDOWN_HEIGHT,\n        lineHeight: DROPDOWN_HEIGHT - 2, // height minus the border\n        paddingTop: 1,\n        position: 'absolute',\n        right: 8,\n        top: 0,\n      },\n      !disabled && {\n        cursor: 'pointer',\n      },\n    ],\n    caretDown: [\n      globalClassnames.caretDown,\n      { color: palette.neutralSecondary, fontSize: fonts.small.fontSize, pointerEvents: 'none' },\n      disabled && {\n        color: semanticColors.disabledText,\n        selectors: {\n          [HighContrastSelector]: { color: 'GrayText', ...getHighContrastNoAdjustStyle() },\n        },\n      },\n    ],\n    errorMessage: { color: semanticColors.errorText, ...theme.fonts.small, paddingTop: 5 },\n    callout: [\n      globalClassnames.callout,\n      {\n        boxShadow: effects.elevation8,\n        borderRadius: calloutOpenBorderRadius,\n        selectors: {\n          ['.ms-Callout-main']: { borderRadius: calloutOpenBorderRadius },\n        },\n      },\n      calloutClassName,\n    ],\n    dropdownItemsWrapper: { selectors: { '&:focus': { outline: 0 } } },\n    dropdownItems: [globalClassnames.dropdownItems, { display: 'block' }],\n    dropdownItem: [...dropdownItemStyle, itemSelectors()],\n    dropdownItemSelected,\n    dropdownItemDisabled,\n    dropdownItemSelectedAndDisabled: [dropdownItemSelected, dropdownItemDisabled, { backgroundColor: 'transparent' }],\n    dropdownItemHidden: [...dropdownItemStyle, { display: 'none' }],\n    dropdownDivider: [globalClassnames.dropdownDivider, { height: 1, backgroundColor: semanticColors.bodyDivider }],\n    dropdownDividerHidden: [globalClassnames.dropdownDivider, { display: 'none' }],\n    dropdownOptionText: [\n      globalClassnames.dropdownOptionText,\n      {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        minWidth: 0,\n        maxWidth: '100%',\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n        margin: '1px',\n      },\n    ],\n    dropdownItemHeader: dropdownHeaderStyle,\n    dropdownItemHeaderHidden: [...dropdownHeaderStyle, { display: 'none' }],\n    subComponentStyles: {\n      label: { root: { display: 'inline-block' } },\n      multiSelectItem: {\n        root: {\n          padding: 0,\n        },\n        label: {\n          alignSelf: 'stretch',\n          padding: '0 8px',\n          width: '100%',\n        },\n        input: {\n          selectors: {\n            [`.${IsFocusVisibleClassName} &:focus + label::before`]: {\n              outlineOffset: '0px',\n            },\n          },\n        },\n      },\n      panel: {\n        root: [panelClassName],\n        main: {\n          selectors: {\n            // In case of extra small screen sizes\n            [MinimumScreenSelector]: {\n              // panelWidth xs\n              width: 272,\n            },\n          },\n        },\n        contentInner: { padding: '0 0 20px' },\n      },\n    },\n  };\n};\n", "import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DropdownBase } from './Dropdown.base';\nimport { getStyles } from './Dropdown.styles';\nimport type { IDropdownProps, IDropdownStyleProps, IDropdownStyles } from './Dropdown.types';\n\nexport const Dropdown: React.FunctionComponent<IDropdownProps> = styled<\n  IDropdownProps,\n  IDropdownStyleProps,\n  IDropdownStyles\n>(DropdownBase, getStyles, undefined, {\n  scope: 'Dropdown',\n});\nDropdown.displayName = 'Dropdown';\n"],
  "mappings": "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",
  "names": ["React", "React", "React", "RectangleEdge", "Position", "_a", "_a", "styleName", "iconName", "_a", "_a", "_b", "_d", "_c", "CommunicationColors", "NeutralColors", "SharedColors", "Depths", "MotionDurations", "MotionTimings", "MotionAnimations", "_createAnimation", "LocalizedFontNames", "LocalizedFontFamilies", "FontSizes", "FontWeights", "IconFontSizes", "_a", "_b", "_a", "ZIndexes", "_c", "_d", "_e", "_a", "_b", "classNames", "__assign", "_a", "_a", "_b", "loadTheme", "_c", "_a", "_a", "_a", "_b", "_c", "_d", "_e", "classNames", "classNames", "_a", "React", "PortalCompatContext", "createContext", "undefined", "portalCompatContextDefaultValue", "PortalCompatContextProvider", "Provider", "usePortalCompat", "_React_useContext", "useContext", "React", "React", "getClassNames", "_a", "classNames", "_b", "_c", "GlobalClassNames", "getStyles", "classNames", "getStyles", "getClassNames", "_a", "_b", "_c", "classNames", "GlobalClassNames", "getStyles", "classNames", "getStyles", "React", "_a", "_a", "React", "React", "COMPONENT_NAME", "DEFAULT_PROPS", "_a", "_b", "React", "React", "IconType", "React", "ImageFit", "ImageCoverStyle", "ImageLoadState", "getClassNames", "_a", "_b", "classNames", "GlobalClassNames", "getStyles", "classNames", "window", "getStyles", "React", "getStyles", "_a", "getClassNames", "IconBase", "_a", "classNames", "getStyles", "React", "React", "React", "ContextualMenuItemType", "React", "FocusZoneDirection", "FocusZone", "_a", "_b", "_c", "_d", "React", "classNames", "_a", "ContextualMenuItemBase", "_a", "_b", "_c", "_d", "_e", "MediumScreenSelector", "_a", "GlobalClassNames", "classNames", "_b", "_c", "_d", "React", "React", "ContextualMenuItemWrapper", "_a", "_a", "KeytipEvents", "KeytipManager", "React", "_b", "_a", "React", "_a", "ContextualMenuAnchor", "_a", "classNames", "_b", "React", "ContextualMenuButton", "_a", "classNames", "_b", "onItemMouseDown", "React", "getStyles", "getClassNames", "React", "getClassNames", "classNames", "getStyles", "ContextualMenuSplitButton", "_a", "_b", "classNames", "getDividerClassNames", "onItemMouseDown", "React", "React", "React", "BaseDecorator", "ResponsiveMode", "_a", "_a", "React", "getClassNames", "DEFAULT_PROPS", "COMPONENT_NAME", "_a", "_b", "_c", "_d", "_e", "items", "hasCheckmarks", "hasIcons", "adjustedFocusZoneProps", "getItemClassNames", "styles", "classNames", "title", "id", "onRenderSubMenu", "GlobalClassNames", "getStyles", "classNames", "getStyles", "classNames", "_a", "_b", "TouchIdleDelay", "COMPONENT_NAME", "BaseButton", "_a", "_b", "_c", "_d", "props", "getClassNames", "_e", "Button", "getSplitButtonClassNames", "classNames", "ElementType", "ButtonType", "React", "React", "getStyles", "_a", "_b", "getStyles", "splitButtonDividerBaseStyles", "_a", "_b", "_c", "_d", "_e", "_a", "_b", "_c", "_d", "_e", "getStyles", "DefaultButton", "_a", "_b", "getStyles", "React", "DEFAULT_BUTTON_HEIGHT", "getStyles", "_a", "_b", "_c", "ActionButton", "_a", "getStyles", "React", "getStyles", "_a", "_b", "_c", "_d", "_e", "CompoundButton", "_a", "_b", "getStyles", "React", "getStyles", "_a", "IconButton", "_a", "getStyles", "React", "PrimaryButton", "Button", "React", "getStyles", "_a", "_b", "_c", "_d", "_e", "CommandBarButton", "_a", "getStyles", "React", "getStyles", "MessageBarButton", "_a", "getStyles", "SelectableOptionMenuItemType", "DropdownSizePosCache", "_a", "React", "getClassNames", "LabelBase", "_a", "_b", "classNames", "getStyles", "_a", "getStyles", "React", "React", "getClassNames", "OverlayBase", "_a", "classNames", "GlobalClassNames", "getStyles", "classNames", "_a", "getStyles", "PanelType", "getClassNames", "COMPONENT_NAME", "PanelVisibilityState", "PanelBase", "props", "_a", "_b", "_c", "_d", "_e", "GlobalClassNames", "_a", "getStyles", "_e", "classNames", "_b", "_c", "_d", "getStyles", "React", "getClassNames", "_a", "_b", "_c", "classNames", "useComponentRef", "GlobalClassNames", "getStyles", "classNames", "_a", "_b", "_c", "_d", "_e", "getStyles", "COMPONENT_NAME", "getClassNames", "DEFAULT_PROPS", "_a", "_b", "DropdownInternal", "options", "multiSelect", "props", "_c", "_d", "_e", "GlobalClassNames", "_a", "_b", "_c", "_d", "getStyles", "_e", "getStyles"]
}
